{
  "openapi": "3.0.1",
  "info": {
    "title": "DataStorage Service",
    "description": "# AssetWise Information Management, DataStorage Service\r\n\r\nThe DataStorage REST API provides a familiar programmers interface to all AssetWise Information Management data entities. \r\n\r\nThe path takes an optional `{context}` (aka Community). If it isn't supplied, or rather when the default of `0` is supplied, then the context will in inferred from the current Session.\r\nWhen the Contexts is suppied it must match that of the Session. \r\n\r\nResults is in either `xml` or `json` format. The `xml` format provides a little more matadata but are otherwise structurally the same as the `json`.\r\n\r\nClient side transactions are not supported in an attepts to honod the statless design of http. The service does however support batching of transactions via the EqlCommand interface.\r\n\r\n",
    "version": "v1.0.0"
  },
  "paths": {
    "/ api /{context}/TagInstallableItems/{id}": {
      "get": {
        "tags": [
          "TagInstallableItems"
        ],
        "summary": "Retrieves a TagInstallableItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/TagInstallableItemLubrications/{id}": {
      "get": {
        "tags": [
          "TagInstallableItemLubrications"
        ],
        "summary": "Retrieves a TagInstallableItemLubrication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Retrieves a Task.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/TaskItems/{id}": {
      "get": {
        "tags": [
          "TaskItems"
        ],
        "summary": "Retrieves a TaskItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/TaskOrders/{id}": {
      "get": {
        "tags": [
          "TaskOrders"
        ],
        "summary": "Retrieves a TaskOrder.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/TaskOrderItems/{id}": {
      "get": {
        "tags": [
          "TaskOrderItems"
        ],
        "summary": "Retrieves a TaskOrderItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Templates/{id}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieves a Template.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Transmittals/{id}": {
      "get": {
        "tags": [
          "Transmittals"
        ],
        "summary": "Retrieves a Transmittal.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Units/{id}": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Retrieves a Unit.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/UnitSystems/{id}": {
      "get": {
        "tags": [
          "UnitSystems"
        ],
        "summary": "Retrieves a UnitSystem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/UrlPages/{id}": {
      "get": {
        "tags": [
          "UrlPages"
        ],
        "summary": "Retrieves a UrlPage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/UserAccounts/{id}": {
      "get": {
        "tags": [
          "UserAccounts"
        ],
        "summary": "Retrieves a UserAccount.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/VerticalMenus/{id}": {
      "get": {
        "tags": [
          "VerticalMenus"
        ],
        "summary": "Retrieves a VerticalMenu.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/VerticalMenuItems/{id}": {
      "get": {
        "tags": [
          "VerticalMenuItems"
        ],
        "summary": "Retrieves a VerticalMenuItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/VirtualItems/{id}": {
      "get": {
        "tags": [
          "VirtualItems"
        ],
        "summary": "Retrieves a VirtualItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/VirtualItemGroups/{id}": {
      "get": {
        "tags": [
          "VirtualItemGroups"
        ],
        "summary": "Retrieves a VirtualItemGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/WorkOrders/{id}": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Retrieves a WorkOrder.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/WorkTasks/{id}": {
      "get": {
        "tags": [
          "WorkTasks"
        ],
        "summary": "Retrieves a WorkTask.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Retrieve": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Retrieves an Object",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name of the object to retieve",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name of the object to retieve"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The unique id of the object to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique id of the object to retrieve",
              "format": "int32"
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The Context Guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Context Guid.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The values to include. See Retieve Syntax for more detail on the options.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "description": "The values to include. See Retieve Syntax for more detail on the options.",
                "default": "Header"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Search": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Retrieves an object.",
        "parameters": [
          {
            "name": "startAt",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "default": "START WITH Object SELECT Id, Type WHERE 1=1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful responses"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Client Errors"
          },
          "500": {
            "description": "Server Errors"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Maps/{id}": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Retrieves a Map.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/MapLayers/{id}": {
      "get": {
        "tags": [
          "MapLayers"
        ],
        "summary": "Retrieves a MapLayer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Methods/{id}": {
      "get": {
        "tags": [
          "Methods"
        ],
        "summary": "Retrieves a Method.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/MethodDefs/{id}": {
      "get": {
        "tags": [
          "MethodDefs"
        ],
        "summary": "Retrieves a MethodDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Modifications/{id}": {
      "get": {
        "tags": [
          "Modifications"
        ],
        "summary": "Retrieves a Modification.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Modules/{id}": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Retrieves a Module.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Namespaces/{id}": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Retrieves a Namespace.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Notes/{id}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieves a Note.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/NotificationDefs/{id}": {
      "get": {
        "tags": [
          "NotificationDefs"
        ],
        "summary": "Retrieves a NotificationDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Objects/{id}": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Retrieves a Object.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ObjectDatasets/{id}": {
      "get": {
        "tags": [
          "ObjectDatasets"
        ],
        "summary": "Retrieves a ObjectDataset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ObjectTrends/{id}": {
      "get": {
        "tags": [
          "ObjectTrends"
        ],
        "summary": "Retrieves a ObjectTrend.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Organizations/{id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Retrieves a Organization.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/OrganizationMembers/{id}": {
      "get": {
        "tags": [
          "OrganizationMembers"
        ],
        "summary": "Retrieves a OrganizationMember.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Parameters/{id}": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Retrieves a Parameter.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Permissions/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Retrieves a Permission.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/PermissionDsas/{id}": {
      "get": {
        "tags": [
          "PermissionDsas"
        ],
        "summary": "Retrieves a PermissionDsa.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Persons/{id}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Retrieves a Person.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/PhysicalItems/{id}": {
      "get": {
        "tags": [
          "PhysicalItems"
        ],
        "summary": "Retrieves a PhysicalItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Pricelists/{id}": {
      "get": {
        "tags": [
          "Pricelists"
        ],
        "summary": "Retrieves a Pricelist.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/PricelistItems/{id}": {
      "get": {
        "tags": [
          "PricelistItems"
        ],
        "summary": "Retrieves a PricelistItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Printers/{id}": {
      "get": {
        "tags": [
          "Printers"
        ],
        "summary": "Retrieves a Printer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/PrintTemplates/{id}": {
      "get": {
        "tags": [
          "PrintTemplates"
        ],
        "summary": "Retrieves a PrintTemplate.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Programs/{id}": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Retrieves a Program.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ProgramItems/{id}": {
      "get": {
        "tags": [
          "ProgramItems"
        ],
        "summary": "Retrieves a ProgramItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieves a Project.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ProjectWiseItems/{id}": {
      "get": {
        "tags": [
          "ProjectWiseItems"
        ],
        "summary": "Retrieves a ProjectWiseItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Prototypes/{id}": {
      "get": {
        "tags": [
          "Prototypes"
        ],
        "summary": "Retrieves a Prototype.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/PublisherPackages/{id}": {
      "get": {
        "tags": [
          "PublisherPackages"
        ],
        "summary": "Retrieves a PublisherPackage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/PublisherPackageContents/{id}": {
      "get": {
        "tags": [
          "PublisherPackageContents"
        ],
        "summary": "Retrieves a PublisherPackageContent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Questions/{id}": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Retrieves a Question.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QuestionGroups/{id}": {
      "get": {
        "tags": [
          "QuestionGroups"
        ],
        "summary": "Retrieves a QuestionGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QueueFtrs/{id}": {
      "get": {
        "tags": [
          "QueueFtrs"
        ],
        "summary": "Retrieves a QueueFtr.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QueueJobs/{id}": {
      "get": {
        "tags": [
          "QueueJobs"
        ],
        "summary": "Retrieves a QueueJob.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QueueMails/{id}": {
      "get": {
        "tags": [
          "QueueMails"
        ],
        "summary": "Retrieves a QueueMail.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QueuePrints/{id}": {
      "get": {
        "tags": [
          "QueuePrints"
        ],
        "summary": "Retrieves a QueuePrint.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QueuePublishers/{id}": {
      "get": {
        "tags": [
          "QueuePublishers"
        ],
        "summary": "Retrieves a QueuePublisher.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QueueRenditions/{id}": {
      "get": {
        "tags": [
          "QueueRenditions"
        ],
        "summary": "Retrieves a QueueRendition.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/QueueStorages/{id}": {
      "get": {
        "tags": [
          "QueueStorages"
        ],
        "summary": "Retrieves a QueueStorage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Relationships/{id}": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "summary": "Retrieves a Relationship.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/RelationshipTypes/{id}": {
      "get": {
        "tags": [
          "RelationshipTypes"
        ],
        "summary": "Retrieves a RelationshipType.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Reports/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieves a Report.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Repositories/{id}": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "Retrieves a Repository.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/RepositoryGroups/{id}": {
      "get": {
        "tags": [
          "RepositoryGroups"
        ],
        "summary": "Retrieves a RepositoryGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Restrictions/{id}": {
      "get": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Retrieves a Restriction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/RestrictionClasss/{id}": {
      "get": {
        "tags": [
          "RestrictionClasss"
        ],
        "summary": "Retrieves a RestrictionClass.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/RevisionRules/{id}": {
      "get": {
        "tags": [
          "RevisionRules"
        ],
        "summary": "Retrieves a RevisionRule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Retrieves a Role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ScheduleDefs/{id}": {
      "get": {
        "tags": [
          "ScheduleDefs"
        ],
        "summary": "Retrieves a ScheduleDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Scopes/{id}": {
      "get": {
        "tags": [
          "Scopes"
        ],
        "summary": "Retrieves a Scope.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ScopeInvites/{id}": {
      "get": {
        "tags": [
          "ScopeInvites"
        ],
        "summary": "Retrieves a ScopeInvite.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ScopeServices/{id}": {
      "get": {
        "tags": [
          "ScopeServices"
        ],
        "summary": "Retrieves a ScopeService.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SearchTables/{id}": {
      "get": {
        "tags": [
          "SearchTables"
        ],
        "summary": "Retrieves a SearchTable.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SerializedItems/{id}": {
      "get": {
        "tags": [
          "SerializedItems"
        ],
        "summary": "Retrieves a SerializedItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Servers/{id}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Retrieves a Server.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ServiceInstances/{id}": {
      "get": {
        "tags": [
          "ServiceInstances"
        ],
        "summary": "Retrieves a ServiceInstance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ServiceRequests/{id}": {
      "get": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Retrieves a ServiceRequest.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ServiceRequestTemplates/{id}": {
      "get": {
        "tags": [
          "ServiceRequestTemplates"
        ],
        "summary": "Retrieves a ServiceRequestTemplate.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Sessions/{id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Retrieves a Session.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SetPoints/{id}": {
      "get": {
        "tags": [
          "SetPoints"
        ],
        "summary": "Retrieves a SetPoint.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SettingDefs/{id}": {
      "get": {
        "tags": [
          "SettingDefs"
        ],
        "summary": "Retrieves a SettingDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SharePointItems/{id}": {
      "get": {
        "tags": [
          "SharePointItems"
        ],
        "summary": "Retrieves a SharePointItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Sites/{id}": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Retrieves a Site.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Skills/{id}": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "Retrieves a Skill.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SnapshotDefs/{id}": {
      "get": {
        "tags": [
          "SnapshotDefs"
        ],
        "summary": "Retrieves a SnapshotDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SpatialConnections/{id}": {
      "get": {
        "tags": [
          "SpatialConnections"
        ],
        "summary": "Retrieves a SpatialConnection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SpatialConnectionTypes/{id}": {
      "get": {
        "tags": [
          "SpatialConnectionTypes"
        ],
        "summary": "Retrieves a SpatialConnectionType.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SpatialLayers/{id}": {
      "get": {
        "tags": [
          "SpatialLayers"
        ],
        "summary": "Retrieves a SpatialLayer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/States/{id}": {
      "get": {
        "tags": [
          "States"
        ],
        "summary": "Retrieves a State.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/StateMachines/{id}": {
      "get": {
        "tags": [
          "StateMachines"
        ],
        "summary": "Retrieves a StateMachine.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/StateTransitions/{id}": {
      "get": {
        "tags": [
          "StateTransitions"
        ],
        "summary": "Retrieves a StateTransition.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/StorageDevices/{id}": {
      "get": {
        "tags": [
          "StorageDevices"
        ],
        "summary": "Retrieves a StorageDevice.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/StorageRules/{id}": {
      "get": {
        "tags": [
          "StorageRules"
        ],
        "summary": "Retrieves a StorageRule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/StorageRuleGroups/{id}": {
      "get": {
        "tags": [
          "StorageRuleGroups"
        ],
        "summary": "Retrieves a StorageRuleGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Subscribers/{id}": {
      "get": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Retrieves a Subscriber.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Retrieves a Subscription.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Surveies/{id}": {
      "get": {
        "tags": [
          "Surveies"
        ],
        "summary": "Retrieves a Survey.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SurveyAnswers/{id}": {
      "get": {
        "tags": [
          "SurveyAnswers"
        ],
        "summary": "Retrieves a SurveyAnswer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SurveyInstances/{id}": {
      "get": {
        "tags": [
          "SurveyInstances"
        ],
        "summary": "Retrieves a SurveyInstance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SurveyInstanceAnswers/{id}": {
      "get": {
        "tags": [
          "SurveyInstanceAnswers"
        ],
        "summary": "Retrieves a SurveyInstanceAnswer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SurveyQuestions/{id}": {
      "get": {
        "tags": [
          "SurveyQuestions"
        ],
        "summary": "Retrieves a SurveyQuestion.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SurveySections/{id}": {
      "get": {
        "tags": [
          "SurveySections"
        ],
        "summary": "Retrieves a SurveySection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SyncScopes/{id}": {
      "get": {
        "tags": [
          "SyncScopes"
        ],
        "summary": "Retrieves a SyncScope.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/SystemDatas/{id}": {
      "get": {
        "tags": [
          "SystemDatas"
        ],
        "summary": "Retrieves a SystemData.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Tags/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Retrieves a Tag.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Acts/{id}": {
      "get": {
        "tags": [
          "Acts"
        ],
        "summary": "Retrieves a Act.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ActivityTypeSets/{id}": {
      "get": {
        "tags": [
          "ActivityTypeSets"
        ],
        "summary": "Retrieves a ActivityTypeSet.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ActParts/{id}": {
      "get": {
        "tags": [
          "ActParts"
        ],
        "summary": "Retrieves a ActPart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AlternativeNumberDefs/{id}": {
      "get": {
        "tags": [
          "AlternativeNumberDefs"
        ],
        "summary": "Retrieves a AlternativeNumberDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Answers/{id}": {
      "get": {
        "tags": [
          "Answers"
        ],
        "summary": "Retrieves a Answer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Assemblies/{id}": {
      "get": {
        "tags": [
          "Assemblies"
        ],
        "summary": "Retrieves a Assembly.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AttributeDefs/{id}": {
      "get": {
        "tags": [
          "AttributeDefs"
        ],
        "summary": "Retrieves a AttributeDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AttributeDomainSources/{id}": {
      "get": {
        "tags": [
          "AttributeDomainSources"
        ],
        "summary": "Retrieves a AttributeDomainSource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AttributeGroups/{id}": {
      "get": {
        "tags": [
          "AttributeGroups"
        ],
        "summary": "Retrieves a AttributeGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AttributeTypeDefs/{id}": {
      "get": {
        "tags": [
          "AttributeTypeDefs"
        ],
        "summary": "Retrieves a AttributeTypeDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AttributeUnits/{id}": {
      "get": {
        "tags": [
          "AttributeUnits"
        ],
        "summary": "Retrieves a AttributeUnit.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AttributeValueLists/{id}": {
      "get": {
        "tags": [
          "AttributeValueLists"
        ],
        "summary": "Retrieves a AttributeValueList.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Automations/{id}": {
      "get": {
        "tags": [
          "Automations"
        ],
        "summary": "Retrieves a Automation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/AutomationActionDefs/{id}": {
      "get": {
        "tags": [
          "AutomationActionDefs"
        ],
        "summary": "Retrieves a AutomationActionDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Budgets/{id}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Retrieves a Budget.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ChangeRequests/{id}": {
      "get": {
        "tags": [
          "ChangeRequests"
        ],
        "summary": "Retrieves a ChangeRequest.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Classs/{id}": {
      "get": {
        "tags": [
          "Classs"
        ],
        "summary": "Retrieves a Class.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ClassActivities/{id}": {
      "get": {
        "tags": [
          "ClassActivities"
        ],
        "summary": "Retrieves a ClassActivity.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ClassAttributes/{id}": {
      "get": {
        "tags": [
          "ClassAttributes"
        ],
        "summary": "Retrieves a ClassAttribute.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ClassGroups/{id}": {
      "get": {
        "tags": [
          "ClassGroups"
        ],
        "summary": "Retrieves a ClassGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/CodeAssemblies/{id}": {
      "get": {
        "tags": [
          "CodeAssemblies"
        ],
        "summary": "Retrieves a CodeAssembly.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/CommercialContracts/{id}": {
      "get": {
        "tags": [
          "CommercialContracts"
        ],
        "summary": "Retrieves a CommercialContract.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Conditions/{id}": {
      "get": {
        "tags": [
          "Conditions"
        ],
        "summary": "Retrieves a Condition.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ContractItems/{id}": {
      "get": {
        "tags": [
          "ContractItems"
        ],
        "summary": "Retrieves a ContractItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/CopyPackages/{id}": {
      "get": {
        "tags": [
          "CopyPackages"
        ],
        "summary": "Retrieves a CopyPackage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/CopyPackageInstances/{id}": {
      "get": {
        "tags": [
          "CopyPackageInstances"
        ],
        "summary": "Retrieves a CopyPackageInstance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/CostCategories/{id}": {
      "get": {
        "tags": [
          "CostCategories"
        ],
        "summary": "Retrieves a CostCategory.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DbEvents/{id}": {
      "get": {
        "tags": [
          "DbEvents"
        ],
        "summary": "Retrieves a DbEvent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DeviationWaivers/{id}": {
      "get": {
        "tags": [
          "DeviationWaivers"
        ],
        "summary": "Retrieves a DeviationWaiver.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Dimensions/{id}": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "summary": "Retrieves a Dimension.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DirectoryEntries/{id}": {
      "get": {
        "tags": [
          "DirectoryEntries"
        ],
        "summary": "Retrieves a DirectoryEntry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DispositionOrders/{id}": {
      "get": {
        "tags": [
          "DispositionOrders"
        ],
        "summary": "Retrieves a DispositionOrder.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DistributionItems/{id}": {
      "get": {
        "tags": [
          "DistributionItems"
        ],
        "summary": "Retrieves a DistributionItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DistributionLists/{id}": {
      "get": {
        "tags": [
          "DistributionLists"
        ],
        "summary": "Retrieves a DistributionList.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DistributionOrders/{id}": {
      "get": {
        "tags": [
          "DistributionOrders"
        ],
        "summary": "Retrieves a DistributionOrder.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DistributionReasons/{id}": {
      "get": {
        "tags": [
          "DistributionReasons"
        ],
        "summary": "Retrieves a DistributionReason.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Documents/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Retrieves a Document.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/DocumentCopies/{id}": {
      "get": {
        "tags": [
          "DocumentCopies"
        ],
        "summary": "Retrieves a DocumentCopy.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Engines/{id}": {
      "get": {
        "tags": [
          "Engines"
        ],
        "summary": "Retrieves a Engine.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/EntityMetadatas/{id}": {
      "get": {
        "tags": [
          "EntityMetadatas"
        ],
        "summary": "Retrieves a EntityMetadata.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieves a Event.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExorAssets/{id}": {
      "get": {
        "tags": [
          "ExorAssets"
        ],
        "summary": "Retrieves a ExorAsset.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExorDatums/{id}": {
      "get": {
        "tags": [
          "ExorDatums"
        ],
        "summary": "Retrieves a ExorDatum.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExorGroupOfGroupss/{id}": {
      "get": {
        "tags": [
          "ExorGroupOfGroupss"
        ],
        "summary": "Retrieves a ExorGroupOfGroups.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExorLinearGroups/{id}": {
      "get": {
        "tags": [
          "ExorLinearGroups"
        ],
        "summary": "Retrieves a ExorLinearGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExorNodes/{id}": {
      "get": {
        "tags": [
          "ExorNodes"
        ],
        "summary": "Retrieves a ExorNode.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExorNonLinearGroups/{id}": {
      "get": {
        "tags": [
          "ExorNonLinearGroups"
        ],
        "summary": "Retrieves a ExorNonLinearGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExternalAttributeDefs/{id}": {
      "get": {
        "tags": [
          "ExternalAttributeDefs"
        ],
        "summary": "Retrieves a ExternalAttributeDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExternalObjects/{id}": {
      "get": {
        "tags": [
          "ExternalObjects"
        ],
        "summary": "Retrieves a ExternalObject.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/ExternalSystems/{id}": {
      "get": {
        "tags": [
          "ExternalSystems"
        ],
        "summary": "Retrieves a ExternalSystem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Retrieves a File.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Fileplans/{id}": {
      "get": {
        "tags": [
          "Fileplans"
        ],
        "summary": "Retrieves a Fileplan.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FinancialYears/{id}": {
      "get": {
        "tags": [
          "FinancialYears"
        ],
        "summary": "Retrieves a FinancialYear.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Folders/{id}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Retrieves a Folder.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Forms/{id}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Retrieves a Form.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormBindings/{id}": {
      "get": {
        "tags": [
          "FormBindings"
        ],
        "summary": "Retrieves a FormBinding.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormCollections/{id}": {
      "get": {
        "tags": [
          "FormCollections"
        ],
        "summary": "Retrieves a FormCollection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormControls/{id}": {
      "get": {
        "tags": [
          "FormControls"
        ],
        "summary": "Retrieves a FormControl.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormControlEvents/{id}": {
      "get": {
        "tags": [
          "FormControlEvents"
        ],
        "summary": "Retrieves a FormControlEvent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormControlScripts/{id}": {
      "get": {
        "tags": [
          "FormControlScripts"
        ],
        "summary": "Retrieves a FormControlScript.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormControlScriptActions/{id}": {
      "get": {
        "tags": [
          "FormControlScriptActions"
        ],
        "summary": "Retrieves a FormControlScriptAction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormControlScriptConditions/{id}": {
      "get": {
        "tags": [
          "FormControlScriptConditions"
        ],
        "summary": "Retrieves a FormControlScriptCondition.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormDefinitions/{id}": {
      "get": {
        "tags": [
          "FormDefinitions"
        ],
        "summary": "Retrieves a FormDefinition.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormFormCollections/{id}": {
      "get": {
        "tags": [
          "FormFormCollections"
        ],
        "summary": "Retrieves a FormFormCollection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormListWheres/{id}": {
      "get": {
        "tags": [
          "FormListWheres"
        ],
        "summary": "Retrieves a FormListWhere.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormPropertyBindings/{id}": {
      "get": {
        "tags": [
          "FormPropertyBindings"
        ],
        "summary": "Retrieves a FormPropertyBinding.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/FormStyles/{id}": {
      "get": {
        "tags": [
          "FormStyles"
        ],
        "summary": "Retrieves a FormStyle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Geometries/{id}": {
      "get": {
        "tags": [
          "Geometries"
        ],
        "summary": "Retrieves a Geometry.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/GroupedVirtualItems/{id}": {
      "get": {
        "tags": [
          "GroupedVirtualItems"
        ],
        "summary": "Retrieves a GroupedVirtualItem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/HostInstances/{id}": {
      "get": {
        "tags": [
          "HostInstances"
        ],
        "summary": "Retrieves a HostInstance.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/IdentityMappings/{id}": {
      "get": {
        "tags": [
          "IdentityMappings"
        ],
        "summary": "Retrieves a IdentityMapping.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/IdentityMappingDefs/{id}": {
      "get": {
        "tags": [
          "IdentityMappingDefs"
        ],
        "summary": "Retrieves a IdentityMappingDef.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/IdentityProviders/{id}": {
      "get": {
        "tags": [
          "IdentityProviders"
        ],
        "summary": "Retrieves a IdentityProvider.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Intents/{id}": {
      "get": {
        "tags": [
          "Intents"
        ],
        "summary": "Retrieves a Intent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Interfaces/{id}": {
      "get": {
        "tags": [
          "Interfaces"
        ],
        "summary": "Retrieves a Interface.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/JobTypes/{id}": {
      "get": {
        "tags": [
          "JobTypes"
        ],
        "summary": "Retrieves a JobType.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Keywords/{id}": {
      "get": {
        "tags": [
          "Keywords"
        ],
        "summary": "Retrieves a Keyword.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/KeywordGroups/{id}": {
      "get": {
        "tags": [
          "KeywordGroups"
        ],
        "summary": "Retrieves a KeywordGroup.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/KindOfQuantities/{id}": {
      "get": {
        "tags": [
          "KindOfQuantities"
        ],
        "summary": "Retrieves a KindOfQuantity.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/LinearElements/{id}": {
      "get": {
        "tags": [
          "LinearElements"
        ],
        "summary": "Retrieves a LinearElement.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/LinearElementTypes/{id}": {
      "get": {
        "tags": [
          "LinearElementTypes"
        ],
        "summary": "Retrieves a LinearElementType.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/LinearLocations/{id}": {
      "get": {
        "tags": [
          "LinearLocations"
        ],
        "summary": "Retrieves a LinearLocation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/LinearRanges/{id}": {
      "get": {
        "tags": [
          "LinearRanges"
        ],
        "summary": "Retrieves a LinearRange.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/LinearReferenceMethods/{id}": {
      "get": {
        "tags": [
          "LinearReferenceMethods"
        ],
        "summary": "Retrieves a LinearReferenceMethod.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/ api /{context}/Locations/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Retrieves a Location.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier.",
              "format": "int32"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What to include in the results.",
            "schema": {
              "type": "string",
              "description": "What to include in the results.",
              "default": "Header",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "description": "The context. Value of \"0\" will default to the current session context.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The context. Value of \"0\" will default to the current session context.",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Invoke": {
      "patch": {
        "tags": [
          "Common"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SysMethod"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Subscriptions/{id}": {
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Deletes an instance of Subscription",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SuggestedDistributions": {
      "post": {
        "tags": [
          "SuggestedDistributions"
        ],
        "summary": "Creates a new instance of SuggestedDistribution",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestedDistributionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SupersedingDocuments": {
      "post": {
        "tags": [
          "SupersedingDocuments"
        ],
        "summary": "Creates a new instance of SupersedingDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupersedingDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Surveies": {
      "post": {
        "tags": [
          "Surveies"
        ],
        "summary": "Creates a new instance of Survey",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Surveies/{id}": {
      "patch": {
        "tags": [
          "Surveies"
        ],
        "summary": "Updates an instance of Survey",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Surveies"
        ],
        "summary": "Deletes an instance of Survey",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveyInstances": {
      "post": {
        "tags": [
          "SurveyInstances"
        ],
        "summary": "Creates a new instance of SurveyInstance",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyInstancePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveyInstances/{id}": {
      "delete": {
        "tags": [
          "SurveyInstances"
        ],
        "summary": "Deletes an instance of SurveyInstance",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveyInstanceAnswers": {
      "post": {
        "tags": [
          "SurveyInstanceAnswers"
        ],
        "summary": "Creates a new instance of SurveyInstanceAnswer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyInstanceAnswerPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveyInstanceAnswers/{id}": {
      "patch": {
        "tags": [
          "SurveyInstanceAnswers"
        ],
        "summary": "Updates an instance of SurveyInstanceAnswer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyInstanceAnswerPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SurveyInstanceAnswers"
        ],
        "summary": "Deletes an instance of SurveyInstanceAnswer",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveyQuestions": {
      "post": {
        "tags": [
          "SurveyQuestions"
        ],
        "summary": "Creates a new instance of SurveyQuestion",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyQuestionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveyQuestions/{id}": {
      "patch": {
        "tags": [
          "SurveyQuestions"
        ],
        "summary": "Updates an instance of SurveyQuestion",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyQuestionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SurveyQuestions"
        ],
        "summary": "Deletes an instance of SurveyQuestion",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveySections": {
      "post": {
        "tags": [
          "SurveySections"
        ],
        "summary": "Creates a new instance of SurveySection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveySectionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SurveySections/{id}": {
      "patch": {
        "tags": [
          "SurveySections"
        ],
        "summary": "Updates an instance of SurveySection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveySectionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SurveySections"
        ],
        "summary": "Deletes an instance of SurveySection",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SyncScopes": {
      "post": {
        "tags": [
          "SyncScopes"
        ],
        "summary": "Creates a new instance of SyncScope",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncScopePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SyncScopes/{id}": {
      "patch": {
        "tags": [
          "SyncScopes"
        ],
        "summary": "Updates an instance of SyncScope",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncScopePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SyncScopes"
        ],
        "summary": "Deletes an instance of SyncScope",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Tags": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Creates a new instance of Tag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Tags/{id}": {
      "patch": {
        "tags": [
          "Tags"
        ],
        "summary": "Updates an instance of Tag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Deletes an instance of Tag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagInstallableItems": {
      "post": {
        "tags": [
          "TagInstallableItems"
        ],
        "summary": "Creates a new instance of TagInstallableItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagInstallableItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagInstallableItems/{id}": {
      "patch": {
        "tags": [
          "TagInstallableItems"
        ],
        "summary": "Updates an instance of TagInstallableItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagInstallableItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TagInstallableItems"
        ],
        "summary": "Deletes an instance of TagInstallableItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagInstallableItemLubrications": {
      "post": {
        "tags": [
          "TagInstallableItemLubrications"
        ],
        "summary": "Creates a new instance of TagInstallableItemLubrication",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagInstallableItemLubricationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagInstallableItemLubrications/{id}": {
      "patch": {
        "tags": [
          "TagInstallableItemLubrications"
        ],
        "summary": "Updates an instance of TagInstallableItemLubrication",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagInstallableItemLubricationPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TagInstallableItemLubrications"
        ],
        "summary": "Deletes an instance of TagInstallableItemLubrication",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagTags": {
      "post": {
        "tags": [
          "TagTags"
        ],
        "summary": "Creates a new instance of TagTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagTags/{id}": {
      "delete": {
        "tags": [
          "TagTags"
        ],
        "summary": "Deletes an instance of TagTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagVirtualItemGroups": {
      "post": {
        "tags": [
          "TagVirtualItemGroups"
        ],
        "summary": "Creates a new instance of TagVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TagVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "TagVirtualItemGroups"
        ],
        "summary": "Deletes an instance of TagVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates a new instance of Task",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Tasks/{id}": {
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Updates an instance of Task",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Deletes an instance of Task",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskChangeRequests": {
      "post": {
        "tags": [
          "TaskChangeRequests"
        ],
        "summary": "Creates a new instance of TaskChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskChangeRequestPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskItems": {
      "post": {
        "tags": [
          "TaskItems"
        ],
        "summary": "Creates a new instance of TaskItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskItems/{id}": {
      "patch": {
        "tags": [
          "TaskItems"
        ],
        "summary": "Updates an instance of TaskItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskOrders": {
      "post": {
        "tags": [
          "TaskOrders"
        ],
        "summary": "Creates a new instance of TaskOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskOrders/{id}": {
      "patch": {
        "tags": [
          "TaskOrders"
        ],
        "summary": "Updates an instance of TaskOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskOrderPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskOrderItems": {
      "post": {
        "tags": [
          "TaskOrderItems"
        ],
        "summary": "Creates a new instance of TaskOrderItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskOrderItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskOrderItems/{id}": {
      "patch": {
        "tags": [
          "TaskOrderItems"
        ],
        "summary": "Updates an instance of TaskOrderItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskOrderItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskOrderProjects": {
      "post": {
        "tags": [
          "TaskOrderProjects"
        ],
        "summary": "Creates a new instance of TaskOrderProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskOrderProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskStructures": {
      "post": {
        "tags": [
          "TaskStructures"
        ],
        "summary": "Creates a new instance of TaskStructure",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskStructurePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TaskStructures/{id}": {
      "patch": {
        "tags": [
          "TaskStructures"
        ],
        "summary": "Updates an instance of TaskStructure",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskStructurePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Templates": {
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Creates a new instance of Template",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Templates/{id}": {
      "patch": {
        "tags": [
          "Templates"
        ],
        "summary": "Updates an instance of Template",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Deletes an instance of Template",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Transmittals": {
      "post": {
        "tags": [
          "Transmittals"
        ],
        "summary": "Creates a new instance of Transmittal",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransmittalPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Transmittals/{id}": {
      "patch": {
        "tags": [
          "Transmittals"
        ],
        "summary": "Updates an instance of Transmittal",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransmittalPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Transmittals"
        ],
        "summary": "Deletes an instance of Transmittal",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TransmittalResponseTypes": {
      "post": {
        "tags": [
          "TransmittalResponseTypes"
        ],
        "summary": "Creates a new instance of TransmittalResponseType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransmittalResponseTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/TransmittalResponseTypes/{id}": {
      "patch": {
        "tags": [
          "TransmittalResponseTypes"
        ],
        "summary": "Updates an instance of TransmittalResponseType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransmittalResponseTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TransmittalResponseTypes"
        ],
        "summary": "Deletes an instance of TransmittalResponseType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Units": {
      "post": {
        "tags": [
          "Units"
        ],
        "summary": "Creates a new instance of Unit",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Units/{id}": {
      "patch": {
        "tags": [
          "Units"
        ],
        "summary": "Updates an instance of Unit",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/UnitSystems": {
      "post": {
        "tags": [
          "UnitSystems"
        ],
        "summary": "Creates a new instance of UnitSystem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitSystemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/UnitSystems/{id}": {
      "patch": {
        "tags": [
          "UnitSystems"
        ],
        "summary": "Updates an instance of UnitSystem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitSystemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VerticalMenus": {
      "post": {
        "tags": [
          "VerticalMenus"
        ],
        "summary": "Creates a new instance of VerticalMenu",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerticalMenuPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VerticalMenus/{id}": {
      "patch": {
        "tags": [
          "VerticalMenus"
        ],
        "summary": "Updates an instance of VerticalMenu",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerticalMenuPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "VerticalMenus"
        ],
        "summary": "Deletes an instance of VerticalMenu",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VerticalMenuItems": {
      "post": {
        "tags": [
          "VerticalMenuItems"
        ],
        "summary": "Creates a new instance of VerticalMenuItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerticalMenuItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VerticalMenuItems/{id}": {
      "patch": {
        "tags": [
          "VerticalMenuItems"
        ],
        "summary": "Updates an instance of VerticalMenuItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerticalMenuItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "VerticalMenuItems"
        ],
        "summary": "Deletes an instance of VerticalMenuItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VirtualItems": {
      "post": {
        "tags": [
          "VirtualItems"
        ],
        "summary": "Creates a new instance of VirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VirtualItems/{id}": {
      "patch": {
        "tags": [
          "VirtualItems"
        ],
        "summary": "Updates an instance of VirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "VirtualItems"
        ],
        "summary": "Deletes an instance of VirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VirtualItemGroups": {
      "post": {
        "tags": [
          "VirtualItemGroups"
        ],
        "summary": "Creates a new instance of VirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VirtualItemGroups/{id}": {
      "patch": {
        "tags": [
          "VirtualItemGroups"
        ],
        "summary": "Updates an instance of VirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualItemGroupPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "VirtualItemGroups"
        ],
        "summary": "Deletes an instance of VirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VirtualItemGroupVirtualItemGroups": {
      "post": {
        "tags": [
          "VirtualItemGroupVirtualItemGroups"
        ],
        "summary": "Creates a new instance of VirtualItemGroupVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualItemGroupVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/VirtualItemGroupVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "VirtualItemGroupVirtualItemGroups"
        ],
        "summary": "Deletes an instance of VirtualItemGroupVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkOrders": {
      "post": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Creates a new instance of WorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkOrders/{id}": {
      "patch": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Updates an instance of WorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Deletes an instance of WorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkOrderChangeRequests": {
      "post": {
        "tags": [
          "WorkOrderChangeRequests"
        ],
        "summary": "Creates a new instance of WorkOrderChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderChangeRequestPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkOrderWorkOrders": {
      "post": {
        "tags": [
          "WorkOrderWorkOrders"
        ],
        "summary": "Creates a new instance of WorkOrderWorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkOrderWorkOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkOrderWorkOrders/{id}": {
      "delete": {
        "tags": [
          "WorkOrderWorkOrders"
        ],
        "summary": "Deletes an instance of WorkOrderWorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkTasks": {
      "post": {
        "tags": [
          "WorkTasks"
        ],
        "summary": "Creates a new instance of WorkTask",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTaskPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkTasks/{id}": {
      "patch": {
        "tags": [
          "WorkTasks"
        ],
        "summary": "Updates an instance of WorkTask",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTaskPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "WorkTasks"
        ],
        "summary": "Deletes an instance of WorkTask",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/WorkTaskChangeRequests": {
      "post": {
        "tags": [
          "WorkTaskChangeRequests"
        ],
        "summary": "Creates a new instance of WorkTaskChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTaskChangeRequestPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Responsibilities/{id}": {
      "delete": {
        "tags": [
          "Responsibilities"
        ],
        "summary": "Deletes an instance of Responsibility",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Responsibilities"
        ],
        "summary": "Updates an instance of Responsibility",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponsibilityPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ResponsibilityTypes": {
      "post": {
        "tags": [
          "ResponsibilityTypes"
        ],
        "summary": "Creates a new instance of ResponsibilityType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponsibilityTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ResponsibilityTypes/{id}": {
      "patch": {
        "tags": [
          "ResponsibilityTypes"
        ],
        "summary": "Updates an instance of ResponsibilityType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponsibilityTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ResponsibilityTypes"
        ],
        "summary": "Deletes an instance of ResponsibilityType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Restrictions": {
      "post": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Creates a new instance of Restriction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Restrictions/{id}": {
      "patch": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Updates an instance of Restriction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Restrictions"
        ],
        "summary": "Deletes an instance of Restriction",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RestrictionClasss": {
      "post": {
        "tags": [
          "RestrictionClasss"
        ],
        "summary": "Creates a new instance of RestrictionClass",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionClassPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RestrictionClasss/{id}": {
      "patch": {
        "tags": [
          "RestrictionClasss"
        ],
        "summary": "Updates an instance of RestrictionClass",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionClassPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RevisionRules": {
      "post": {
        "tags": [
          "RevisionRules"
        ],
        "summary": "Creates a new instance of RevisionRule",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevisionRulePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RevisionRules/{id}": {
      "patch": {
        "tags": [
          "RevisionRules"
        ],
        "summary": "Updates an instance of RevisionRule",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevisionRulePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "RevisionRules"
        ],
        "summary": "Deletes an instance of RevisionRule",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Roles": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Creates a new instance of Role",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Roles/{id}": {
      "patch": {
        "tags": [
          "Roles"
        ],
        "summary": "Updates an instance of Role",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Deletes an instance of Role",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ScheduleDefs": {
      "post": {
        "tags": [
          "ScheduleDefs"
        ],
        "summary": "Creates a new instance of ScheduleDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ScheduleDefs/{id}": {
      "patch": {
        "tags": [
          "ScheduleDefs"
        ],
        "summary": "Updates an instance of ScheduleDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ScheduleDefs"
        ],
        "summary": "Deletes an instance of ScheduleDef",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ScheduleDefOwners": {
      "post": {
        "tags": [
          "ScheduleDefOwners"
        ],
        "summary": "Creates a new instance of ScheduleDefOwner",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDefOwnerPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Scopes": {
      "post": {
        "tags": [
          "Scopes"
        ],
        "summary": "Creates a new instance of Scope",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Scopes/{id}": {
      "patch": {
        "tags": [
          "Scopes"
        ],
        "summary": "Updates an instance of Scope",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Scopes"
        ],
        "summary": "Deletes an instance of Scope",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ScopeInvites": {
      "post": {
        "tags": [
          "ScopeInvites"
        ],
        "summary": "Creates a new instance of ScopeInvite",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScopeInvitePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ScopeInvites/{id}": {
      "delete": {
        "tags": [
          "ScopeInvites"
        ],
        "summary": "Deletes an instance of ScopeInvite",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Securities": {
      "post": {
        "tags": [
          "Securities"
        ],
        "summary": "Creates a new instance of Security",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Securities/{id}": {
      "delete": {
        "tags": [
          "Securities"
        ],
        "summary": "Deletes an instance of Security",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItems": {
      "post": {
        "tags": [
          "SerializedItems"
        ],
        "summary": "Creates a new instance of SerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItems/{id}": {
      "patch": {
        "tags": [
          "SerializedItems"
        ],
        "summary": "Updates an instance of SerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SerializedItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SerializedItems"
        ],
        "summary": "Deletes an instance of SerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemSerializedItems": {
      "post": {
        "tags": [
          "SerializedItemSerializedItems"
        ],
        "summary": "Creates a new instance of SerializedItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SerializedItemSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemSerializedItems/{id}": {
      "delete": {
        "tags": [
          "SerializedItemSerializedItems"
        ],
        "summary": "Deletes an instance of SerializedItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemSharePointItems": {
      "post": {
        "tags": [
          "SerializedItemSharePointItems"
        ],
        "summary": "Creates a new instance of SerializedItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SerializedItemSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemSharePointItems/{id}": {
      "delete": {
        "tags": [
          "SerializedItemSharePointItems"
        ],
        "summary": "Deletes an instance of SerializedItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemTags": {
      "post": {
        "tags": [
          "SerializedItemTags"
        ],
        "summary": "Creates a new instance of SerializedItemTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SerializedItemTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemTags/{id}": {
      "delete": {
        "tags": [
          "SerializedItemTags"
        ],
        "summary": "Deletes an instance of SerializedItemTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemVirtualItemGroups": {
      "post": {
        "tags": [
          "SerializedItemVirtualItemGroups"
        ],
        "summary": "Creates a new instance of SerializedItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SerializedItemVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SerializedItemVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "SerializedItemVirtualItemGroups"
        ],
        "summary": "Deletes an instance of SerializedItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Servers": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Creates a new instance of Server",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Servers/{id}": {
      "patch": {
        "tags": [
          "Servers"
        ],
        "summary": "Updates an instance of Server",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "summary": "Deletes an instance of Server",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ServiceDefinitions": {
      "post": {
        "tags": [
          "ServiceDefinitions"
        ],
        "summary": "Creates a new instance of ServiceDefinition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDefinitionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ServiceDefinitions/{id}": {
      "patch": {
        "tags": [
          "ServiceDefinitions"
        ],
        "summary": "Updates an instance of ServiceDefinition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDefinitionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ServiceDefinitions"
        ],
        "summary": "Deletes an instance of ServiceDefinition",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ServiceInstances": {
      "post": {
        "tags": [
          "ServiceInstances"
        ],
        "summary": "Creates a new instance of ServiceInstance",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceInstancePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ServiceInstances/{id}": {
      "patch": {
        "tags": [
          "ServiceInstances"
        ],
        "summary": "Updates an instance of ServiceInstance",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceInstancePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ServiceInstances"
        ],
        "summary": "Deletes an instance of ServiceInstance",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SharePointItems/{id}": {
      "delete": {
        "tags": [
          "SharePointItems"
        ],
        "summary": "Deletes an instance of SharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SharePointItemSharePointItems": {
      "post": {
        "tags": [
          "SharePointItemSharePointItems"
        ],
        "summary": "Creates a new instance of SharePointItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharePointItemSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SharePointItemSharePointItems/{id}": {
      "delete": {
        "tags": [
          "SharePointItemSharePointItems"
        ],
        "summary": "Deletes an instance of SharePointItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SharePointItemTags": {
      "post": {
        "tags": [
          "SharePointItemTags"
        ],
        "summary": "Creates a new instance of SharePointItemTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharePointItemTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SharePointItemTags/{id}": {
      "delete": {
        "tags": [
          "SharePointItemTags"
        ],
        "summary": "Deletes an instance of SharePointItemTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SharePointItemVirtualItemGroups": {
      "post": {
        "tags": [
          "SharePointItemVirtualItemGroups"
        ],
        "summary": "Creates a new instance of SharePointItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharePointItemVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SharePointItemVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "SharePointItemVirtualItemGroups"
        ],
        "summary": "Deletes an instance of SharePointItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Sites": {
      "post": {
        "tags": [
          "Sites"
        ],
        "summary": "Creates a new instance of Site",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Sites/{id}": {
      "patch": {
        "tags": [
          "Sites"
        ],
        "summary": "Updates an instance of Site",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Sites"
        ],
        "summary": "Deletes an instance of Site",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SiteServers": {
      "post": {
        "tags": [
          "SiteServers"
        ],
        "summary": "Creates a new instance of SiteServer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteServerPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SiteServers/{id}": {
      "patch": {
        "tags": [
          "SiteServers"
        ],
        "summary": "Updates an instance of SiteServer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteServerPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Skills": {
      "post": {
        "tags": [
          "Skills"
        ],
        "summary": "Creates a new instance of Skill",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Skills/{id}": {
      "patch": {
        "tags": [
          "Skills"
        ],
        "summary": "Updates an instance of Skill",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Skills"
        ],
        "summary": "Deletes an instance of Skill",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SpatialConnections": {
      "post": {
        "tags": [
          "SpatialConnections"
        ],
        "summary": "Creates a new instance of SpatialConnection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpatialConnectionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SpatialConnections/{id}": {
      "patch": {
        "tags": [
          "SpatialConnections"
        ],
        "summary": "Updates an instance of SpatialConnection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpatialConnectionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SpatialConnections"
        ],
        "summary": "Deletes an instance of SpatialConnection",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SpatialLayers": {
      "post": {
        "tags": [
          "SpatialLayers"
        ],
        "summary": "Creates a new instance of SpatialLayer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpatialLayerPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/SpatialLayers/{id}": {
      "patch": {
        "tags": [
          "SpatialLayers"
        ],
        "summary": "Updates an instance of SpatialLayer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpatialLayerPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SpatialLayers"
        ],
        "summary": "Deletes an instance of SpatialLayer",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/States": {
      "post": {
        "tags": [
          "States"
        ],
        "summary": "Creates a new instance of State",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/States/{id}": {
      "patch": {
        "tags": [
          "States"
        ],
        "summary": "Updates an instance of State",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "States"
        ],
        "summary": "Deletes an instance of State",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StateMachines": {
      "post": {
        "tags": [
          "StateMachines"
        ],
        "summary": "Creates a new instance of StateMachine",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachinePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StateMachines/{id}": {
      "patch": {
        "tags": [
          "StateMachines"
        ],
        "summary": "Updates an instance of StateMachine",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachinePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "StateMachines"
        ],
        "summary": "Deletes an instance of StateMachine",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StateTransitions": {
      "post": {
        "tags": [
          "StateTransitions"
        ],
        "summary": "Creates a new instance of StateTransition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateTransitionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StateTransitions/{id}": {
      "patch": {
        "tags": [
          "StateTransitions"
        ],
        "summary": "Updates an instance of StateTransition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateTransitionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "StateTransitions"
        ],
        "summary": "Deletes an instance of StateTransition",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StorageRules/{id}": {
      "delete": {
        "tags": [
          "StorageRules"
        ],
        "summary": "Deletes an instance of StorageRule",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StorageRuleGroups": {
      "post": {
        "tags": [
          "StorageRuleGroups"
        ],
        "summary": "Creates a new instance of StorageRuleGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageRuleGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StorageRuleGroups/{id}": {
      "patch": {
        "tags": [
          "StorageRuleGroups"
        ],
        "summary": "Updates an instance of StorageRuleGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageRuleGroupPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "StorageRuleGroups"
        ],
        "summary": "Deletes an instance of StorageRuleGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/StorageRuleGroupMembers": {
      "post": {
        "tags": [
          "StorageRuleGroupMembers"
        ],
        "summary": "Creates a new instance of StorageRuleGroupMember",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageRuleGroupMemberPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Subscribers": {
      "post": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Creates a new instance of Subscriber",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriberPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Subscribers/{id}": {
      "patch": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Updates an instance of Subscriber",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriberPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Subscribers"
        ],
        "summary": "Deletes an instance of Subscriber",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Creates a new instance of Subscription",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "PhysicalItemProjectWiseItems"
        ],
        "summary": "Deletes an instance of PhysicalItemProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemSerializedItems": {
      "post": {
        "tags": [
          "PhysicalItemSerializedItems"
        ],
        "summary": "Creates a new instance of PhysicalItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemSerializedItems/{id}": {
      "delete": {
        "tags": [
          "PhysicalItemSerializedItems"
        ],
        "summary": "Deletes an instance of PhysicalItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemSharePointItems": {
      "post": {
        "tags": [
          "PhysicalItemSharePointItems"
        ],
        "summary": "Creates a new instance of PhysicalItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemSharePointItems/{id}": {
      "delete": {
        "tags": [
          "PhysicalItemSharePointItems"
        ],
        "summary": "Deletes an instance of PhysicalItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemTags": {
      "post": {
        "tags": [
          "PhysicalItemTags"
        ],
        "summary": "Creates a new instance of PhysicalItemTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemTags/{id}": {
      "delete": {
        "tags": [
          "PhysicalItemTags"
        ],
        "summary": "Deletes an instance of PhysicalItemTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemTypes": {
      "post": {
        "tags": [
          "PhysicalItemTypes"
        ],
        "summary": "Creates a new instance of PhysicalItemType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemTypes/{id}": {
      "patch": {
        "tags": [
          "PhysicalItemTypes"
        ],
        "summary": "Updates an instance of PhysicalItemType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemVirtualItemGroups": {
      "post": {
        "tags": [
          "PhysicalItemVirtualItemGroups"
        ],
        "summary": "Creates a new instance of PhysicalItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "PhysicalItemVirtualItemGroups"
        ],
        "summary": "Deletes an instance of PhysicalItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Pricelists": {
      "post": {
        "tags": [
          "Pricelists"
        ],
        "summary": "Creates a new instance of Pricelist",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricelistPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Pricelists/{id}": {
      "patch": {
        "tags": [
          "Pricelists"
        ],
        "summary": "Updates an instance of Pricelist",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricelistPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PricelistItems": {
      "post": {
        "tags": [
          "PricelistItems"
        ],
        "summary": "Creates a new instance of PricelistItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricelistItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PricelistItems/{id}": {
      "patch": {
        "tags": [
          "PricelistItems"
        ],
        "summary": "Updates an instance of PricelistItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricelistItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PrintTemplates": {
      "post": {
        "tags": [
          "PrintTemplates"
        ],
        "summary": "Creates a new instance of PrintTemplate",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintTemplatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PrintTemplates/{id}": {
      "patch": {
        "tags": [
          "PrintTemplates"
        ],
        "summary": "Updates an instance of PrintTemplate",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintTemplatePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PrintTemplates"
        ],
        "summary": "Deletes an instance of PrintTemplate",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProductStructureTypes": {
      "post": {
        "tags": [
          "ProductStructureTypes"
        ],
        "summary": "Creates a new instance of ProductStructureType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStructureTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProductStructureTypes/{id}": {
      "patch": {
        "tags": [
          "ProductStructureTypes"
        ],
        "summary": "Updates an instance of ProductStructureType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStructureTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductStructureTypes"
        ],
        "summary": "Deletes an instance of ProductStructureType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Programs": {
      "post": {
        "tags": [
          "Programs"
        ],
        "summary": "Creates a new instance of Program",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Programs/{id}": {
      "patch": {
        "tags": [
          "Programs"
        ],
        "summary": "Updates an instance of Program",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Programs"
        ],
        "summary": "Deletes an instance of Program",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProgramItems": {
      "post": {
        "tags": [
          "ProgramItems"
        ],
        "summary": "Creates a new instance of ProgramItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProgramItems/{id}": {
      "patch": {
        "tags": [
          "ProgramItems"
        ],
        "summary": "Updates an instance of ProgramItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ProgramItems"
        ],
        "summary": "Deletes an instance of ProgramItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Projects": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates a new instance of Project",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Projects/{id}": {
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates an instance of Project",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Deletes an instance of Project",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectProjects": {
      "post": {
        "tags": [
          "ProjectProjects"
        ],
        "summary": "Creates a new instance of ProjectProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectProjects/{id}": {
      "delete": {
        "tags": [
          "ProjectProjects"
        ],
        "summary": "Deletes an instance of ProjectProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectProjectWiseItems": {
      "post": {
        "tags": [
          "ProjectProjectWiseItems"
        ],
        "summary": "Creates a new instance of ProjectProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "ProjectProjectWiseItems"
        ],
        "summary": "Deletes an instance of ProjectProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectSerializedItems": {
      "post": {
        "tags": [
          "ProjectSerializedItems"
        ],
        "summary": "Creates a new instance of ProjectSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectSerializedItems/{id}": {
      "delete": {
        "tags": [
          "ProjectSerializedItems"
        ],
        "summary": "Deletes an instance of ProjectSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectSharePointItems": {
      "post": {
        "tags": [
          "ProjectSharePointItems"
        ],
        "summary": "Creates a new instance of ProjectSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectSharePointItems/{id}": {
      "delete": {
        "tags": [
          "ProjectSharePointItems"
        ],
        "summary": "Deletes an instance of ProjectSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectTags": {
      "post": {
        "tags": [
          "ProjectTags"
        ],
        "summary": "Creates a new instance of ProjectTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectTags/{id}": {
      "delete": {
        "tags": [
          "ProjectTags"
        ],
        "summary": "Deletes an instance of ProjectTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectTasks": {
      "post": {
        "tags": [
          "ProjectTasks"
        ],
        "summary": "Creates a new instance of ProjectTask",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTaskPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectTasks/{id}": {
      "delete": {
        "tags": [
          "ProjectTasks"
        ],
        "summary": "Deletes an instance of ProjectTask",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectVirtualItemGroups": {
      "post": {
        "tags": [
          "ProjectVirtualItemGroups"
        ],
        "summary": "Creates a new instance of ProjectVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "ProjectVirtualItemGroups"
        ],
        "summary": "Deletes an instance of ProjectVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemProjectWiseItems": {
      "post": {
        "tags": [
          "ProjectWiseItemProjectWiseItems"
        ],
        "summary": "Creates a new instance of ProjectWiseItemProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWiseItemProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "ProjectWiseItemProjectWiseItems"
        ],
        "summary": "Deletes an instance of ProjectWiseItemProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemSerializedItems": {
      "post": {
        "tags": [
          "ProjectWiseItemSerializedItems"
        ],
        "summary": "Creates a new instance of ProjectWiseItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWiseItemSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemSerializedItems/{id}": {
      "delete": {
        "tags": [
          "ProjectWiseItemSerializedItems"
        ],
        "summary": "Deletes an instance of ProjectWiseItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemSharePointItems": {
      "post": {
        "tags": [
          "ProjectWiseItemSharePointItems"
        ],
        "summary": "Creates a new instance of ProjectWiseItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWiseItemSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemSharePointItems/{id}": {
      "delete": {
        "tags": [
          "ProjectWiseItemSharePointItems"
        ],
        "summary": "Deletes an instance of ProjectWiseItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemTags": {
      "post": {
        "tags": [
          "ProjectWiseItemTags"
        ],
        "summary": "Creates a new instance of ProjectWiseItemTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWiseItemTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemTags/{id}": {
      "delete": {
        "tags": [
          "ProjectWiseItemTags"
        ],
        "summary": "Deletes an instance of ProjectWiseItemTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemVirtualItemGroups": {
      "post": {
        "tags": [
          "ProjectWiseItemVirtualItemGroups"
        ],
        "summary": "Creates a new instance of ProjectWiseItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWiseItemVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWiseItemVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "ProjectWiseItemVirtualItemGroups"
        ],
        "summary": "Deletes an instance of ProjectWiseItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWorkOrders": {
      "post": {
        "tags": [
          "ProjectWorkOrders"
        ],
        "summary": "Creates a new instance of ProjectWorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWorkOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ProjectWorkOrders/{id}": {
      "delete": {
        "tags": [
          "ProjectWorkOrders"
        ],
        "summary": "Deletes an instance of ProjectWorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Prototypes/{id}": {
      "patch": {
        "tags": [
          "Prototypes"
        ],
        "summary": "Updates an instance of Prototype",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrototypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PublisherPackages": {
      "post": {
        "tags": [
          "PublisherPackages"
        ],
        "summary": "Creates a new instance of PublisherPackage",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherPackagePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PublisherPackages/{id}": {
      "patch": {
        "tags": [
          "PublisherPackages"
        ],
        "summary": "Updates an instance of PublisherPackage",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherPackagePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PublisherPackages"
        ],
        "summary": "Deletes an instance of PublisherPackage",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PublisherPackageContents": {
      "post": {
        "tags": [
          "PublisherPackageContents"
        ],
        "summary": "Creates a new instance of PublisherPackageContent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherPackageContentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PublisherPackageContents/{id}": {
      "patch": {
        "tags": [
          "PublisherPackageContents"
        ],
        "summary": "Updates an instance of PublisherPackageContent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherPackageContentPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PublisherPackageContents"
        ],
        "summary": "Deletes an instance of PublisherPackageContent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Questions": {
      "post": {
        "tags": [
          "Questions"
        ],
        "summary": "Creates a new instance of Question",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Questions/{id}": {
      "patch": {
        "tags": [
          "Questions"
        ],
        "summary": "Updates an instance of Question",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Questions"
        ],
        "summary": "Deletes an instance of Question",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/QuestionGroups": {
      "post": {
        "tags": [
          "QuestionGroups"
        ],
        "summary": "Creates a new instance of QuestionGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/QuestionGroups/{id}": {
      "patch": {
        "tags": [
          "QuestionGroups"
        ],
        "summary": "Updates an instance of QuestionGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGroupPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "QuestionGroups"
        ],
        "summary": "Deletes an instance of QuestionGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/QuestionGroupMembers": {
      "post": {
        "tags": [
          "QuestionGroupMembers"
        ],
        "summary": "Creates a new instance of QuestionGroupMember",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGroupMemberPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/QuestionGroupMembers/{id}": {
      "patch": {
        "tags": [
          "QuestionGroupMembers"
        ],
        "summary": "Updates an instance of QuestionGroupMember",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGroupMemberPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/QueueJobs": {
      "post": {
        "tags": [
          "QueueJobs"
        ],
        "summary": "Creates a new instance of QueueJob",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueJobPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RelationshipExternalObjects": {
      "post": {
        "tags": [
          "RelationshipExternalObjects"
        ],
        "summary": "Creates a new instance of RelationshipExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipExternalObjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RelationshipExternalObjects/{id}": {
      "delete": {
        "tags": [
          "RelationshipExternalObjects"
        ],
        "summary": "Deletes an instance of RelationshipExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RelationshipTypes/{id}": {
      "patch": {
        "tags": [
          "RelationshipTypes"
        ],
        "summary": "Updates an instance of RelationshipType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "RelationshipTypes"
        ],
        "summary": "Deletes an instance of RelationshipType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Reports": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Creates a new instance of Report",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Reports/{id}": {
      "patch": {
        "tags": [
          "Reports"
        ],
        "summary": "Updates an instance of Report",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Deletes an instance of Report",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ReportContexts": {
      "post": {
        "tags": [
          "ReportContexts"
        ],
        "summary": "Creates a new instance of ReportContext",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportContextPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RepositoryGroups": {
      "post": {
        "tags": [
          "RepositoryGroups"
        ],
        "summary": "Creates a new instance of RepositoryGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/RepositoryGroups/{id}": {
      "patch": {
        "tags": [
          "RepositoryGroups"
        ],
        "summary": "Updates an instance of RepositoryGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryGroupPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "RepositoryGroups"
        ],
        "summary": "Deletes an instance of RepositoryGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Responsibilities": {
      "post": {
        "tags": [
          "Responsibilities"
        ],
        "summary": "Creates a new instance of Responsibility",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponsibilityPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationImpactedPhysicalItems": {
      "post": {
        "tags": [
          "ModificationImpactedPhysicalItems"
        ],
        "summary": "Creates a new instance of ModificationImpactedPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationImpactedPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationImpactedSerializedItems": {
      "post": {
        "tags": [
          "ModificationImpactedSerializedItems"
        ],
        "summary": "Creates a new instance of ModificationImpactedSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationImpactedSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationPhysicalItems": {
      "post": {
        "tags": [
          "ModificationPhysicalItems"
        ],
        "summary": "Creates a new instance of ModificationPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "ModificationPhysicalItems"
        ],
        "summary": "Deletes an instance of ModificationPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationSerializedItems": {
      "post": {
        "tags": [
          "ModificationSerializedItems"
        ],
        "summary": "Creates a new instance of ModificationSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationSerializedItems/{id}": {
      "delete": {
        "tags": [
          "ModificationSerializedItems"
        ],
        "summary": "Deletes an instance of ModificationSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Modules": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "Creates a new instance of Module",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModulePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Modules/{id}": {
      "patch": {
        "tags": [
          "Modules"
        ],
        "summary": "Updates an instance of Module",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModulePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Modules"
        ],
        "summary": "Deletes an instance of Module",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Namespaces": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Creates a new instance of Namespace",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamespacePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Namespaces/{id}": {
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Updates an instance of Namespace",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamespacePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Deletes an instance of Namespace",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/NestedTaskTemplates": {
      "post": {
        "tags": [
          "NestedTaskTemplates"
        ],
        "summary": "Creates a new instance of NestedTaskTemplate",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NestedTaskTemplatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/NestedTaskTemplates/{id}": {
      "patch": {
        "tags": [
          "NestedTaskTemplates"
        ],
        "summary": "Updates an instance of NestedTaskTemplate",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NestedTaskTemplatePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/NestedWorkOrders": {
      "post": {
        "tags": [
          "NestedWorkOrders"
        ],
        "summary": "Creates a new instance of NestedWorkOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NestedWorkOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/NestedWorkOrderTemplates": {
      "post": {
        "tags": [
          "NestedWorkOrderTemplates"
        ],
        "summary": "Creates a new instance of NestedWorkOrderTemplate",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NestedWorkOrderTemplatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/NestedWorkOrderTemplates/{id}": {
      "patch": {
        "tags": [
          "NestedWorkOrderTemplates"
        ],
        "summary": "Updates an instance of NestedWorkOrderTemplate",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NestedWorkOrderTemplatePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Notes": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a new instance of Note",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Notes/{id}": {
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates an instance of Note",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes an instance of Note",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ObjectBlobs": {
      "post": {
        "tags": [
          "ObjectBlobs"
        ],
        "summary": "Creates a new instance of ObjectBlob",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectBlobPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ObjectDatasets": {
      "post": {
        "tags": [
          "ObjectDatasets"
        ],
        "summary": "Creates a new instance of ObjectDataset",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectDatasetPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ObjectDatasets/{id}": {
      "patch": {
        "tags": [
          "ObjectDatasets"
        ],
        "summary": "Updates an instance of ObjectDataset",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectDatasetPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ObjectDatasets"
        ],
        "summary": "Deletes an instance of ObjectDataset",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ObjectFiles": {
      "post": {
        "tags": [
          "ObjectFiles"
        ],
        "summary": "Creates a new instance of ObjectFile",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectFilePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ObjectKeywords": {
      "post": {
        "tags": [
          "ObjectKeywords"
        ],
        "summary": "Creates a new instance of ObjectKeyword",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectKeywordPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ObjectTrends": {
      "post": {
        "tags": [
          "ObjectTrends"
        ],
        "summary": "Creates a new instance of ObjectTrend",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectTrendPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ObjectTrends/{id}": {
      "delete": {
        "tags": [
          "ObjectTrends"
        ],
        "summary": "Deletes an instance of ObjectTrend",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Organizations": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Creates a new instance of Organization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Organizations/{id}": {
      "patch": {
        "tags": [
          "Organizations"
        ],
        "summary": "Updates an instance of Organization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "summary": "Deletes an instance of Organization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationMembers": {
      "post": {
        "tags": [
          "OrganizationMembers"
        ],
        "summary": "Creates a new instance of OrganizationMember",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationMemberPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationMembers/{id}": {
      "delete": {
        "tags": [
          "OrganizationMembers"
        ],
        "summary": "Deletes an instance of OrganizationMember",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "OrganizationMembers"
        ],
        "summary": "Updates an instance of OrganizationMember",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationMemberPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationOrganizations": {
      "post": {
        "tags": [
          "OrganizationOrganizations"
        ],
        "summary": "Creates a new instance of OrganizationOrganization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationOrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationOrganizations/{id}": {
      "delete": {
        "tags": [
          "OrganizationOrganizations"
        ],
        "summary": "Deletes an instance of OrganizationOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationPersons": {
      "post": {
        "tags": [
          "OrganizationPersons"
        ],
        "summary": "Creates a new instance of OrganizationPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationPersons/{id}": {
      "delete": {
        "tags": [
          "OrganizationPersons"
        ],
        "summary": "Deletes an instance of OrganizationPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationPhysicalItems": {
      "post": {
        "tags": [
          "OrganizationPhysicalItems"
        ],
        "summary": "Creates a new instance of OrganizationPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "OrganizationPhysicalItems"
        ],
        "summary": "Deletes an instance of OrganizationPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationProjects": {
      "post": {
        "tags": [
          "OrganizationProjects"
        ],
        "summary": "Creates a new instance of OrganizationProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationProjects/{id}": {
      "delete": {
        "tags": [
          "OrganizationProjects"
        ],
        "summary": "Deletes an instance of OrganizationProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationProjectWiseItems": {
      "post": {
        "tags": [
          "OrganizationProjectWiseItems"
        ],
        "summary": "Creates a new instance of OrganizationProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "OrganizationProjectWiseItems"
        ],
        "summary": "Deletes an instance of OrganizationProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationSerializedItems": {
      "post": {
        "tags": [
          "OrganizationSerializedItems"
        ],
        "summary": "Creates a new instance of OrganizationSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationSerializedItems/{id}": {
      "delete": {
        "tags": [
          "OrganizationSerializedItems"
        ],
        "summary": "Deletes an instance of OrganizationSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationSharePointItems": {
      "post": {
        "tags": [
          "OrganizationSharePointItems"
        ],
        "summary": "Creates a new instance of OrganizationSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationSharePointItems/{id}": {
      "delete": {
        "tags": [
          "OrganizationSharePointItems"
        ],
        "summary": "Deletes an instance of OrganizationSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationTags": {
      "post": {
        "tags": [
          "OrganizationTags"
        ],
        "summary": "Creates a new instance of OrganizationTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationTags/{id}": {
      "delete": {
        "tags": [
          "OrganizationTags"
        ],
        "summary": "Deletes an instance of OrganizationTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationVirtualItemGroups": {
      "post": {
        "tags": [
          "OrganizationVirtualItemGroups"
        ],
        "summary": "Creates a new instance of OrganizationVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/OrganizationVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "OrganizationVirtualItemGroups"
        ],
        "summary": "Deletes an instance of OrganizationVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ParameterDefs": {
      "post": {
        "tags": [
          "ParameterDefs"
        ],
        "summary": "Creates a new instance of ParameterDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ParameterDefs/{id}": {
      "patch": {
        "tags": [
          "ParameterDefs"
        ],
        "summary": "Updates an instance of ParameterDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PermissionDsas": {
      "post": {
        "tags": [
          "PermissionDsas"
        ],
        "summary": "Creates a new instance of PermissionDsa",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDsaPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PermissionDsas/{id}": {
      "patch": {
        "tags": [
          "PermissionDsas"
        ],
        "summary": "Updates an instance of PermissionDsa",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDsaPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PermissionDsas"
        ],
        "summary": "Deletes an instance of PermissionDsa",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Persons": {
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Creates a new instance of Person",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Persons/{id}": {
      "patch": {
        "tags": [
          "Persons"
        ],
        "summary": "Updates an instance of Person",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Persons"
        ],
        "summary": "Deletes an instance of Person",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonPersons": {
      "post": {
        "tags": [
          "PersonPersons"
        ],
        "summary": "Creates a new instance of PersonPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonPersons/{id}": {
      "delete": {
        "tags": [
          "PersonPersons"
        ],
        "summary": "Deletes an instance of PersonPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonPhysicalItems": {
      "post": {
        "tags": [
          "PersonPhysicalItems"
        ],
        "summary": "Creates a new instance of PersonPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "PersonPhysicalItems"
        ],
        "summary": "Deletes an instance of PersonPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonProjects": {
      "post": {
        "tags": [
          "PersonProjects"
        ],
        "summary": "Creates a new instance of PersonProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonProjects/{id}": {
      "delete": {
        "tags": [
          "PersonProjects"
        ],
        "summary": "Deletes an instance of PersonProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonProjectWiseItems": {
      "post": {
        "tags": [
          "PersonProjectWiseItems"
        ],
        "summary": "Creates a new instance of PersonProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "PersonProjectWiseItems"
        ],
        "summary": "Deletes an instance of PersonProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonSerializedItems": {
      "post": {
        "tags": [
          "PersonSerializedItems"
        ],
        "summary": "Creates a new instance of PersonSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonSerializedItems/{id}": {
      "delete": {
        "tags": [
          "PersonSerializedItems"
        ],
        "summary": "Deletes an instance of PersonSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonSharePointItems": {
      "post": {
        "tags": [
          "PersonSharePointItems"
        ],
        "summary": "Creates a new instance of PersonSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonSharePointItems/{id}": {
      "delete": {
        "tags": [
          "PersonSharePointItems"
        ],
        "summary": "Deletes an instance of PersonSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonSkills": {
      "post": {
        "tags": [
          "PersonSkills"
        ],
        "summary": "Creates a new instance of PersonSkill",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonSkillPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonTags": {
      "post": {
        "tags": [
          "PersonTags"
        ],
        "summary": "Creates a new instance of PersonTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonTags/{id}": {
      "delete": {
        "tags": [
          "PersonTags"
        ],
        "summary": "Deletes an instance of PersonTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonVirtualItemGroups": {
      "post": {
        "tags": [
          "PersonVirtualItemGroups"
        ],
        "summary": "Creates a new instance of PersonVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PersonVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "PersonVirtualItemGroups"
        ],
        "summary": "Deletes an instance of PersonVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItems": {
      "post": {
        "tags": [
          "PhysicalItems"
        ],
        "summary": "Creates a new instance of PhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItems/{id}": {
      "patch": {
        "tags": [
          "PhysicalItems"
        ],
        "summary": "Updates an instance of PhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PhysicalItems"
        ],
        "summary": "Deletes an instance of PhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemPhysicalItems": {
      "post": {
        "tags": [
          "PhysicalItemPhysicalItems"
        ],
        "summary": "Creates a new instance of PhysicalItemPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "PhysicalItemPhysicalItems"
        ],
        "summary": "Deletes an instance of PhysicalItemPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemProjects": {
      "post": {
        "tags": [
          "PhysicalItemProjects"
        ],
        "summary": "Creates a new instance of PhysicalItemProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemProjects/{id}": {
      "delete": {
        "tags": [
          "PhysicalItemProjects"
        ],
        "summary": "Deletes an instance of PhysicalItemProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/PhysicalItemProjectWiseItems": {
      "post": {
        "tags": [
          "PhysicalItemProjectWiseItems"
        ],
        "summary": "Creates a new instance of PhysicalItemProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalItemProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemPhysicalItems"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemProjects": {
      "post": {
        "tags": [
          "GroupedVirtualItemProjects"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemProjects/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemProjects"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemProjectWiseItems": {
      "post": {
        "tags": [
          "GroupedVirtualItemProjectWiseItems"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemProjectWiseItems"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemSerializedItems": {
      "post": {
        "tags": [
          "GroupedVirtualItemSerializedItems"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemSerializedItems/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemSerializedItems"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemSharePointItems": {
      "post": {
        "tags": [
          "GroupedVirtualItemSharePointItems"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemSharePointItems/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemSharePointItems"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemStructures": {
      "post": {
        "tags": [
          "GroupedVirtualItemStructures"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemStructure",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemStructurePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemTags": {
      "post": {
        "tags": [
          "GroupedVirtualItemTags"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemTags/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemTags"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemVirtualItemGroups": {
      "post": {
        "tags": [
          "GroupedVirtualItemVirtualItemGroups"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemVirtualItemGroups"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/HostDefinitions": {
      "post": {
        "tags": [
          "HostDefinitions"
        ],
        "summary": "Creates a new instance of HostDefinition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostDefinitionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/HostDefinitions/{id}": {
      "patch": {
        "tags": [
          "HostDefinitions"
        ],
        "summary": "Updates an instance of HostDefinition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostDefinitionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "HostDefinitions"
        ],
        "summary": "Deletes an instance of HostDefinition",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/HostInstances": {
      "post": {
        "tags": [
          "HostInstances"
        ],
        "summary": "Creates a new instance of HostInstance",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostInstancePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/HostInstances/{id}": {
      "patch": {
        "tags": [
          "HostInstances"
        ],
        "summary": "Updates an instance of HostInstance",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostInstancePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "HostInstances"
        ],
        "summary": "Deletes an instance of HostInstance",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/IdentityMappingDefs": {
      "post": {
        "tags": [
          "IdentityMappingDefs"
        ],
        "summary": "Creates a new instance of IdentityMappingDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityMappingDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/IdentityMappingDefs/{id}": {
      "patch": {
        "tags": [
          "IdentityMappingDefs"
        ],
        "summary": "Updates an instance of IdentityMappingDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityMappingDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/IdentityMappingDefRoles": {
      "post": {
        "tags": [
          "IdentityMappingDefRoles"
        ],
        "summary": "Creates a new instance of IdentityMappingDefRole",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityMappingDefRolePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/IdentityProviders": {
      "post": {
        "tags": [
          "IdentityProviders"
        ],
        "summary": "Creates a new instance of IdentityProvider",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/IdentityProviders/{id}": {
      "patch": {
        "tags": [
          "IdentityProviders"
        ],
        "summary": "Updates an instance of IdentityProvider",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Intents": {
      "post": {
        "tags": [
          "Intents"
        ],
        "summary": "Creates a new instance of Intent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Intents/{id}": {
      "patch": {
        "tags": [
          "Intents"
        ],
        "summary": "Updates an instance of Intent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntentPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Intents"
        ],
        "summary": "Deletes an instance of Intent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Interfaces": {
      "post": {
        "tags": [
          "Interfaces"
        ],
        "summary": "Creates a new instance of Interface",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterfacePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Interfaces/{id}": {
      "patch": {
        "tags": [
          "Interfaces"
        ],
        "summary": "Updates an instance of Interface",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterfacePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Interfaces"
        ],
        "summary": "Deletes an instance of Interface",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/JobTypes": {
      "post": {
        "tags": [
          "JobTypes"
        ],
        "summary": "Creates a new instance of JobType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/JobTypes/{id}": {
      "delete": {
        "tags": [
          "JobTypes"
        ],
        "summary": "Deletes an instance of JobType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobTypeDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Keywords": {
      "post": {
        "tags": [
          "Keywords"
        ],
        "summary": "Creates a new instance of Keyword",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Keywords/{id}": {
      "patch": {
        "tags": [
          "Keywords"
        ],
        "summary": "Updates an instance of Keyword",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Keywords"
        ],
        "summary": "Deletes an instance of Keyword",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/KeywordGroups": {
      "post": {
        "tags": [
          "KeywordGroups"
        ],
        "summary": "Creates a new instance of KeywordGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/KeywordGroups/{id}": {
      "patch": {
        "tags": [
          "KeywordGroups"
        ],
        "summary": "Updates an instance of KeywordGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordGroupPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "KeywordGroups"
        ],
        "summary": "Deletes an instance of KeywordGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/KeywordGroupKeywords": {
      "post": {
        "tags": [
          "KeywordGroupKeywords"
        ],
        "summary": "Creates a new instance of KeywordGroupKeyword",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordGroupKeywordPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/KindOfQuantities": {
      "post": {
        "tags": [
          "KindOfQuantities"
        ],
        "summary": "Creates a new instance of KindOfQuantity",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KindOfQuantityPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/KindOfQuantities/{id}": {
      "patch": {
        "tags": [
          "KindOfQuantities"
        ],
        "summary": "Updates an instance of KindOfQuantity",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KindOfQuantityPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LinearLocations": {
      "post": {
        "tags": [
          "LinearLocations"
        ],
        "summary": "Creates a new instance of LinearLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearLocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LinearLocations/{id}": {
      "patch": {
        "tags": [
          "LinearLocations"
        ],
        "summary": "Updates an instance of LinearLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearLocationPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "LinearLocations"
        ],
        "summary": "Deletes an instance of LinearLocation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearLocationDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LinearLocationRestrictions": {
      "post": {
        "tags": [
          "LinearLocationRestrictions"
        ],
        "summary": "Creates a new instance of LinearLocationRestriction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearLocationRestrictionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LinearLocationRestrictions/{id}": {
      "delete": {
        "tags": [
          "LinearLocationRestrictions"
        ],
        "summary": "Deletes an instance of LinearLocationRestriction",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Locations": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Creates a new instance of Location",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Locations/{id}": {
      "patch": {
        "tags": [
          "Locations"
        ],
        "summary": "Updates an instance of Location",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Deletes an instance of Location",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationLocations": {
      "post": {
        "tags": [
          "LocationLocations"
        ],
        "summary": "Creates a new instance of LocationLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationLocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationLocations/{id}": {
      "delete": {
        "tags": [
          "LocationLocations"
        ],
        "summary": "Deletes an instance of LocationLocation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationOrganizations": {
      "post": {
        "tags": [
          "LocationOrganizations"
        ],
        "summary": "Creates a new instance of LocationOrganization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationOrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationOrganizations/{id}": {
      "delete": {
        "tags": [
          "LocationOrganizations"
        ],
        "summary": "Deletes an instance of LocationOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationPersons": {
      "post": {
        "tags": [
          "LocationPersons"
        ],
        "summary": "Creates a new instance of LocationPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationPersons/{id}": {
      "delete": {
        "tags": [
          "LocationPersons"
        ],
        "summary": "Deletes an instance of LocationPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationPhysicalItems": {
      "post": {
        "tags": [
          "LocationPhysicalItems"
        ],
        "summary": "Creates a new instance of LocationPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "LocationPhysicalItems"
        ],
        "summary": "Deletes an instance of LocationPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationProjects": {
      "post": {
        "tags": [
          "LocationProjects"
        ],
        "summary": "Creates a new instance of LocationProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationProjects/{id}": {
      "delete": {
        "tags": [
          "LocationProjects"
        ],
        "summary": "Deletes an instance of LocationProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationProjectWiseItems": {
      "post": {
        "tags": [
          "LocationProjectWiseItems"
        ],
        "summary": "Creates a new instance of LocationProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "LocationProjectWiseItems"
        ],
        "summary": "Deletes an instance of LocationProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationSerializedItems": {
      "post": {
        "tags": [
          "LocationSerializedItems"
        ],
        "summary": "Creates a new instance of LocationSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationSerializedItems/{id}": {
      "delete": {
        "tags": [
          "LocationSerializedItems"
        ],
        "summary": "Deletes an instance of LocationSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationSharePointItems": {
      "post": {
        "tags": [
          "LocationSharePointItems"
        ],
        "summary": "Creates a new instance of LocationSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationSharePointItems/{id}": {
      "delete": {
        "tags": [
          "LocationSharePointItems"
        ],
        "summary": "Deletes an instance of LocationSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationTags": {
      "post": {
        "tags": [
          "LocationTags"
        ],
        "summary": "Creates a new instance of LocationTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationTags/{id}": {
      "delete": {
        "tags": [
          "LocationTags"
        ],
        "summary": "Deletes an instance of LocationTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationVirtualItemGroups": {
      "post": {
        "tags": [
          "LocationVirtualItemGroups"
        ],
        "summary": "Creates a new instance of LocationVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/LocationVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "LocationVirtualItemGroups"
        ],
        "summary": "Deletes an instance of LocationVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Maps": {
      "post": {
        "tags": [
          "Maps"
        ],
        "summary": "Creates a new instance of Map",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Maps/{id}": {
      "patch": {
        "tags": [
          "Maps"
        ],
        "summary": "Updates an instance of Map",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Maps"
        ],
        "summary": "Deletes an instance of Map",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/MapLayers": {
      "post": {
        "tags": [
          "MapLayers"
        ],
        "summary": "Creates a new instance of MapLayer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapLayerPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/MapLayers/{id}": {
      "patch": {
        "tags": [
          "MapLayers"
        ],
        "summary": "Updates an instance of MapLayer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapLayerPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MapLayers"
        ],
        "summary": "Deletes an instance of MapLayer",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/MediaTypes": {
      "post": {
        "tags": [
          "MediaTypes"
        ],
        "summary": "Creates a new instance of MediaType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/MediaTypes/{id}": {
      "patch": {
        "tags": [
          "MediaTypes"
        ],
        "summary": "Updates an instance of MediaType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MediaTypes"
        ],
        "summary": "Deletes an instance of MediaType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/MethodDefs/{id}": {
      "delete": {
        "tags": [
          "MethodDefs"
        ],
        "summary": "Deletes an instance of MethodDef",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Modifications": {
      "post": {
        "tags": [
          "Modifications"
        ],
        "summary": "Creates a new instance of Modification",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Modifications/{id}": {
      "patch": {
        "tags": [
          "Modifications"
        ],
        "summary": "Updates an instance of Modification",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Modifications"
        ],
        "summary": "Deletes an instance of Modification",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationDependencies": {
      "post": {
        "tags": [
          "ModificationDependencies"
        ],
        "summary": "Creates a new instance of ModificationDependency",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationDependencyPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ModificationImpactedChangeRequests": {
      "post": {
        "tags": [
          "ModificationImpactedChangeRequests"
        ],
        "summary": "Creates a new instance of ModificationImpactedChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificationImpactedChangeRequestPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectLocations": {
      "post": {
        "tags": [
          "ExternalObjectLocations"
        ],
        "summary": "Creates a new instance of ExternalObjectLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectLocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectLocations/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectLocations"
        ],
        "summary": "Deletes an instance of ExternalObjectLocation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectOrganizations": {
      "post": {
        "tags": [
          "ExternalObjectOrganizations"
        ],
        "summary": "Creates a new instance of ExternalObjectOrganization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectOrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectOrganizations/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectOrganizations"
        ],
        "summary": "Deletes an instance of ExternalObjectOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectPersons": {
      "post": {
        "tags": [
          "ExternalObjectPersons"
        ],
        "summary": "Creates a new instance of ExternalObjectPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectPersons/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectPersons"
        ],
        "summary": "Deletes an instance of ExternalObjectPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectPhysicalItems": {
      "post": {
        "tags": [
          "ExternalObjectPhysicalItems"
        ],
        "summary": "Creates a new instance of ExternalObjectPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectPhysicalItems"
        ],
        "summary": "Deletes an instance of ExternalObjectPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectProjects": {
      "post": {
        "tags": [
          "ExternalObjectProjects"
        ],
        "summary": "Creates a new instance of ExternalObjectProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectProjects/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectProjects"
        ],
        "summary": "Deletes an instance of ExternalObjectProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectProjectWiseItems": {
      "post": {
        "tags": [
          "ExternalObjectProjectWiseItems"
        ],
        "summary": "Creates a new instance of ExternalObjectProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectProjectWiseItems"
        ],
        "summary": "Deletes an instance of ExternalObjectProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectSerializedItems": {
      "post": {
        "tags": [
          "ExternalObjectSerializedItems"
        ],
        "summary": "Creates a new instance of ExternalObjectSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectSerializedItems/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectSerializedItems"
        ],
        "summary": "Deletes an instance of ExternalObjectSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectSharePointItems": {
      "post": {
        "tags": [
          "ExternalObjectSharePointItems"
        ],
        "summary": "Creates a new instance of ExternalObjectSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectSharePointItems/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectSharePointItems"
        ],
        "summary": "Deletes an instance of ExternalObjectSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectTags": {
      "post": {
        "tags": [
          "ExternalObjectTags"
        ],
        "summary": "Creates a new instance of ExternalObjectTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectTags/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectTags"
        ],
        "summary": "Deletes an instance of ExternalObjectTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectVirtualItemGroups": {
      "post": {
        "tags": [
          "ExternalObjectVirtualItemGroups"
        ],
        "summary": "Creates a new instance of ExternalObjectVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectVirtualItemGroups"
        ],
        "summary": "Deletes an instance of ExternalObjectVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalSystems": {
      "post": {
        "tags": [
          "ExternalSystems"
        ],
        "summary": "Creates a new instance of ExternalSystem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalSystems/{id}": {
      "delete": {
        "tags": [
          "ExternalSystems"
        ],
        "summary": "Deletes an instance of ExternalSystem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ExternalSystems"
        ],
        "summary": "Updates an instance of ExternalSystem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Files/{id}": {
      "patch": {
        "tags": [
          "Files"
        ],
        "summary": "Updates an instance of File",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Deletes an instance of File",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FileFormats": {
      "post": {
        "tags": [
          "FileFormats"
        ],
        "summary": "Creates a new instance of FileFormat",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileFormatPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FileFormats/{id}": {
      "patch": {
        "tags": [
          "FileFormats"
        ],
        "summary": "Updates an instance of FileFormat",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileFormatPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FileFormats"
        ],
        "summary": "Deletes an instance of FileFormat",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Fileplans": {
      "post": {
        "tags": [
          "Fileplans"
        ],
        "summary": "Creates a new instance of Fileplan",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileplanPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Fileplans/{id}": {
      "patch": {
        "tags": [
          "Fileplans"
        ],
        "summary": "Updates an instance of Fileplan",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileplanPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Fileplans"
        ],
        "summary": "Deletes an instance of Fileplan",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FinancialYears": {
      "post": {
        "tags": [
          "FinancialYears"
        ],
        "summary": "Creates a new instance of FinancialYear",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYearPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FinancialYears/{id}": {
      "patch": {
        "tags": [
          "FinancialYears"
        ],
        "summary": "Updates an instance of FinancialYear",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYearPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Folders": {
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "Creates a new instance of Folder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Folders/{id}": {
      "patch": {
        "tags": [
          "Folders"
        ],
        "summary": "Updates an instance of Folder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Forms": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Creates a new instance of Form",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Forms/{id}": {
      "patch": {
        "tags": [
          "Forms"
        ],
        "summary": "Updates an instance of Form",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Deletes an instance of Form",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormBindings": {
      "post": {
        "tags": [
          "FormBindings"
        ],
        "summary": "Creates a new instance of FormBinding",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormBindingPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormBindings/{id}": {
      "patch": {
        "tags": [
          "FormBindings"
        ],
        "summary": "Updates an instance of FormBinding",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormBindingPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormBindings"
        ],
        "summary": "Deletes an instance of FormBinding",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormCollections": {
      "post": {
        "tags": [
          "FormCollections"
        ],
        "summary": "Creates a new instance of FormCollection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCollectionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormCollections/{id}": {
      "patch": {
        "tags": [
          "FormCollections"
        ],
        "summary": "Updates an instance of FormCollection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCollectionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormCollections"
        ],
        "summary": "Deletes an instance of FormCollection",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControls": {
      "post": {
        "tags": [
          "FormControls"
        ],
        "summary": "Creates a new instance of FormControl",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControls/{id}": {
      "patch": {
        "tags": [
          "FormControls"
        ],
        "summary": "Updates an instance of FormControl",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormControls"
        ],
        "summary": "Deletes an instance of FormControl",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlEvents": {
      "post": {
        "tags": [
          "FormControlEvents"
        ],
        "summary": "Creates a new instance of FormControlEvent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlEventPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlEvents/{id}": {
      "patch": {
        "tags": [
          "FormControlEvents"
        ],
        "summary": "Updates an instance of FormControlEvent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlEventPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormControlEvents"
        ],
        "summary": "Deletes an instance of FormControlEvent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlScripts": {
      "post": {
        "tags": [
          "FormControlScripts"
        ],
        "summary": "Creates a new instance of FormControlScript",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlScriptPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlScripts/{id}": {
      "patch": {
        "tags": [
          "FormControlScripts"
        ],
        "summary": "Updates an instance of FormControlScript",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlScriptPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormControlScripts"
        ],
        "summary": "Deletes an instance of FormControlScript",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlScriptActions": {
      "post": {
        "tags": [
          "FormControlScriptActions"
        ],
        "summary": "Creates a new instance of FormControlScriptAction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlScriptActionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlScriptActions/{id}": {
      "patch": {
        "tags": [
          "FormControlScriptActions"
        ],
        "summary": "Updates an instance of FormControlScriptAction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlScriptActionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormControlScriptActions"
        ],
        "summary": "Deletes an instance of FormControlScriptAction",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlScriptConditions": {
      "post": {
        "tags": [
          "FormControlScriptConditions"
        ],
        "summary": "Creates a new instance of FormControlScriptCondition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlScriptConditionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormControlScriptConditions/{id}": {
      "patch": {
        "tags": [
          "FormControlScriptConditions"
        ],
        "summary": "Updates an instance of FormControlScriptCondition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormControlScriptConditionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormControlScriptConditions"
        ],
        "summary": "Deletes an instance of FormControlScriptCondition",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormDefinitions": {
      "post": {
        "tags": [
          "FormDefinitions"
        ],
        "summary": "Creates a new instance of FormDefinition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormDefinitionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormDefinitions/{id}": {
      "patch": {
        "tags": [
          "FormDefinitions"
        ],
        "summary": "Updates an instance of FormDefinition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormDefinitionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormDefinitions"
        ],
        "summary": "Deletes an instance of FormDefinition",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormFormCollections": {
      "post": {
        "tags": [
          "FormFormCollections"
        ],
        "summary": "Creates a new instance of FormFormCollection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormFormCollectionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormFormCollections/{id}": {
      "patch": {
        "tags": [
          "FormFormCollections"
        ],
        "summary": "Updates an instance of FormFormCollection",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormFormCollectionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormFormCollections"
        ],
        "summary": "Deletes an instance of FormFormCollection",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormListWheres": {
      "post": {
        "tags": [
          "FormListWheres"
        ],
        "summary": "Creates a new instance of FormListWhere",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormListWherePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormListWheres/{id}": {
      "patch": {
        "tags": [
          "FormListWheres"
        ],
        "summary": "Updates an instance of FormListWhere",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormListWherePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormListWheres"
        ],
        "summary": "Deletes an instance of FormListWhere",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormPropertyBindings": {
      "post": {
        "tags": [
          "FormPropertyBindings"
        ],
        "summary": "Creates a new instance of FormPropertyBinding",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPropertyBindingPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormPropertyBindings/{id}": {
      "patch": {
        "tags": [
          "FormPropertyBindings"
        ],
        "summary": "Updates an instance of FormPropertyBinding",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPropertyBindingPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormPropertyBindings"
        ],
        "summary": "Deletes an instance of FormPropertyBinding",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormStyles": {
      "post": {
        "tags": [
          "FormStyles"
        ],
        "summary": "Creates a new instance of FormStyle",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormStylePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/FormStyles/{id}": {
      "patch": {
        "tags": [
          "FormStyles"
        ],
        "summary": "Updates an instance of FormStyle",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormStylePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FormStyles"
        ],
        "summary": "Deletes an instance of FormStyle",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItems": {
      "post": {
        "tags": [
          "GroupedVirtualItems"
        ],
        "summary": "Creates a new instance of GroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItems/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItems"
        ],
        "summary": "Deletes an instance of GroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemGroupedVirtualItems": {
      "post": {
        "tags": [
          "GroupedVirtualItemGroupedVirtualItems"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemGroupedVirtualItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemGroupedVirtualItems/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemGroupedVirtualItems"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemLocations": {
      "post": {
        "tags": [
          "GroupedVirtualItemLocations"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemLocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemLocations/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemLocations"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemLocation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemOrganizations": {
      "post": {
        "tags": [
          "GroupedVirtualItemOrganizations"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemOrganization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemOrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemOrganizations/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemOrganizations"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemPersons": {
      "post": {
        "tags": [
          "GroupedVirtualItemPersons"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemPersons/{id}": {
      "delete": {
        "tags": [
          "GroupedVirtualItemPersons"
        ],
        "summary": "Deletes an instance of GroupedVirtualItemPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/GroupedVirtualItemPhysicalItems": {
      "post": {
        "tags": [
          "GroupedVirtualItemPhysicalItems"
        ],
        "summary": "Creates a new instance of GroupedVirtualItemPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupedVirtualItemPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentCopies/{id}": {
      "delete": {
        "tags": [
          "DocumentCopies"
        ],
        "summary": "Deletes an instance of DocumentCopy",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "DocumentCopies"
        ],
        "summary": "Updates an instance of DocumentCopy",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCopyPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentDocuments": {
      "post": {
        "tags": [
          "DocumentDocuments"
        ],
        "summary": "Creates a new instance of DocumentDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentDocuments/{id}": {
      "delete": {
        "tags": [
          "DocumentDocuments"
        ],
        "summary": "Deletes an instance of DocumentDocument",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentEvents": {
      "post": {
        "tags": [
          "DocumentEvents"
        ],
        "summary": "Creates a new instance of DocumentEvent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentEventPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentEvents/{id}": {
      "delete": {
        "tags": [
          "DocumentEvents"
        ],
        "summary": "Deletes an instance of DocumentEvent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentExternalObjects": {
      "post": {
        "tags": [
          "DocumentExternalObjects"
        ],
        "summary": "Creates a new instance of DocumentExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentExternalObjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentExternalObjects/{id}": {
      "delete": {
        "tags": [
          "DocumentExternalObjects"
        ],
        "summary": "Deletes an instance of DocumentExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentFileplans": {
      "post": {
        "tags": [
          "DocumentFileplans"
        ],
        "summary": "Creates a new instance of DocumentFileplan",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentFileplanPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentGroupedVirtualItems": {
      "post": {
        "tags": [
          "DocumentGroupedVirtualItems"
        ],
        "summary": "Creates a new instance of DocumentGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentGroupedVirtualItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentGroupedVirtualItems/{id}": {
      "delete": {
        "tags": [
          "DocumentGroupedVirtualItems"
        ],
        "summary": "Deletes an instance of DocumentGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentLocations": {
      "post": {
        "tags": [
          "DocumentLocations"
        ],
        "summary": "Creates a new instance of DocumentLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentLocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentLocations/{id}": {
      "delete": {
        "tags": [
          "DocumentLocations"
        ],
        "summary": "Deletes an instance of DocumentLocation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentModifications": {
      "post": {
        "tags": [
          "DocumentModifications"
        ],
        "summary": "Creates a new instance of DocumentModification",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentModificationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentModifications/{id}": {
      "delete": {
        "tags": [
          "DocumentModifications"
        ],
        "summary": "Deletes an instance of DocumentModification",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentOrganizations": {
      "post": {
        "tags": [
          "DocumentOrganizations"
        ],
        "summary": "Creates a new instance of DocumentOrganization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentOrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentOrganizations/{id}": {
      "delete": {
        "tags": [
          "DocumentOrganizations"
        ],
        "summary": "Deletes an instance of DocumentOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentPersons": {
      "post": {
        "tags": [
          "DocumentPersons"
        ],
        "summary": "Creates a new instance of DocumentPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentPersons/{id}": {
      "delete": {
        "tags": [
          "DocumentPersons"
        ],
        "summary": "Deletes an instance of DocumentPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentPhysicalItems": {
      "post": {
        "tags": [
          "DocumentPhysicalItems"
        ],
        "summary": "Creates a new instance of DocumentPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "DocumentPhysicalItems"
        ],
        "summary": "Deletes an instance of DocumentPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentPrograms": {
      "post": {
        "tags": [
          "DocumentPrograms"
        ],
        "summary": "Creates a new instance of DocumentProgram",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentProgramPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentPrograms/{id}": {
      "delete": {
        "tags": [
          "DocumentPrograms"
        ],
        "summary": "Deletes an instance of DocumentProgram",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentProjects": {
      "post": {
        "tags": [
          "DocumentProjects"
        ],
        "summary": "Creates a new instance of DocumentProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentProjects/{id}": {
      "delete": {
        "tags": [
          "DocumentProjects"
        ],
        "summary": "Deletes an instance of DocumentProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentProjectWiseItems": {
      "post": {
        "tags": [
          "DocumentProjectWiseItems"
        ],
        "summary": "Creates a new instance of DocumentProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "DocumentProjectWiseItems"
        ],
        "summary": "Deletes an instance of DocumentProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentRestrictions": {
      "post": {
        "tags": [
          "DocumentRestrictions"
        ],
        "summary": "Creates a new instance of DocumentRestriction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentRestrictionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentRestrictions/{id}": {
      "delete": {
        "tags": [
          "DocumentRestrictions"
        ],
        "summary": "Deletes an instance of DocumentRestriction",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentSerializedItems": {
      "post": {
        "tags": [
          "DocumentSerializedItems"
        ],
        "summary": "Creates a new instance of DocumentSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentSerializedItems/{id}": {
      "delete": {
        "tags": [
          "DocumentSerializedItems"
        ],
        "summary": "Deletes an instance of DocumentSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentSharePointItems": {
      "post": {
        "tags": [
          "DocumentSharePointItems"
        ],
        "summary": "Creates a new instance of DocumentSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentSharePointItems/{id}": {
      "delete": {
        "tags": [
          "DocumentSharePointItems"
        ],
        "summary": "Deletes an instance of DocumentSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentTags": {
      "post": {
        "tags": [
          "DocumentTags"
        ],
        "summary": "Creates a new instance of DocumentTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentTags/{id}": {
      "delete": {
        "tags": [
          "DocumentTags"
        ],
        "summary": "Deletes an instance of DocumentTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentTaskOrders": {
      "post": {
        "tags": [
          "DocumentTaskOrders"
        ],
        "summary": "Creates a new instance of DocumentTaskOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTaskOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentTaskOrders/{id}": {
      "delete": {
        "tags": [
          "DocumentTaskOrders"
        ],
        "summary": "Deletes an instance of DocumentTaskOrder",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentVirtualItemGroups": {
      "post": {
        "tags": [
          "DocumentVirtualItemGroups"
        ],
        "summary": "Creates a new instance of DocumentVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "DocumentVirtualItemGroups"
        ],
        "summary": "Deletes an instance of DocumentVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Engines": {
      "post": {
        "tags": [
          "Engines"
        ],
        "summary": "Creates a new instance of Engine",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnginePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Engines/{id}": {
      "patch": {
        "tags": [
          "Engines"
        ],
        "summary": "Updates an instance of Engine",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnginePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Engines"
        ],
        "summary": "Deletes an instance of Engine",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EntityMetadatas": {
      "post": {
        "tags": [
          "EntityMetadatas"
        ],
        "summary": "Creates a new instance of EntityMetadata",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMetadataPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EntityMetadatas/{id}": {
      "delete": {
        "tags": [
          "EntityMetadatas"
        ],
        "summary": "Deletes an instance of EntityMetadata",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "EntityMetadatas"
        ],
        "summary": "Updates an instance of EntityMetadata",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMetadataPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Events": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Creates a new instance of Event",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Events/{id}": {
      "patch": {
        "tags": [
          "Events"
        ],
        "summary": "Updates an instance of Event",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Deletes an instance of Event",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventEvents": {
      "post": {
        "tags": [
          "EventEvents"
        ],
        "summary": "Creates a new instance of EventEvent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventEventPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventEvents/{id}": {
      "delete": {
        "tags": [
          "EventEvents"
        ],
        "summary": "Deletes an instance of EventEvent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventExternalObjects": {
      "post": {
        "tags": [
          "EventExternalObjects"
        ],
        "summary": "Creates a new instance of EventExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventExternalObjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventExternalObjects/{id}": {
      "delete": {
        "tags": [
          "EventExternalObjects"
        ],
        "summary": "Deletes an instance of EventExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventGroupedVirtualItems": {
      "post": {
        "tags": [
          "EventGroupedVirtualItems"
        ],
        "summary": "Creates a new instance of EventGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventGroupedVirtualItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventGroupedVirtualItems/{id}": {
      "delete": {
        "tags": [
          "EventGroupedVirtualItems"
        ],
        "summary": "Deletes an instance of EventGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventLocations": {
      "post": {
        "tags": [
          "EventLocations"
        ],
        "summary": "Creates a new instance of EventLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventLocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventLocations/{id}": {
      "delete": {
        "tags": [
          "EventLocations"
        ],
        "summary": "Deletes an instance of EventLocation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventModifications": {
      "post": {
        "tags": [
          "EventModifications"
        ],
        "summary": "Creates a new instance of EventModification",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModificationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventModifications/{id}": {
      "delete": {
        "tags": [
          "EventModifications"
        ],
        "summary": "Deletes an instance of EventModification",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventOrganizations": {
      "post": {
        "tags": [
          "EventOrganizations"
        ],
        "summary": "Creates a new instance of EventOrganization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventOrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventOrganizations/{id}": {
      "delete": {
        "tags": [
          "EventOrganizations"
        ],
        "summary": "Deletes an instance of EventOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventPersons": {
      "post": {
        "tags": [
          "EventPersons"
        ],
        "summary": "Creates a new instance of EventPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventPersons/{id}": {
      "delete": {
        "tags": [
          "EventPersons"
        ],
        "summary": "Deletes an instance of EventPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventPhysicalItems": {
      "post": {
        "tags": [
          "EventPhysicalItems"
        ],
        "summary": "Creates a new instance of EventPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "EventPhysicalItems"
        ],
        "summary": "Deletes an instance of EventPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventProjects": {
      "post": {
        "tags": [
          "EventProjects"
        ],
        "summary": "Creates a new instance of EventProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventProjects/{id}": {
      "delete": {
        "tags": [
          "EventProjects"
        ],
        "summary": "Deletes an instance of EventProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventProjectWiseItems": {
      "post": {
        "tags": [
          "EventProjectWiseItems"
        ],
        "summary": "Creates a new instance of EventProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "EventProjectWiseItems"
        ],
        "summary": "Deletes an instance of EventProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventSerializedItems": {
      "post": {
        "tags": [
          "EventSerializedItems"
        ],
        "summary": "Creates a new instance of EventSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventSerializedItems/{id}": {
      "delete": {
        "tags": [
          "EventSerializedItems"
        ],
        "summary": "Deletes an instance of EventSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventSharePointItems": {
      "post": {
        "tags": [
          "EventSharePointItems"
        ],
        "summary": "Creates a new instance of EventSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventSharePointItems/{id}": {
      "delete": {
        "tags": [
          "EventSharePointItems"
        ],
        "summary": "Deletes an instance of EventSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventTags": {
      "post": {
        "tags": [
          "EventTags"
        ],
        "summary": "Creates a new instance of EventTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventTags/{id}": {
      "delete": {
        "tags": [
          "EventTags"
        ],
        "summary": "Deletes an instance of EventTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventVirtualItemGroups": {
      "post": {
        "tags": [
          "EventVirtualItemGroups"
        ],
        "summary": "Creates a new instance of EventVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/EventVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "EventVirtualItemGroups"
        ],
        "summary": "Deletes an instance of EventVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalAttributeDefs": {
      "post": {
        "tags": [
          "ExternalAttributeDefs"
        ],
        "summary": "Creates a new instance of ExternalAttributeDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAttributeDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalAttributeDefs/{id}": {
      "patch": {
        "tags": [
          "ExternalAttributeDefs"
        ],
        "summary": "Updates an instance of ExternalAttributeDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAttributeDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ExternalAttributeDefs"
        ],
        "summary": "Deletes an instance of ExternalAttributeDef",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalAttributeLinks": {
      "post": {
        "tags": [
          "ExternalAttributeLinks"
        ],
        "summary": "Creates a new instance of ExternalAttributeLink",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAttributeLinkPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjects/{id}": {
      "patch": {
        "tags": [
          "ExternalObjects"
        ],
        "summary": "Updates an instance of ExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ExternalObjects"
        ],
        "summary": "Deletes an instance of ExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectExternalObjects": {
      "post": {
        "tags": [
          "ExternalObjectExternalObjects"
        ],
        "summary": "Creates a new instance of ExternalObjectExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectExternalObjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectExternalObjects/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectExternalObjects"
        ],
        "summary": "Deletes an instance of ExternalObjectExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectGroupedVirtualItems": {
      "post": {
        "tags": [
          "ExternalObjectGroupedVirtualItems"
        ],
        "summary": "Creates a new instance of ExternalObjectGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalObjectGroupedVirtualItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ExternalObjectGroupedVirtualItems/{id}": {
      "delete": {
        "tags": [
          "ExternalObjectGroupedVirtualItems"
        ],
        "summary": "Deletes an instance of ExternalObjectGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Classs/{id}": {
      "patch": {
        "tags": [
          "Classs"
        ],
        "summary": "Updates an instance of Class",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassActivities": {
      "post": {
        "tags": [
          "ClassActivities"
        ],
        "summary": "Creates a new instance of ClassActivity",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassActivityPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassActivities/{id}": {
      "patch": {
        "tags": [
          "ClassActivities"
        ],
        "summary": "Updates an instance of ClassActivity",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassActivityPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ClassActivities"
        ],
        "summary": "Deletes an instance of ClassActivity",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassActivityRules": {
      "post": {
        "tags": [
          "ClassActivityRules"
        ],
        "summary": "Creates a new instance of ClassActivityRule",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassActivityRulePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassAttributes": {
      "post": {
        "tags": [
          "ClassAttributes"
        ],
        "summary": "Creates a new instance of ClassAttribute",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassAttributePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassAttributes/{id}": {
      "patch": {
        "tags": [
          "ClassAttributes"
        ],
        "summary": "Updates an instance of ClassAttribute",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassAttributePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassRelationships": {
      "post": {
        "tags": [
          "ClassRelationships"
        ],
        "summary": "Creates a new instance of ClassRelationship",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassRelationshipPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassRelationships/{id}": {
      "patch": {
        "tags": [
          "ClassRelationships"
        ],
        "summary": "Updates an instance of ClassRelationship",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassRelationshipPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassRelationshipRules": {
      "post": {
        "tags": [
          "ClassRelationshipRules"
        ],
        "summary": "Creates a new instance of ClassRelationshipRule",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassRelationshipRulePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ClassRelationshipRules/{id}": {
      "delete": {
        "tags": [
          "ClassRelationshipRules"
        ],
        "summary": "Deletes an instance of ClassRelationshipRule",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ClassRelationshipRules"
        ],
        "summary": "Updates an instance of ClassRelationshipRule",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassRelationshipRulePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CodeAssemblies": {
      "post": {
        "tags": [
          "CodeAssemblies"
        ],
        "summary": "Creates a new instance of CodeAssembly",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeAssemblyPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CodeAssemblies/{id}": {
      "patch": {
        "tags": [
          "CodeAssemblies"
        ],
        "summary": "Updates an instance of CodeAssembly",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeAssemblyPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "CodeAssemblies"
        ],
        "summary": "Deletes an instance of CodeAssembly",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CommercialContracts": {
      "post": {
        "tags": [
          "CommercialContracts"
        ],
        "summary": "Creates a new instance of CommercialContract",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommercialContractPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CommercialContracts/{id}": {
      "patch": {
        "tags": [
          "CommercialContracts"
        ],
        "summary": "Updates an instance of CommercialContract",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommercialContractPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Conditions": {
      "post": {
        "tags": [
          "Conditions"
        ],
        "summary": "Creates a new instance of Condition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConditionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Conditions/{id}": {
      "patch": {
        "tags": [
          "Conditions"
        ],
        "summary": "Updates an instance of Condition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConditionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ConditionConditions": {
      "post": {
        "tags": [
          "ConditionConditions"
        ],
        "summary": "Creates a new instance of ConditionCondition",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConditionConditionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ConditionConditions/{id}": {
      "delete": {
        "tags": [
          "ConditionConditions"
        ],
        "summary": "Deletes an instance of ConditionCondition",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ConditionDocuments": {
      "post": {
        "tags": [
          "ConditionDocuments"
        ],
        "summary": "Creates a new instance of ConditionDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConditionDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ConditionDocuments/{id}": {
      "delete": {
        "tags": [
          "ConditionDocuments"
        ],
        "summary": "Deletes an instance of ConditionDocument",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ConditionTags": {
      "post": {
        "tags": [
          "ConditionTags"
        ],
        "summary": "Creates a new instance of ConditionTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConditionTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ConditionTags/{id}": {
      "delete": {
        "tags": [
          "ConditionTags"
        ],
        "summary": "Deletes an instance of ConditionTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ContractDocuments": {
      "post": {
        "tags": [
          "ContractDocuments"
        ],
        "summary": "Creates a new instance of ContractDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ContractDocuments/{id}": {
      "delete": {
        "tags": [
          "ContractDocuments"
        ],
        "summary": "Deletes an instance of ContractDocument",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ContractItems": {
      "post": {
        "tags": [
          "ContractItems"
        ],
        "summary": "Creates a new instance of ContractItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ContractItems/{id}": {
      "patch": {
        "tags": [
          "ContractItems"
        ],
        "summary": "Updates an instance of ContractItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ControlledObjects": {
      "post": {
        "tags": [
          "ControlledObjects"
        ],
        "summary": "Creates a new instance of ControlledObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlledObjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ControlledObjects/{id}": {
      "patch": {
        "tags": [
          "ControlledObjects"
        ],
        "summary": "Updates an instance of ControlledObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlledObjectPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CopyPackages": {
      "post": {
        "tags": [
          "CopyPackages"
        ],
        "summary": "Creates a new instance of CopyPackage",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyPackagePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CopyPackages/{id}": {
      "patch": {
        "tags": [
          "CopyPackages"
        ],
        "summary": "Updates an instance of CopyPackage",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyPackagePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "CopyPackages"
        ],
        "summary": "Deletes an instance of CopyPackage",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CopyPackageItems": {
      "post": {
        "tags": [
          "CopyPackageItems"
        ],
        "summary": "Creates a new instance of CopyPackageItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyPackageItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CopyPackageItems/{id}": {
      "patch": {
        "tags": [
          "CopyPackageItems"
        ],
        "summary": "Updates an instance of CopyPackageItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyPackageItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CostCategories": {
      "post": {
        "tags": [
          "CostCategories"
        ],
        "summary": "Creates a new instance of CostCategory",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCategoryPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CostCategories/{id}": {
      "patch": {
        "tags": [
          "CostCategories"
        ],
        "summary": "Updates an instance of CostCategory",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCategoryPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CrossReferences": {
      "post": {
        "tags": [
          "CrossReferences"
        ],
        "summary": "Creates a new instance of CrossReference",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrossReferencePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CrossReferences/{id}": {
      "patch": {
        "tags": [
          "CrossReferences"
        ],
        "summary": "Updates an instance of CrossReference",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrossReferencePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CrossReferenceTypes": {
      "post": {
        "tags": [
          "CrossReferenceTypes"
        ],
        "summary": "Creates a new instance of CrossReferenceType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrossReferenceTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/CrossReferenceTypes/{id}": {
      "patch": {
        "tags": [
          "CrossReferenceTypes"
        ],
        "summary": "Updates an instance of CrossReferenceType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrossReferenceTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "CrossReferenceTypes"
        ],
        "summary": "Deletes an instance of CrossReferenceType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaivers": {
      "post": {
        "tags": [
          "DeviationWaivers"
        ],
        "summary": "Creates a new instance of DeviationWaiver",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaivers/{id}": {
      "patch": {
        "tags": [
          "DeviationWaivers"
        ],
        "summary": "Updates an instance of DeviationWaiver",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DeviationWaivers"
        ],
        "summary": "Deletes an instance of DeviationWaiver",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverDocuments": {
      "post": {
        "tags": [
          "DeviationWaiverDocuments"
        ],
        "summary": "Creates a new instance of DeviationWaiverDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverDocuments/{id}": {
      "delete": {
        "tags": [
          "DeviationWaiverDocuments"
        ],
        "summary": "Deletes an instance of DeviationWaiverDocument",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverEvents": {
      "post": {
        "tags": [
          "DeviationWaiverEvents"
        ],
        "summary": "Creates a new instance of DeviationWaiverEvent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverEventPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverEvents/{id}": {
      "delete": {
        "tags": [
          "DeviationWaiverEvents"
        ],
        "summary": "Deletes an instance of DeviationWaiverEvent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverImpactedPhysicalItems": {
      "post": {
        "tags": [
          "DeviationWaiverImpactedPhysicalItems"
        ],
        "summary": "Creates a new instance of DeviationWaiverImpactedPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverImpactedPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverImpactedSerializedItems": {
      "post": {
        "tags": [
          "DeviationWaiverImpactedSerializedItems"
        ],
        "summary": "Creates a new instance of DeviationWaiverImpactedSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverImpactedSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverPhysicalItems": {
      "post": {
        "tags": [
          "DeviationWaiverPhysicalItems"
        ],
        "summary": "Creates a new instance of DeviationWaiverPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "DeviationWaiverPhysicalItems"
        ],
        "summary": "Deletes an instance of DeviationWaiverPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverSerializedItems": {
      "post": {
        "tags": [
          "DeviationWaiverSerializedItems"
        ],
        "summary": "Creates a new instance of DeviationWaiverSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationWaiverSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DeviationWaiverSerializedItems/{id}": {
      "delete": {
        "tags": [
          "DeviationWaiverSerializedItems"
        ],
        "summary": "Deletes an instance of DeviationWaiverSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Dimensions": {
      "post": {
        "tags": [
          "Dimensions"
        ],
        "summary": "Creates a new instance of Dimension",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Dimensions/{id}": {
      "patch": {
        "tags": [
          "Dimensions"
        ],
        "summary": "Updates an instance of Dimension",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DirectoryEntries": {
      "post": {
        "tags": [
          "DirectoryEntries"
        ],
        "summary": "Creates a new instance of DirectoryEntry",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectoryEntryPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DirectoryEntries/{id}": {
      "patch": {
        "tags": [
          "DirectoryEntries"
        ],
        "summary": "Updates an instance of DirectoryEntry",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectoryEntryPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DirectoryEntries"
        ],
        "summary": "Deletes an instance of DirectoryEntry",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DirectoryEntryTypes": {
      "post": {
        "tags": [
          "DirectoryEntryTypes"
        ],
        "summary": "Creates a new instance of DirectoryEntryType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectoryEntryTypePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DirectoryEntryTypes/{id}": {
      "patch": {
        "tags": [
          "DirectoryEntryTypes"
        ],
        "summary": "Updates an instance of DirectoryEntryType",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectoryEntryTypePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DirectoryEntryTypes"
        ],
        "summary": "Deletes an instance of DirectoryEntryType",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DispositionItems": {
      "post": {
        "tags": [
          "DispositionItems"
        ],
        "summary": "Creates a new instance of DispositionItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DispositionItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DispositionOrders": {
      "post": {
        "tags": [
          "DispositionOrders"
        ],
        "summary": "Creates a new instance of DispositionOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DispositionOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DispositionOrders/{id}": {
      "patch": {
        "tags": [
          "DispositionOrders"
        ],
        "summary": "Updates an instance of DispositionOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DispositionOrderPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DispositionOrders"
        ],
        "summary": "Deletes an instance of DispositionOrder",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionLists": {
      "post": {
        "tags": [
          "DistributionLists"
        ],
        "summary": "Creates a new instance of DistributionList",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionLists/{id}": {
      "patch": {
        "tags": [
          "DistributionLists"
        ],
        "summary": "Updates an instance of DistributionList",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DistributionLists"
        ],
        "summary": "Deletes an instance of DistributionList",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionOrders": {
      "post": {
        "tags": [
          "DistributionOrders"
        ],
        "summary": "Creates a new instance of DistributionOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionOrderPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionOrders/{id}": {
      "patch": {
        "tags": [
          "DistributionOrders"
        ],
        "summary": "Updates an instance of DistributionOrder",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionOrderPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DistributionOrders"
        ],
        "summary": "Deletes an instance of DistributionOrder",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionOrderDocuments": {
      "post": {
        "tags": [
          "DistributionOrderDocuments"
        ],
        "summary": "Creates a new instance of DistributionOrderDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionOrderDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionOrderRecipients": {
      "post": {
        "tags": [
          "DistributionOrderRecipients"
        ],
        "summary": "Creates a new instance of DistributionOrderRecipient",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionOrderRecipientPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionOrderRecipients/{id}": {
      "patch": {
        "tags": [
          "DistributionOrderRecipients"
        ],
        "summary": "Updates an instance of DistributionOrderRecipient",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionOrderRecipientPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionReasons": {
      "post": {
        "tags": [
          "DistributionReasons"
        ],
        "summary": "Creates a new instance of DistributionReason",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionReasonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DistributionReasons/{id}": {
      "patch": {
        "tags": [
          "DistributionReasons"
        ],
        "summary": "Updates an instance of DistributionReason",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionReasonPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DistributionReasons"
        ],
        "summary": "Deletes an instance of DistributionReason",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Documents": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Creates a new instance of Document",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Documents/{id}": {
      "patch": {
        "tags": [
          "Documents"
        ],
        "summary": "Updates an instance of Document",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Deletes an instance of Document",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/DocumentCopies": {
      "post": {
        "tags": [
          "DocumentCopies"
        ],
        "summary": "Creates a new instance of DocumentCopy",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCopyPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ActivityReferences": {
      "post": {
        "tags": [
          "ActivityReferences"
        ],
        "summary": "Creates a new instance of ActivityReference",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityReferencePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ActivityTypeSets": {
      "post": {
        "tags": [
          "ActivityTypeSets"
        ],
        "summary": "Creates a new instance of ActivityTypeSet",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTypeSetPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ActivityTypeSets/{id}": {
      "patch": {
        "tags": [
          "ActivityTypeSets"
        ],
        "summary": "Updates an instance of ActivityTypeSet",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTypeSetPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ActivityTypeSets"
        ],
        "summary": "Deletes an instance of ActivityTypeSet",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ActivityTypeSetItems": {
      "post": {
        "tags": [
          "ActivityTypeSetItems"
        ],
        "summary": "Creates a new instance of ActivityTypeSetItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTypeSetItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ActivityTypeSetItems/{id}": {
      "patch": {
        "tags": [
          "ActivityTypeSetItems"
        ],
        "summary": "Updates an instance of ActivityTypeSetItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTypeSetItemPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AffectedDocuments": {
      "post": {
        "tags": [
          "AffectedDocuments"
        ],
        "summary": "Creates a new instance of AffectedDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AffectedDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AlternativeNumbers": {
      "post": {
        "tags": [
          "AlternativeNumbers"
        ],
        "summary": "Creates a new instance of AlternativeNumber",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativeNumberPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AlternativeNumbers/{id}": {
      "patch": {
        "tags": [
          "AlternativeNumbers"
        ],
        "summary": "Updates an instance of AlternativeNumber",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativeNumberPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AlternativeNumberDefs": {
      "post": {
        "tags": [
          "AlternativeNumberDefs"
        ],
        "summary": "Creates a new instance of AlternativeNumberDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativeNumberDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AlternativeNumberDefs/{id}": {
      "patch": {
        "tags": [
          "AlternativeNumberDefs"
        ],
        "summary": "Updates an instance of AlternativeNumberDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativeNumberDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AlternativeNumberDefs"
        ],
        "summary": "Deletes an instance of AlternativeNumberDef",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Answers": {
      "post": {
        "tags": [
          "Answers"
        ],
        "summary": "Creates a new instance of Answer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Answers/{id}": {
      "patch": {
        "tags": [
          "Answers"
        ],
        "summary": "Updates an instance of Answer",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Answers"
        ],
        "summary": "Deletes an instance of Answer",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Attributes/{id}": {
      "patch": {
        "tags": [
          "Attributes"
        ],
        "summary": "Updates an instance of Attribute",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeDefs": {
      "post": {
        "tags": [
          "AttributeDefs"
        ],
        "summary": "Creates a new instance of AttributeDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeDefs/{id}": {
      "patch": {
        "tags": [
          "AttributeDefs"
        ],
        "summary": "Updates an instance of AttributeDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AttributeDefs"
        ],
        "summary": "Deletes an instance of AttributeDef",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeDependencies": {
      "post": {
        "tags": [
          "AttributeDependencies"
        ],
        "summary": "Creates a new instance of AttributeDependency",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDependencyPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeDomains/{id}": {
      "delete": {
        "tags": [
          "AttributeDomains"
        ],
        "summary": "Deletes an instance of AttributeDomain",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeGroups": {
      "post": {
        "tags": [
          "AttributeGroups"
        ],
        "summary": "Creates a new instance of AttributeGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeGroups/{id}": {
      "patch": {
        "tags": [
          "AttributeGroups"
        ],
        "summary": "Updates an instance of AttributeGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeGroupPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AttributeGroups"
        ],
        "summary": "Deletes an instance of AttributeGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeGroupMembers": {
      "post": {
        "tags": [
          "AttributeGroupMembers"
        ],
        "summary": "Creates a new instance of AttributeGroupMember",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeGroupMemberPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeGroupMembers/{id}": {
      "patch": {
        "tags": [
          "AttributeGroupMembers"
        ],
        "summary": "Updates an instance of AttributeGroupMember",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeGroupMemberPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeTableColumnDefs": {
      "post": {
        "tags": [
          "AttributeTableColumnDefs"
        ],
        "summary": "Creates a new instance of AttributeTableColumnDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeTableColumnDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeTableColumnDefs/{id}": {
      "patch": {
        "tags": [
          "AttributeTableColumnDefs"
        ],
        "summary": "Updates an instance of AttributeTableColumnDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeTableColumnDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeTypeDefs": {
      "post": {
        "tags": [
          "AttributeTypeDefs"
        ],
        "summary": "Creates a new instance of AttributeTypeDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeTypeDefPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeTypeDefs/{id}": {
      "patch": {
        "tags": [
          "AttributeTypeDefs"
        ],
        "summary": "Updates an instance of AttributeTypeDef",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeTypeDefPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AttributeTypeDefs"
        ],
        "summary": "Deletes an instance of AttributeTypeDef",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeUnits": {
      "post": {
        "tags": [
          "AttributeUnits"
        ],
        "summary": "Creates a new instance of AttributeUnit",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeUnitPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeUnits/{id}": {
      "patch": {
        "tags": [
          "AttributeUnits"
        ],
        "summary": "Updates an instance of AttributeUnit",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeUnitPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeValueLists": {
      "post": {
        "tags": [
          "AttributeValueLists"
        ],
        "summary": "Creates a new instance of AttributeValueList",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeValueListPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AttributeValueLists/{id}": {
      "patch": {
        "tags": [
          "AttributeValueLists"
        ],
        "summary": "Updates an instance of AttributeValueList",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeValueListPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AttributeValueLists"
        ],
        "summary": "Deletes an instance of AttributeValueList",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Automations": {
      "post": {
        "tags": [
          "Automations"
        ],
        "summary": "Creates a new instance of Automation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Automations/{id}": {
      "patch": {
        "tags": [
          "Automations"
        ],
        "summary": "Updates an instance of Automation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Automations"
        ],
        "summary": "Deletes an instance of Automation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AutomationActions": {
      "post": {
        "tags": [
          "AutomationActions"
        ],
        "summary": "Creates a new instance of AutomationAction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationActionPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AutomationActions/{id}": {
      "patch": {
        "tags": [
          "AutomationActions"
        ],
        "summary": "Updates an instance of AutomationAction",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationActionPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AutomationActionDefs/{id}": {
      "delete": {
        "tags": [
          "AutomationActionDefs"
        ],
        "summary": "Deletes an instance of AutomationActionDef",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/AutomationDbEvents": {
      "post": {
        "tags": [
          "AutomationDbEvents"
        ],
        "summary": "Creates a new instance of AutomationDbEvent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationDbEventPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Budgets": {
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Creates a new instance of Budget",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Budgets/{id}": {
      "patch": {
        "tags": [
          "Budgets"
        ],
        "summary": "Updates an instance of Budget",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/BudgetDocuments": {
      "post": {
        "tags": [
          "BudgetDocuments"
        ],
        "summary": "Creates a new instance of BudgetDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/BudgetDocuments/{id}": {
      "delete": {
        "tags": [
          "BudgetDocuments"
        ],
        "summary": "Deletes an instance of BudgetDocument",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequests": {
      "post": {
        "tags": [
          "ChangeRequests"
        ],
        "summary": "Creates a new instance of ChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequests/{id}": {
      "patch": {
        "tags": [
          "ChangeRequests"
        ],
        "summary": "Updates an instance of ChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ChangeRequests"
        ],
        "summary": "Deletes an instance of ChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestChangeRequests": {
      "post": {
        "tags": [
          "ChangeRequestChangeRequests"
        ],
        "summary": "Creates a new instance of ChangeRequestChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestChangeRequestPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestChangeRequests/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestChangeRequests"
        ],
        "summary": "Deletes an instance of ChangeRequestChangeRequest",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestDocuments": {
      "post": {
        "tags": [
          "ChangeRequestDocuments"
        ],
        "summary": "Creates a new instance of ChangeRequestDocument",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestDocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestDocuments/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestDocuments"
        ],
        "summary": "Deletes an instance of ChangeRequestDocument",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestEvents": {
      "post": {
        "tags": [
          "ChangeRequestEvents"
        ],
        "summary": "Creates a new instance of ChangeRequestEvent",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestEventPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestEvents/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestEvents"
        ],
        "summary": "Deletes an instance of ChangeRequestEvent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestExternalObjects": {
      "post": {
        "tags": [
          "ChangeRequestExternalObjects"
        ],
        "summary": "Creates a new instance of ChangeRequestExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestExternalObjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestExternalObjects/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestExternalObjects"
        ],
        "summary": "Deletes an instance of ChangeRequestExternalObject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestGroupedVirtualItems": {
      "post": {
        "tags": [
          "ChangeRequestGroupedVirtualItems"
        ],
        "summary": "Creates a new instance of ChangeRequestGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestGroupedVirtualItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestGroupedVirtualItems/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestGroupedVirtualItems"
        ],
        "summary": "Deletes an instance of ChangeRequestGroupedVirtualItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestLocations": {
      "post": {
        "tags": [
          "ChangeRequestLocations"
        ],
        "summary": "Creates a new instance of ChangeRequestLocation",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestLocationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestLocations/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestLocations"
        ],
        "summary": "Deletes an instance of ChangeRequestLocation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestModifications": {
      "post": {
        "tags": [
          "ChangeRequestModifications"
        ],
        "summary": "Creates a new instance of ChangeRequestModification",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestModificationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestModifications/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestModifications"
        ],
        "summary": "Deletes an instance of ChangeRequestModification",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestOrganizations": {
      "post": {
        "tags": [
          "ChangeRequestOrganizations"
        ],
        "summary": "Creates a new instance of ChangeRequestOrganization",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestOrganizationPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestOrganizations/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestOrganizations"
        ],
        "summary": "Deletes an instance of ChangeRequestOrganization",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestPersons": {
      "post": {
        "tags": [
          "ChangeRequestPersons"
        ],
        "summary": "Creates a new instance of ChangeRequestPerson",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestPersonPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestPersons/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestPersons"
        ],
        "summary": "Deletes an instance of ChangeRequestPerson",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestPhysicalItems": {
      "post": {
        "tags": [
          "ChangeRequestPhysicalItems"
        ],
        "summary": "Creates a new instance of ChangeRequestPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestPhysicalItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestPhysicalItems/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestPhysicalItems"
        ],
        "summary": "Deletes an instance of ChangeRequestPhysicalItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestPriorities": {
      "post": {
        "tags": [
          "ChangeRequestPriorities"
        ],
        "summary": "Creates a new instance of ChangeRequestPriority",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestPriorityPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestPriorities/{id}": {
      "patch": {
        "tags": [
          "ChangeRequestPriorities"
        ],
        "summary": "Updates an instance of ChangeRequestPriority",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestPriorityPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestProjects": {
      "post": {
        "tags": [
          "ChangeRequestProjects"
        ],
        "summary": "Creates a new instance of ChangeRequestProject",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestProjectPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestProjects/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestProjects"
        ],
        "summary": "Deletes an instance of ChangeRequestProject",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestProjectWiseItems": {
      "post": {
        "tags": [
          "ChangeRequestProjectWiseItems"
        ],
        "summary": "Creates a new instance of ChangeRequestProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestProjectWiseItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestProjectWiseItems/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestProjectWiseItems"
        ],
        "summary": "Deletes an instance of ChangeRequestProjectWiseItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestSerializedItems": {
      "post": {
        "tags": [
          "ChangeRequestSerializedItems"
        ],
        "summary": "Creates a new instance of ChangeRequestSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestSerializedItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestSerializedItems/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestSerializedItems"
        ],
        "summary": "Deletes an instance of ChangeRequestSerializedItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestSharePointItems": {
      "post": {
        "tags": [
          "ChangeRequestSharePointItems"
        ],
        "summary": "Creates a new instance of ChangeRequestSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestSharePointItemPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestSharePointItems/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestSharePointItems"
        ],
        "summary": "Deletes an instance of ChangeRequestSharePointItem",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestTags": {
      "post": {
        "tags": [
          "ChangeRequestTags"
        ],
        "summary": "Creates a new instance of ChangeRequestTag",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestTagPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestTags/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestTags"
        ],
        "summary": "Deletes an instance of ChangeRequestTag",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestVirtualItemGroups": {
      "post": {
        "tags": [
          "ChangeRequestVirtualItemGroups"
        ],
        "summary": "Creates a new instance of ChangeRequestVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestVirtualItemGroupPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/ChangeRequestVirtualItemGroups/{id}": {
      "delete": {
        "tags": [
          "ChangeRequestVirtualItemGroups"
        ],
        "summary": "Deletes an instance of ChangeRequestVirtualItemGroup",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    },
    "/api/{context}/Classs": {
      "post": {
        "tags": [
          "Classs"
        ],
        "summary": "Creates a new instance of Class",
        "description": "",
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ParameterHints": {
        "enum": [
          1,
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "SysParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hint": {
            "$ref": "#/components/schemas/ParameterHints"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "originalValue": {
            "type": "string",
            "nullable": true
          },
          "isUsingInterimValue": {
            "type": "boolean"
          }
        }
      },
      "SysMethod": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "objHashCode": {
            "type": "integer",
            "format": "int32"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SysParameter"
            },
            "nullable": true
          },
          "returnParam": {
            "$ref": "#/components/schemas/SysParameter"
          },
          "callingObj": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "IdDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IdPost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SuggestedDistributionPost": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "distributionList": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SuggestedDistribution required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDistribListDoc(System.String,System.Int32,System.Int32)"
      },
      "SupersedingDocumentPost": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/IdPost"
          },
          "to": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SupersedingDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSupersededObject(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "SurveyPost": {
        "required": [
          "code",
          "document",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Survey required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSurvey(System.String,System.String,System.String,System.Int32)"
      },
      "SurveyPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Survey required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSurvey(System.String,System.Int32,System.String,System.String)"
      },
      "IdTypePost": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SurveyInstancePost": {
        "required": [
          "control",
          "survey"
        ],
        "type": "object",
        "properties": {
          "survey": {
            "$ref": "#/components/schemas/IdPost"
          },
          "control": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SurveyInstance required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSurveyInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "SurveyInstanceAnswerPost": {
        "required": [
          "surveyAnswer",
          "surveyInstance"
        ],
        "type": "object",
        "properties": {
          "surveyInstance": {
            "$ref": "#/components/schemas/IdPost"
          },
          "surveyAnswer": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Gets or Sets the value of the Comment property",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "Gets or Sets the value of the Amount property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SurveyInstanceAnswer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSurveyInstanceAnswer2(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "IdPatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SurveyInstanceAnswerPatch": {
        "required": [
          "surveyAnswer"
        ],
        "type": "object",
        "properties": {
          "surveyAnswer": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Gets or Sets the value of the Comment property",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "Gets or Sets the value of the Amount property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SurveyInstanceAnswer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSurveyInstanceAnswer3(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "SurveyQuestionPost": {
        "required": [
          "question",
          "sequence",
          "sequenceName",
          "surveySection"
        ],
        "type": "object",
        "properties": {
          "surveySection": {
            "$ref": "#/components/schemas/IdPost"
          },
          "question": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sequenceName": {
            "type": "string",
            "description": "Gets or Sets the value of the SequenceName property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SurveyQuestion required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSurveyQuestion(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "SurveyQuestionPatch": {
        "required": [
          "sequence",
          "sequenceName"
        ],
        "type": "object",
        "properties": {
          "sequenceName": {
            "type": "string",
            "description": "Gets or Sets the value of the SequenceName property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SurveyQuestion required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSurveyQuestion(System.String,System.Int32,System.String,System.Int32)"
      },
      "SurveySectionPost": {
        "required": [
          "code",
          "name",
          "survey"
        ],
        "type": "object",
        "properties": {
          "survey": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SurveySection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSurveySection(System.String,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "SurveySectionPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SurveySection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSurveySection(System.String,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "SyncScopePost": {
        "required": [
          "associatedScope",
          "code",
          "name",
          "syncObject",
          "syncObjectTypes"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "syncObject": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "associatedScope": {
            "$ref": "#/components/schemas/IdPost"
          },
          "syncObjectTypes": {
            "type": "string",
            "description": "Gets or Sets the value of the SyncObjectTypes property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SyncScope required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSyncScope(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "SyncScopePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SyncScope required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSyncScope(System.String,System.Int32,System.String)"
      },
      "TagPost": {
        "required": [
          "code",
          "name",
          "operationalStatus"
        ],
        "type": "object",
        "properties": {
          "primaryPhysicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "operationalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the OperationalStatus property"
          },
          "function": {
            "$ref": "#/components/schemas/IdPost"
          },
          "quantity": {
            "type": "number",
            "description": "Gets or Sets the value of the Quantity property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Tag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTag(System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Decimal)"
      },
      "TagPatch": {
        "required": [
          "code",
          "name",
          "operationalStatus"
        ],
        "type": "object",
        "properties": {
          "primaryPhysicalItem": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "operationalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the OperationalStatus property"
          },
          "function": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "quantity": {
            "type": "number",
            "description": "Gets or Sets the value of the Quantity property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Tag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTag(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Decimal)"
      },
      "TagInstallableItemPost": {
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "type": "integer",
            "description": "Gets or Sets the value of the Priority property",
            "format": "int32"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "manufItemNumber": {
            "type": "string",
            "description": "Gets or Sets the value of the ManufItemNumber property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TagInstallableItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTagItem(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "TagInstallableItemPatch": {
        "type": "object",
        "properties": {
          "physicalItem": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "type": "integer",
            "description": "Gets or Sets the value of the Priority property",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "manufItemNumber": {
            "type": "string",
            "description": "Gets or Sets the value of the ManufItemNumber property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TagInstallableItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTagItem(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "TagInstallableItemLubricationPost": {
        "type": "object",
        "properties": {
          "installableItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TagInstallableItemLubrication required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddLubrication(System.String,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "TagInstallableItemLubricationPatch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TagInstallableItemLubrication required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgLubrication(System.String,System.Int32,System.String,System.String,System.String)"
      },
      "TagTagPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TagTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "TagVirtualItemGroupPost": {
        "required": [
          "relationshipType",
          "tag",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TagVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PriorityRefPost": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TaskPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "skill": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "isOptional": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsOptional property"
          },
          "isDelegate": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsDelegate property"
          },
          "isNestedTask": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsNestedTask property"
          },
          "duration": {
            "type": "number",
            "description": "Gets or Sets the value of the Duration property",
            "format": "double"
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Gets or Sets the value of the DueDate property",
            "format": "date-time",
            "nullable": true
          },
          "behaviorFlags": {
            "type": "integer",
            "description": "Gets or Sets the value of the BehaviorFlags property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Task required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTask(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Decimal,System.DateTime,System.DateTime,System.DateTime,System.Int32)"
      },
      "IdTypePatch": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PriorityRefPatch": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TaskPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "skill": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "person": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "isOptional": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsOptional property"
          },
          "isDelegate": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsDelegate property"
          },
          "isNestedTask": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsNestedTask property"
          },
          "duration": {
            "type": "number",
            "description": "Gets or Sets the value of the Duration property",
            "format": "double"
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Gets or Sets the value of the DueDate property",
            "format": "date-time",
            "nullable": true
          },
          "behaviorFlags": {
            "type": "integer",
            "description": "Gets or Sets the value of the BehaviorFlags property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Task required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTask(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Decimal,System.DateTime,System.DateTime,System.DateTime,System.Int32)"
      },
      "TaskChangeRequestPost": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskChangeRequest required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTaskObject(System.String,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "TaskItemPost": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/IdPost"
          },
          "item": {
            "$ref": "#/components/schemas/IdPost"
          },
          "costPer": {
            "type": "number",
            "description": "Gets or Sets the value of the CostPer property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTaskItem(System.String,System.Int32,System.Int32,System.Decimal)"
      },
      "TaskItemPatch": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "costPer": {
            "type": "number",
            "description": "Gets or Sets the value of the CostPer property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTaskItem(System.String,System.Int32,System.Int32,System.Decimal)"
      },
      "TaskOrderPost": {
        "required": [
          "class",
          "code",
          "name",
          "plannedEndDate",
          "plannedStartDate"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "contract": {
            "$ref": "#/components/schemas/IdPost"
          },
          "defaultBudget": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "plannedStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedStartDate property",
            "format": "date-time"
          },
          "plannedEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedEndDate property",
            "format": "date-time"
          },
          "dateRaised": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRaised property",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTaskOrder2(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.DateTime)"
      },
      "TaskOrderPatch": {
        "required": [
          "class",
          "code",
          "name",
          "plannedEndDate",
          "plannedStartDate"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "contract": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "defaultBudget": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "plannedStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedStartDate property",
            "format": "date-time"
          },
          "plannedEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedEndDate property",
            "format": "date-time"
          },
          "dateRaised": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRaised property",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTaskOrder2(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.DateTime)"
      },
      "TaskOrderItemPost": {
        "type": "object",
        "properties": {
          "taskOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "task": {
            "$ref": "#/components/schemas/IdPost"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "budget": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskOrderItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTaskOrderItem(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "TaskOrderItemPatch": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "budget": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "isExcluded": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsExcluded property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskOrderItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTaskOrderItem(System.String,System.Int32,System.String,System.Int32,System.String)"
      },
      "TaskOrderProjectPost": {
        "type": "object",
        "properties": {
          "taskOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskOrderProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTaskOrderReference(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "TaskStructurePost": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/IdPost"
          },
          "child": {
            "$ref": "#/components/schemas/IdPost"
          },
          "isConditional": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsConditional property"
          },
          "question": {
            "type": "string",
            "description": "Gets or Sets the value of the Question property",
            "nullable": true
          },
          "askQuestion": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AskQuestion property"
          },
          "defaultStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the DefaultStatus property",
            "nullable": true
          },
          "isReworkLink": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsReworkLink property"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskStructure required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTaskStructure(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "TaskStructurePatch": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "child": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "isConditional": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsConditional property"
          },
          "question": {
            "type": "string",
            "description": "Gets or Sets the value of the Question property",
            "nullable": true
          },
          "askQuestion": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AskQuestion property"
          },
          "defaultStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the DefaultStatus property",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TaskStructure required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTaskStructure(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "TemplatePost": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "codeMask": {
            "type": "string",
            "description": "Gets or Sets the value of the CodeMask property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "model": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "identGenFlag": {
            "type": "integer",
            "description": "Gets or Sets the value of the IdentGenFlag property",
            "format": "int32"
          },
          "isPrototype": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsPrototype property"
          },
          "codeMaskExpression": {
            "type": "string",
            "description": "Gets or Sets the value of the CodeMaskExpression property",
            "nullable": true
          },
          "usageFlags": {
            "type": "integer",
            "description": "Gets or Sets the value of the UsageFlags property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Template required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTemplate(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "TemplatePatch": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "codeMask": {
            "type": "string",
            "description": "Gets or Sets the value of the CodeMask property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "model": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "identGenFlag": {
            "type": "integer",
            "description": "Gets or Sets the value of the IdentGenFlag property",
            "format": "int32"
          },
          "isPrototype": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsPrototype property"
          },
          "codeMaskExpression": {
            "type": "string",
            "description": "Gets or Sets the value of the CodeMaskExpression property",
            "nullable": true
          },
          "usageFlags": {
            "type": "integer",
            "description": "Gets or Sets the value of the UsageFlags property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Template required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTemplate(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "TransmittalPost": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "distributionOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Transmittal required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTransmittal(System.String,System.String,System.Int32)"
      },
      "TransmittalPatch": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Transmittal required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTransmittal(System.String,System.Int32,System.String,System.String)"
      },
      "TransmittalResponseTypePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TransmittalResponseType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddTransmittalResponseType(System.String,System.Int32,System.String)"
      },
      "TransmittalResponseTypePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.TransmittalResponseType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgTransmittalResponseType(System.String,System.Int32,System.String)"
      },
      "UnitPost": {
        "required": [
          "code",
          "dimension",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "description": "Gets or Sets the value of the Symbol property",
            "nullable": true
          },
          "dimension": {
            "$ref": "#/components/schemas/IdPost"
          },
          "unitSystem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "conversionFactor": {
            "type": "number",
            "description": "Gets or Sets the value of the ConversionFactor property",
            "format": "double",
            "nullable": true
          },
          "conversionOffSet": {
            "type": "number",
            "description": "Gets or Sets the value of the ConversionOffSet property",
            "format": "double",
            "nullable": true
          },
          "converter": {
            "type": "integer",
            "description": "Gets or Sets the value of the Converter property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Unit required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddUnit(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32)"
      },
      "UnitPatch": {
        "required": [
          "code",
          "dimension",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "description": "Gets or Sets the value of the Symbol property",
            "nullable": true
          },
          "dimension": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "unitSystem": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "conversionFactor": {
            "type": "number",
            "description": "Gets or Sets the value of the ConversionFactor property",
            "format": "double",
            "nullable": true
          },
          "conversionOffSet": {
            "type": "number",
            "description": "Gets or Sets the value of the ConversionOffSet property",
            "format": "double",
            "nullable": true
          },
          "converter": {
            "type": "integer",
            "description": "Gets or Sets the value of the Converter property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Unit required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgUnit(System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32)"
      },
      "UnitSystemPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.UnitSystem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddUnitSystem(System.String,System.String,System.String,System.String)"
      },
      "UnitSystemPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.UnitSystem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgUnitSystem(System.String,System.Int32,System.String,System.String,System.String)"
      },
      "VerticalMenuPost": {
        "required": [
          "name",
          "propertyName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "propertyName": {
            "type": "string",
            "description": "Gets or Sets the value of the PropertyName property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VerticalMenu required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddVerticalMenu2(System.String,System.String,System.String,System.Int32)"
      },
      "VerticalMenuPatch": {
        "required": [
          "name",
          "propertyName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "propertyName": {
            "type": "string",
            "description": "Gets or Sets the value of the PropertyName property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VerticalMenu required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgVerticalMenu2(System.String,System.Int32,System.String,System.String,System.Int32)"
      },
      "VerticalMenuItemPost": {
        "required": [
          "verticalMenu"
        ],
        "type": "object",
        "properties": {
          "verticalMenu": {
            "$ref": "#/components/schemas/IdPost"
          },
          "source": {
            "$ref": "#/components/schemas/IdPost"
          },
          "target": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VerticalMenuItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddVerticalMenuItem(System.String,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "VerticalMenuItemPatch": {
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VerticalMenuItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgVerticalMenuItem(System.String,System.Int32,System.Int32)"
      },
      "VirtualItemPost": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddVitem(System.String,System.String,System.String,System.Int32)"
      },
      "VirtualItemPatch": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgVitem(System.String,System.Int32,System.String,System.String,System.Int32)"
      },
      "VirtualItemGroupPost": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "middle": {
            "type": "string",
            "description": "Gets or Sets the value of the Middle property",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "synopsis": {
            "type": "string",
            "description": "Gets or Sets the value of the Synopsis property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddVirtualItemGroup(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "VirtualItemGroupPatch": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "middle": {
            "type": "string",
            "description": "Gets or Sets the value of the Middle property",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "synopsis": {
            "type": "string",
            "description": "Gets or Sets the value of the Synopsis property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgVirtualItemGroup(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "VirtualItemGroupVirtualItemGroupPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.VirtualItemGroupVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "WorkOrderPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Gets or Sets the value of the Duration property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.WorkOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddWorkOrder(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.DateTime,System.DateTime,System.Decimal)"
      },
      "WorkOrderPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "person": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Gets or Sets the value of the Duration property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.WorkOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgWorkOrder(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.DateTime,System.DateTime,System.Decimal)"
      },
      "WorkOrderChangeRequestPost": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "isSubjectData": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSubjectData property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.WorkOrderChangeRequest required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddWoObject(System.String,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "WorkOrderWorkOrderPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.WorkOrderWorkOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "WorkTaskPost": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "skill": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Gets or Sets the value of the Duration property",
            "format": "double"
          },
          "flags": {
            "type": "integer",
            "description": "Gets or Sets the value of the Flags property",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "isOptional": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsOptional property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.WorkTask required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddWorkStep(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.DateTime,System.DateTime,System.Decimal,System.Int32,System.Int32,System.String)"
      },
      "WorkTaskPatch": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "skill": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "person": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Gets or Sets the value of the Duration property",
            "format": "double"
          },
          "flags": {
            "type": "integer",
            "description": "Gets or Sets the value of the Flags property",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "isOptional": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsOptional property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.WorkTask required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgWorkStep(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.DateTime,System.DateTime,System.Decimal,System.Int32,System.Int32,System.String)"
      },
      "WorkTaskChangeRequestPost": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "isSubjectData": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSubjectData property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.WorkTaskChangeRequest required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddWsObject(System.String,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "ResponsibilityPatch": {
        "type": "object",
        "properties": {
          "responsibilityType": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "person": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Responsibility required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgObjectResponsibility(System.String,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "ResponsibilityTypePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ResponsibilityType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRespType(System.String,System.String)"
      },
      "ResponsibilityTypePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ResponsibilityType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgRespType(System.String,System.Int32,System.String)"
      },
      "RestrictionPost": {
        "required": [
          "name",
          "restrictionClass"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "restrictionClass": {
            "$ref": "#/components/schemas/IdPost"
          },
          "lowerLimit": {
            "type": "number",
            "description": "Gets or Sets the value of the LowerLimit property",
            "format": "double",
            "nullable": true
          },
          "upperLimit": {
            "type": "number",
            "description": "Gets or Sets the value of the UpperLimit property",
            "format": "double",
            "nullable": true
          },
          "limitUnit": {
            "$ref": "#/components/schemas/IdPost"
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property",
            "nullable": true
          },
          "causeObject": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Restriction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRestriction(System.String,System.String,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})"
      },
      "RestrictionPatch": {
        "required": [
          "name",
          "restrictionClass"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "restrictionClass": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "lowerLimit": {
            "type": "number",
            "description": "Gets or Sets the value of the LowerLimit property",
            "format": "double",
            "nullable": true
          },
          "upperLimit": {
            "type": "number",
            "description": "Gets or Sets the value of the UpperLimit property",
            "format": "double",
            "nullable": true
          },
          "limitUnit": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property",
            "nullable": true
          },
          "causeObject": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Restriction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgRestriction(System.String,System.Int32,System.String,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})"
      },
      "RestrictionClassPost": {
        "required": [
          "accessModifier",
          "classGroup",
          "code",
          "description",
          "name",
          "restrictionType",
          "sysType"
        ],
        "type": "object",
        "properties": {
          "classGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "parent": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property"
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "supersededBy": {
            "$ref": "#/components/schemas/IdPost"
          },
          "accessModifier": {
            "type": "string",
            "description": "Gets or Sets the value of the AccessModifier property"
          },
          "restrictionType": {
            "type": "integer",
            "description": "Gets or Sets the value of the RestrictionType property",
            "format": "int32"
          },
          "limitType": {
            "type": "integer",
            "description": "Gets or Sets the value of the LimitType property",
            "format": "int32"
          },
          "limitDatatype": {
            "type": "integer",
            "description": "Gets or Sets the value of the LimitDatatype property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RestrictionClass required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRestrictionClass(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Int32,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})"
      },
      "RestrictionClassPatch": {
        "required": [
          "restrictionType"
        ],
        "type": "object",
        "properties": {
          "restrictionType": {
            "type": "integer",
            "description": "Gets or Sets the value of the RestrictionType property",
            "format": "int32"
          },
          "limitType": {
            "type": "integer",
            "description": "Gets or Sets the value of the LimitType property",
            "format": "int32"
          },
          "limitDatatype": {
            "type": "integer",
            "description": "Gets or Sets the value of the LimitDatatype property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RestrictionClass required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgRestrictionClass(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})"
      },
      "RevisionRulePost": {
        "required": [
          "code",
          "forceOrder",
          "forceValue",
          "name",
          "ruleSyntax"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "ruleSyntax": {
            "type": "string",
            "description": "Gets or Sets the value of the RuleSyntax property"
          },
          "forceOrder": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ForceOrder property"
          },
          "forceValue": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ForceValue property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RevisionRule required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRevisionRule(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)"
      },
      "RevisionRulePatch": {
        "required": [
          "code",
          "forceOrder",
          "forceValue",
          "name",
          "ruleSyntax"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "ruleSyntax": {
            "type": "string",
            "description": "Gets or Sets the value of the RuleSyntax property"
          },
          "forceOrder": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ForceOrder property"
          },
          "forceValue": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ForceValue property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RevisionRule required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgRevisionRule(System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)"
      },
      "RolePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Role required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRole(System.String,System.String,System.Int32)"
      },
      "RolePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Role required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgRole(System.String,System.Int32,System.String,System.Int32,System.String)"
      },
      "ScheduleDefPost": {
        "required": [
          "day",
          "dayInterval",
          "dayOfWeekMask",
          "endDate",
          "endTime",
          "excludedDates",
          "firstDayOfTheWeek",
          "frequencyType",
          "monthInterval",
          "monthMask",
          "name",
          "occurrences",
          "startDate",
          "startTime",
          "timeInterval",
          "timeIntervalType",
          "weekInterval",
          "weekOfMonthMask",
          "yearInterval"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "monthMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the MonthMask property",
            "format": "int32"
          },
          "weekOfMonthMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the WeekOfMonthMask property",
            "format": "int32"
          },
          "dayOfWeekMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the DayOfWeekMask property",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "description": "Gets or Sets the value of the Day property",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "int32"
          },
          "endDate": {
            "type": "integer",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "int32"
          },
          "startTime": {
            "type": "integer",
            "description": "Gets or Sets the value of the StartTime property",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "description": "Gets or Sets the value of the EndTime property",
            "format": "int32"
          },
          "excludedDates": {
            "type": "string",
            "description": "Gets or Sets the value of the ExcludedDates property"
          },
          "yearInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the YearInterval property",
            "format": "int32"
          },
          "monthInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the MonthInterval property",
            "format": "int32"
          },
          "weekInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the WeekInterval property",
            "format": "int32"
          },
          "dayInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the DayInterval property",
            "format": "int32"
          },
          "occurrences": {
            "type": "integer",
            "description": "Gets or Sets the value of the Occurrences property",
            "format": "int32"
          },
          "timeIntervalType": {
            "type": "integer",
            "description": "Gets or Sets the value of the TimeIntervalType property",
            "format": "int32"
          },
          "timeInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the TimeInterval property",
            "format": "int32"
          },
          "frequencyType": {
            "type": "integer",
            "description": "Gets or Sets the value of the FrequencyType property",
            "format": "int32"
          },
          "isSeasonal": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSeasonal property"
          },
          "firstDayOfTheWeek": {
            "type": "integer",
            "description": "Gets or Sets the value of the FirstDayOfTheWeek property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ScheduleDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddScheduleDef2(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "ScheduleDefPatch": {
        "required": [
          "day",
          "dayInterval",
          "dayOfWeekMask",
          "endDate",
          "endTime",
          "excludedDates",
          "firstDayOfTheWeek",
          "frequencyType",
          "monthInterval",
          "monthMask",
          "name",
          "occurrences",
          "startDate",
          "startTime",
          "timeInterval",
          "timeIntervalType",
          "weekInterval",
          "weekOfMonthMask",
          "yearInterval"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "monthMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the MonthMask property",
            "format": "int32"
          },
          "weekOfMonthMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the WeekOfMonthMask property",
            "format": "int32"
          },
          "dayOfWeekMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the DayOfWeekMask property",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "description": "Gets or Sets the value of the Day property",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "int32"
          },
          "endDate": {
            "type": "integer",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "int32"
          },
          "startTime": {
            "type": "integer",
            "description": "Gets or Sets the value of the StartTime property",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "description": "Gets or Sets the value of the EndTime property",
            "format": "int32"
          },
          "excludedDates": {
            "type": "string",
            "description": "Gets or Sets the value of the ExcludedDates property"
          },
          "yearInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the YearInterval property",
            "format": "int32"
          },
          "monthInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the MonthInterval property",
            "format": "int32"
          },
          "weekInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the WeekInterval property",
            "format": "int32"
          },
          "dayInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the DayInterval property",
            "format": "int32"
          },
          "occurrences": {
            "type": "integer",
            "description": "Gets or Sets the value of the Occurrences property",
            "format": "int32"
          },
          "timeIntervalType": {
            "type": "integer",
            "description": "Gets or Sets the value of the TimeIntervalType property",
            "format": "int32"
          },
          "timeInterval": {
            "type": "integer",
            "description": "Gets or Sets the value of the TimeInterval property",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "frequencyType": {
            "type": "integer",
            "description": "Gets or Sets the value of the FrequencyType property",
            "format": "int32"
          },
          "isSeasonal": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSeasonal property"
          },
          "firstDayOfTheWeek": {
            "type": "integer",
            "description": "Gets or Sets the value of the FirstDayOfTheWeek property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ScheduleDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgScheduleDef3(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32)"
      },
      "ScheduleDefOwnerPost": {
        "type": "object",
        "properties": {
          "scheduleDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "owner": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "isAutoScheduled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsAutoScheduled property"
          },
          "basedOnPrevious": {
            "type": "integer",
            "description": "Gets or Sets the value of the BasedOnPrevious property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ScheduleDefOwner required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddScheduleDefOwner(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "ScopePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "owner": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "namespace": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Scope required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddScope(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "ScopePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "owner": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "namespace": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Scope required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgScope(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "ScopeInvitePost": {
        "required": [
          "invitedToScope",
          "role"
        ],
        "type": "object",
        "properties": {
          "invitedToScope": {
            "$ref": "#/components/schemas/IdPost"
          },
          "role": {
            "$ref": "#/components/schemas/IdPost"
          },
          "userEmail": {
            "type": "string",
            "description": "Gets or Sets the value of the UserEmail property",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ScopeInvite required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddScopeInvite(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "SecurityPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "activityType": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "principal": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "permissionType": {
            "type": "string",
            "description": "Gets or Sets the value of the PermissionType property",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Security required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPermission(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "SerializedItemPost": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "batchQty": {
            "type": "number",
            "description": "Gets or Sets the value of the BatchQty property",
            "format": "double"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/IdPost"
          },
          "manufItemNumber": {
            "type": "string",
            "description": "Gets or Sets the value of the ManufItemNumber property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSerialNumber(System.String,System.Int32,System.String,System.Decimal,System.Int32,System.String,System.String)"
      },
      "SerializedItemPatch": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "batchQty": {
            "type": "number",
            "description": "Gets or Sets the value of the BatchQty property",
            "format": "double"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "manufItemNumber": {
            "type": "string",
            "description": "Gets or Sets the value of the ManufItemNumber property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSerialNumber(System.String,System.Int32,System.String,System.Decimal,System.Int32,System.String,System.String,System.String)"
      },
      "SerializedItemSerializedItemPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SerializedItemSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "SerializedItemSharePointItemPost": {
        "required": [
          "relationshipType",
          "serializedItem",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SerializedItemSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "SerializedItemTagPost": {
        "required": [
          "relationshipType",
          "serializedItem",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SerializedItemTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "SerializedItemVirtualItemGroupPost": {
        "required": [
          "relationshipType",
          "serializedItem",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SerializedItemVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ServerPost": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Server required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddServer(System.String,System.Int32,System.Int32,System.String,System.String)"
      },
      "ServerPatch": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Server required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgServer(System.String,System.Int32,System.Int32,System.String,System.String)"
      },
      "ServiceDefinitionPost": {
        "required": [
          "code",
          "isAdminService",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "isAdminService": {
            "type": "string",
            "description": "Gets or Sets the value of the IsAdminService property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ServiceDefinition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddServiceDefinition(System.String,System.String,System.String,System.String,System.String)"
      },
      "ServiceDefinitionPatch": {
        "required": [
          "code",
          "isAdminService",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "isAdminService": {
            "type": "string",
            "description": "Gets or Sets the value of the IsAdminService property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ServiceDefinition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgServiceDefinition(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "ServiceInstancePost": {
        "required": [
          "host",
          "implementation",
          "isVirtual",
          "serviceDefinition",
          "status"
        ],
        "type": "object",
        "properties": {
          "serviceDefinition": {
            "$ref": "#/components/schemas/IdPost"
          },
          "implementation": {
            "$ref": "#/components/schemas/IdPost"
          },
          "host": {
            "$ref": "#/components/schemas/IdPost"
          },
          "isVirtual": {
            "type": "string",
            "description": "Gets or Sets the value of the IsVirtual property"
          },
          "wsdl": {
            "type": "string",
            "description": "Gets or Sets the value of the Wsdl property",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ServiceInstance required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddServiceInstance(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "ServiceInstancePatch": {
        "required": [
          "host",
          "implementation",
          "isVirtual",
          "serviceDefinition",
          "status"
        ],
        "type": "object",
        "properties": {
          "serviceDefinition": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "implementation": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "host": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "isVirtual": {
            "type": "string",
            "description": "Gets or Sets the value of the IsVirtual property"
          },
          "wsdl": {
            "type": "string",
            "description": "Gets or Sets the value of the Wsdl property",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ServiceInstance required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgServiceInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "SharePointItemSharePointItemPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SharePointItemSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "SharePointItemTagPost": {
        "required": [
          "relationshipType",
          "sharePointItem",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SharePointItemTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "SharePointItemVirtualItemGroupPost": {
        "required": [
          "relationshipType",
          "sharePointItem",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SharePointItemVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "SitePost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Site required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSite(System.String,System.String,System.String)"
      },
      "SitePatch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Site required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSite(System.String,System.Int32,System.String,System.String)"
      },
      "SiteServerPost": {
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/IdPost"
          },
          "server": {
            "$ref": "#/components/schemas/IdPost"
          },
          "connectInfo": {
            "type": "string",
            "description": "Gets or Sets the value of the ConnectInfo property",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "description": "Gets or Sets the value of the Cost property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SiteServer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSiteServer(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "SiteServerPatch": {
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "server": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "connectInfo": {
            "type": "string",
            "description": "Gets or Sets the value of the ConnectInfo property",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "description": "Gets or Sets the value of the Cost property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SiteServer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSiteServer(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "SkillPost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Skill required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSkill(System.String,System.String)"
      },
      "SkillPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Skill required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSkill(System.String,System.Int32,System.String)"
      },
      "SpatialConnectionPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "connectionType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "contentVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentVersion property",
            "format": "int32"
          },
          "contentData": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentData property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SpatialConnection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSpatialConnection(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String)"
      },
      "SpatialConnectionPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "connectionType": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "contentVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentVersion property",
            "format": "int32"
          },
          "contentData": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentData property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SpatialConnection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSpatialConnection(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.String)"
      },
      "CodeRefPost": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SpatialLayerPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "layerType": {
            "$ref": "#/components/schemas/CodeRefPost"
          },
          "layerDataVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the LayerDataVersion property",
            "format": "int32"
          },
          "layerData": {
            "type": "string",
            "description": "Gets or Sets the value of the LayerData property",
            "nullable": true
          },
          "connection": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SpatialLayer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSpatialLayer(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Nullable{System.Int32})"
      },
      "CodeRefPatch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SpatialLayerPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "layerType": {
            "$ref": "#/components/schemas/CodeRefPatch"
          },
          "layerDataVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the LayerDataVersion property",
            "format": "int32"
          },
          "layerData": {
            "type": "string",
            "description": "Gets or Sets the value of the LayerData property",
            "nullable": true
          },
          "connection": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.SpatialLayer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSpatialLayer(System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Nullable{System.Int32})"
      },
      "StatePost": {
        "required": [
          "code",
          "isEndState",
          "isStartState",
          "name",
          "stateMachine"
        ],
        "type": "object",
        "properties": {
          "stateMachine": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "isStartState": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsStartState property"
          },
          "isEndState": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEndState property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.State required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddState(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "StatePatch": {
        "required": [
          "code",
          "isEndState",
          "isStartState",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "isStartState": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsStartState property"
          },
          "isEndState": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEndState property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.State required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgState(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "StateMachinePost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.StateMachine required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddStateMachine(System.String,System.String)"
      },
      "StateMachinePatch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.StateMachine required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgStateMachine(System.String,System.Int32,System.String)"
      },
      "StateTransitionPost": {
        "required": [
          "fromState",
          "name",
          "toState"
        ],
        "type": "object",
        "properties": {
          "fromState": {
            "$ref": "#/components/schemas/IdPost"
          },
          "toState": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.StateTransition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddStateTransition(System.String,System.Int32,System.Int32,System.String)"
      },
      "StateTransitionPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.StateTransition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgStateTransition(System.String,System.Int32,System.String)"
      },
      "StorageRuleGroupPost": {
        "required": [
          "groupType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "groupType": {
            "type": "integer",
            "description": "Gets or Sets the value of the GroupType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.StorageRuleGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddStorageRuleGroup(System.String,System.String,System.Int32)"
      },
      "StorageRuleGroupPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.StorageRuleGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgStorageRuleGroup(System.String,System.Int32,System.String)"
      },
      "StorageRuleGroupMemberPost": {
        "type": "object",
        "properties": {
          "storageRuleGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "storageRule": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.StorageRuleGroupMember required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddStorageRuleGroupMember(System.String,System.Int32,System.Int32)"
      },
      "SubscriberPost": {
        "required": [
          "deliveryAddress",
          "deliveryDef"
        ],
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "deliveryDef": {
            "type": "integer",
            "description": "Gets or Sets the value of the DeliveryDef property",
            "format": "int32"
          },
          "deliveryAddress": {
            "type": "string",
            "description": "Gets or Sets the value of the DeliveryAddress property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Subscriber required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSubscriber(System.String,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "SubscriberPatch": {
        "required": [
          "deliveryAddress"
        ],
        "type": "object",
        "properties": {
          "deliveryAddress": {
            "type": "string",
            "description": "Gets or Sets the value of the DeliveryAddress property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Subscriber required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgSubscriber(System.String,System.Int32,System.String)"
      },
      "SubscriptionPost": {
        "type": "object",
        "properties": {
          "notificationDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "subscriber": {
            "$ref": "#/components/schemas/IdPost"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Subscription required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddSubscription(System.String,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "PhysicalItemSerializedItemPost": {
        "required": [
          "physicalItem",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PhysicalItemSharePointItemPost": {
        "required": [
          "physicalItem",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PhysicalItemTagPost": {
        "required": [
          "physicalItem",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PhysicalItemTypePost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddItemType(System.String,System.String,System.String)"
      },
      "PhysicalItemTypePatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgItemType(System.String,System.String,System.String,System.String)"
      },
      "PhysicalItemVirtualItemGroupPost": {
        "required": [
          "physicalItem",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PricelistPost": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Pricelist required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPricelist(System.String,System.String,System.Int32,System.String,System.String,System.String)"
      },
      "PricelistPatch": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Pricelist required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPricelist(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)"
      },
      "PricelistItemPost": {
        "type": "object",
        "properties": {
          "pricelist": {
            "$ref": "#/components/schemas/IdPost"
          },
          "item": {
            "$ref": "#/components/schemas/IdPost"
          },
          "price": {
            "type": "number",
            "description": "Gets or Sets the value of the Price property",
            "format": "double"
          },
          "minimumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MinimumQuantity property",
            "format": "double"
          },
          "maximumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MaximumQuantity property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PricelistItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPricelistItem(System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal)"
      },
      "PricelistItemPatch": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "price": {
            "type": "number",
            "description": "Gets or Sets the value of the Price property",
            "format": "double"
          },
          "minimumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MinimumQuantity property",
            "format": "double"
          },
          "maximumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MaximumQuantity property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PricelistItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPricelistItem(System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal)"
      },
      "PrintTemplatePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PrintTemplate required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPrintTemplate(System.String,System.String,System.String)"
      },
      "PrintTemplatePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PrintTemplate required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPrintTemplate(System.String,System.Int32,System.String,System.String)"
      },
      "ProductStructureTypePost": {
        "required": [
          "class",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProductStructureType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPbsType(System.String,System.String,System.Int32)"
      },
      "ProductStructureTypePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProductStructureType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPbsType(System.String,System.Int32,System.String)"
      },
      "ProgramPost": {
        "required": [
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "defaultActivityType": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "plannedStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "plannedEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "defaultItemBehavior": {
            "type": "integer",
            "description": "Gets or Sets the value of the DefaultItemBehavior property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Program required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddProgram(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)"
      },
      "ProgramPatch": {
        "required": [
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "defaultActivityType": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "plannedStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "plannedEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlannedEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "defaultItemBehavior": {
            "type": "integer",
            "description": "Gets or Sets the value of the DefaultItemBehavior property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Program required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgProgram(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)"
      },
      "ProgramItemPost": {
        "type": "object",
        "properties": {
          "program": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "activityType": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "isExcluded": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsExcluded property"
          },
          "isRepeatable": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsRepeatable property"
          },
          "behavior": {
            "type": "integer",
            "description": "Gets or Sets the value of the Behavior property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProgramItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddProgramItem(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "ProgramItemPatch": {
        "type": "object",
        "properties": {
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "activityType": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "isExcluded": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsExcluded property"
          },
          "isRepeatable": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsRepeatable property"
          },
          "behavior": {
            "type": "integer",
            "description": "Gets or Sets the value of the Behavior property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProgramItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgProgramItem(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "ProjectPost": {
        "required": [
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "responsibleOrg": {
            "$ref": "#/components/schemas/IdPost"
          },
          "actualStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the ActualStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "actualEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the ActualEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Project required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddProject(System.String,System.String,System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Int32)"
      },
      "ProjectPatch": {
        "required": [
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "responsibleOrg": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the ActualStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "actualEndDate": {
            "type": "string",
            "description": "Gets or Sets the value of the ActualEndDate property",
            "format": "date-time",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Project required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgProject(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime,System.Int32)"
      },
      "ProjectProjectPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectProjectWiseItemPost": {
        "required": [
          "project",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectSerializedItemPost": {
        "required": [
          "project",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectSharePointItemPost": {
        "required": [
          "project",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectTagPost": {
        "required": [
          "project",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectTaskPost": {
        "required": [
          "project",
          "relationshipType",
          "task"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "task": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectTask required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectVirtualItemGroupPost": {
        "required": [
          "project",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectWiseItemProjectWiseItemPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectWiseItemProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectWiseItemSerializedItemPost": {
        "required": [
          "projectWiseItem",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectWiseItemSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectWiseItemSharePointItemPost": {
        "required": [
          "projectWiseItem",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectWiseItemSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectWiseItemTagPost": {
        "required": [
          "projectWiseItem",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectWiseItemTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectWiseItemVirtualItemGroupPost": {
        "required": [
          "projectWiseItem",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectWiseItemVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ProjectWorkOrderPost": {
        "required": [
          "project",
          "relationshipType",
          "workOrder"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "workOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ProjectWorkOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PrototypePatch": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Prototype required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPrototype2(System.String,System.Int32,System.String)"
      },
      "PublisherPackagePost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "contentRetrieveOptions": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentRetrieveOptions property",
            "nullable": true
          },
          "options": {
            "type": "string",
            "description": "Gets or Sets the value of the Options property",
            "nullable": true
          },
          "temporary": {
            "type": "boolean",
            "description": "Gets or Sets the value of the Temporary property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PublisherPackage required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPublisherPackage(System.String,System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "PublisherPackagePatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "contentRetrieveOptions": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentRetrieveOptions property",
            "nullable": true
          },
          "options": {
            "type": "string",
            "description": "Gets or Sets the value of the Options property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PublisherPackage required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPublisherPackage(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)"
      },
      "PublisherPackageContentPost": {
        "type": "object",
        "properties": {
          "publisherPackage": {
            "$ref": "#/components/schemas/IdPost"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "hints": {
            "type": "string",
            "description": "Gets or Sets the value of the Hints property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PublisherPackageContent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPublisherContents(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "PublisherPackageContentPatch": {
        "type": "object",
        "properties": {
          "hints": {
            "type": "string",
            "description": "Gets or Sets the value of the Hints property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PublisherPackageContent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPublisherContents(System.String,System.Int32,System.String)"
      },
      "QuestionPost": {
        "required": [
          "code",
          "maxAnswers",
          "minAnswers",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "isMasterQuestion": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMasterQuestion property"
          },
          "isObsolete": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsObsolete property"
          },
          "minAnswers": {
            "type": "integer",
            "description": "Gets or Sets the value of the MinAnswers property",
            "format": "int32"
          },
          "maxAnswers": {
            "type": "integer",
            "description": "Gets or Sets the value of the MaxAnswers property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Question required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddQuestion(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "QuestionPatch": {
        "required": [
          "code",
          "maxAnswers",
          "minAnswers",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "isMasterQuestion": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMasterQuestion property"
          },
          "isObsolete": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsObsolete property"
          },
          "minAnswers": {
            "type": "integer",
            "description": "Gets or Sets the value of the MinAnswers property",
            "format": "int32"
          },
          "maxAnswers": {
            "type": "integer",
            "description": "Gets or Sets the value of the MaxAnswers property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Question required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgQuestion(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "QuestionGroupPost": {
        "required": [
          "name",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.QuestionGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddQuestionGroup(System.String,System.String,System.Int32)"
      },
      "QuestionGroupPatch": {
        "required": [
          "name",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.QuestionGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgQuestionGroup(System.String,System.Int32,System.String,System.Int32)"
      },
      "QuestionGroupMemberPost": {
        "required": [
          "question",
          "questionGroup",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "questionGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "question": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.QuestionGroupMember required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddQuestionGroupMember(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "QuestionGroupMemberPatch": {
        "required": [
          "question",
          "questionGroup",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "questionGroup": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "question": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.QuestionGroupMember required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgQuestionGroupMember(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "QueueJobPost": {
        "type": "object",
        "properties": {
          "engine": {
            "$ref": "#/components/schemas/IdPost"
          },
          "jobType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "description": "Gets or Sets the value of the PlanStartDate property",
            "format": "date-time",
            "nullable": true
          },
          "runAs": {
            "$ref": "#/components/schemas/IdPost"
          },
          "recurrenceSchedule": {
            "$ref": "#/components/schemas/IdPost"
          },
          "retrySchedule": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.QueueJob required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddQueueJob(System.String,System.Int32,System.Int32,System.String,System.Int64,System.Int32,System.Int32,System.Int32)"
      },
      "RelationshipExternalObjectPost": {
        "required": [
          "externalObject",
          "relationship",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "relationship": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RelationshipExternalObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "RelationshipTypePatch": {
        "required": [
          "leftName",
          "rightName"
        ],
        "type": "object",
        "properties": {
          "leftType": {
            "type": "integer",
            "description": "Gets or Sets the value of the LeftType property",
            "format": "int32"
          },
          "rightType": {
            "type": "integer",
            "description": "Gets or Sets the value of the RightType property",
            "format": "int32"
          },
          "leftName": {
            "type": "string",
            "description": "Gets or Sets the value of the LeftName property"
          },
          "rightName": {
            "type": "string",
            "description": "Gets or Sets the value of the RightName property"
          },
          "controlledBy": {
            "type": "string",
            "description": "Gets or Sets the value of the ControlledBy property",
            "nullable": true
          },
          "presentation": {
            "type": "string",
            "description": "Gets or Sets the value of the Presentation property",
            "nullable": true
          },
          "numLeft": {
            "type": "integer",
            "description": "Gets or Sets the value of the NumLeft property",
            "format": "int32"
          },
          "numRight": {
            "type": "integer",
            "description": "Gets or Sets the value of the NumRight property",
            "format": "int32"
          },
          "isDirected": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsDirected property"
          },
          "allowCircularReference": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowCircularReference property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RelationshipType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgRelationshipType(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)"
      },
      "ReportPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "reportType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ReportType property",
            "format": "int32"
          },
          "provider": {
            "type": "integer",
            "description": "Gets or Sets the value of the Provider property",
            "format": "int32"
          },
          "contentData": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentData property",
            "nullable": true
          },
          "contentVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentVersion property",
            "format": "int32"
          },
          "executeImmediate": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ExecuteImmediate property"
          },
          "outObjectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the OutObjectType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Report required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddReport(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)"
      },
      "ReportPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "reportType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ReportType property",
            "format": "int32"
          },
          "provider": {
            "type": "integer",
            "description": "Gets or Sets the value of the Provider property",
            "format": "int32"
          },
          "contentData": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentData property",
            "nullable": true
          },
          "contentVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentVersion property",
            "format": "int32"
          },
          "executeImmediate": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ExecuteImmediate property"
          },
          "outObjectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the OutObjectType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Report required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgReport(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)"
      },
      "ReportContextPost": {
        "type": "object",
        "properties": {
          "report": {
            "$ref": "#/components/schemas/IdPost"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ReportContext required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddReportContext(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "RepositoryGroupPost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RepositoryGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRepositoryGroup(System.String,System.String,System.String,System.String)"
      },
      "RepositoryGroupPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.RepositoryGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgRepositoryGroup(System.String,System.Int32,System.String,System.String,System.String)"
      },
      "ResponsibilityPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "responsibilityType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Responsibility required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectResponsibility(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "ModificationImpactedPhysicalItemPost": {
        "type": "object",
        "properties": {
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "modStrike": {
            "type": "string",
            "description": "Gets or Sets the value of the ModStrike property",
            "nullable": true
          },
          "newPhysicalItem": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ModificationImpactedPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddModOrderItem(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "ModificationImpactedSerializedItemPost": {
        "type": "object",
        "properties": {
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "newSerializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "datePlanned": {
            "type": "string",
            "description": "Gets or Sets the value of the DatePlanned property",
            "format": "date-time",
            "nullable": true
          },
          "dateImplemented": {
            "type": "string",
            "description": "Gets or Sets the value of the DateImplemented property",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ModificationImpactedSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddModSerial(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)"
      },
      "ModificationPhysicalItemPost": {
        "required": [
          "modification",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ModificationPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ModificationSerializedItemPost": {
        "required": [
          "modification",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ModificationSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ModulePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Module required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddModuleInfo(System.String,System.Int32,System.String,System.String)"
      },
      "ModulePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Module required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgModuleInfo(System.String,System.Int32,System.Int32,System.String,System.String)"
      },
      "NamespacePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Namespace required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddNamespace(System.String,System.String)"
      },
      "NamespacePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Namespace required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgNamespace(System.String,System.Int32,System.String)"
      },
      "NestedTaskTemplatePost": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/IdPost"
          },
          "template": {
            "$ref": "#/components/schemas/IdPost"
          },
          "instantiateOption": {
            "type": "integer",
            "description": "Gets or Sets the value of the InstantiateOption property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.NestedTaskTemplate required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddNestedTaskTemplate2(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "NestedTaskTemplatePatch": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "template": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "instantiateOption": {
            "type": "integer",
            "description": "Gets or Sets the value of the InstantiateOption property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.NestedTaskTemplate required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgNestedTaskTemplate2(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "NestedWorkOrderPost": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/IdPost"
          },
          "workOrder": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.NestedWorkOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddNestedWo(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "NestedWorkOrderTemplatePost": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/IdPost"
          },
          "template": {
            "$ref": "#/components/schemas/IdPost"
          },
          "autoInstantiate": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AutoInstantiate property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.NestedWorkOrderTemplate required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddNestedWoTemplate(System.String,System.Int32,System.Int32,System.String)"
      },
      "NestedWorkOrderTemplatePatch": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "template": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "autoInstantiate": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AutoInstantiate property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.NestedWorkOrderTemplate required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgNestedWoTemplate(System.String,System.Int32,System.Int32,System.String)"
      },
      "NotePost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "content": {
            "type": "string",
            "description": "Gets or Sets the value of the Content property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Note required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectNote(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String)"
      },
      "NotePatch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "content": {
            "type": "string",
            "description": "Gets or Sets the value of the Content property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Note required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgObjectNote(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String)"
      },
      "ObjectBlobPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "id": {
            "type": "integer",
            "description": "Gets or Sets the value of the Id property",
            "format": "int32"
          },
          "blobValue": {
            "type": "string",
            "description": "Gets or Sets the value of the BlobValue property",
            "format": "byte",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ObjectBlob required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectBlob(System.String,System.Int32,System.Int32,System.Int32,System.Byte[])"
      },
      "ObjectDatasetPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "applicability": {
            "type": "integer",
            "description": "Gets or Sets the value of the Applicability property",
            "format": "int32"
          },
          "contentData": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentData property",
            "nullable": true
          },
          "contentVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentVersion property",
            "format": "int32"
          },
          "outObjectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the OutObjectType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ObjectDataset required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectDataset(System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)"
      },
      "ObjectDatasetPatch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "contentData": {
            "type": "string",
            "description": "Gets or Sets the value of the ContentData property",
            "nullable": true
          },
          "contentVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentVersion property",
            "format": "int32"
          },
          "outObjectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the OutObjectType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ObjectDataset required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgObjectDataset(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)"
      },
      "ObjectFilePost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "file": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ObjectFile required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectFile(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "ObjectKeywordPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "keyword": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ObjectKeyword required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectKeyword(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "ObjectTrendPost": {
        "required": [
          "object",
          "trend"
        ],
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "trend": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "weight": {
            "type": "integer",
            "description": "Gets or Sets the value of the Weight property",
            "format": "int32"
          },
          "trendDate": {
            "type": "string",
            "description": "Gets or Sets the value of the TrendDate property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ObjectTrend required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectTrend(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)"
      },
      "OrganizationPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "registrationNo": {
            "type": "string",
            "description": "Gets or Sets the value of the RegistrationNo property",
            "nullable": true
          },
          "taxNo": {
            "type": "string",
            "description": "Gets or Sets the value of the TaxNo property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Organization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddOrg(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)"
      },
      "OrganizationPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "registrationNo": {
            "type": "string",
            "description": "Gets or Sets the value of the RegistrationNo property",
            "nullable": true
          },
          "taxNo": {
            "type": "string",
            "description": "Gets or Sets the value of the TaxNo property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Organization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgOrg(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)"
      },
      "OrganizationMemberPost": {
        "required": [
          "organization",
          "person"
        ],
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "role": {
            "type": "string",
            "description": "Gets or Sets the value of the Role property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "isContact": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsContact property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationMember required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddOrgPerson(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "OrganizationMemberPatch": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "Gets or Sets the value of the Role property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "isContact": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsContact property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationMember required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgOrgPerson(System.String,System.Int32,System.String,System.String,System.Int32)"
      },
      "OrganizationOrganizationPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationOrganization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationPersonPost": {
        "required": [
          "organization",
          "person",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationPhysicalItemPost": {
        "required": [
          "organization",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationProjectPost": {
        "required": [
          "organization",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationProjectWiseItemPost": {
        "required": [
          "organization",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationSerializedItemPost": {
        "required": [
          "organization",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationSharePointItemPost": {
        "required": [
          "organization",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationTagPost": {
        "required": [
          "organization",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "OrganizationVirtualItemGroupPost": {
        "required": [
          "organization",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.OrganizationVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ParameterDefPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdPost"
          },
          "position": {
            "type": "integer",
            "description": "Gets or Sets the value of the Position property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "description": "Gets or Sets the value of the DataType property",
            "nullable": true
          },
          "isIn": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsIn property"
          },
          "defaultValue": {
            "type": "string",
            "description": "Gets or Sets the value of the DefaultValue property",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSystem property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ParameterDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddParameterInfo(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Object,System.String)"
      },
      "ParameterDefPatch": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "description": "Gets or Sets the value of the DataType property",
            "nullable": true
          },
          "isIn": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsIn property"
          },
          "defaultValue": {
            "type": "string",
            "description": "Gets or Sets the value of the DefaultValue property",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSystem property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ParameterDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgParameterInfo(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.String)"
      },
      "PermissionDsaPost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "sqlQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the SqlQuery property",
            "nullable": true
          },
          "layout": {
            "type": "string",
            "description": "Gets or Sets the value of the Layout property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PermissionDsa required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPermDsa(System.String,System.String,System.String,System.String,System.String)"
      },
      "PermissionDsaPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "sqlQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the SqlQuery property",
            "nullable": true
          },
          "layout": {
            "type": "string",
            "description": "Gets or Sets the value of the Layout property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PermissionDsa required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPermDsa(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "PersonPost": {
        "required": [
          "code",
          "initial",
          "surname"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "surname": {
            "type": "string",
            "description": "Gets or Sets the value of the Surname property"
          },
          "initial": {
            "type": "string",
            "description": "Gets or Sets the value of the Initial property"
          },
          "title": {
            "type": "string",
            "description": "Gets or Sets the value of the Title property",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "description": "Gets or Sets the value of the FullName property",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Gets or Sets the value of the FirstName property",
            "nullable": true
          },
          "nationalId": {
            "type": "string",
            "description": "Gets or Sets the value of the NationalId property",
            "nullable": true
          },
          "additionalCode": {
            "type": "string",
            "description": "Gets or Sets the value of the AdditionalCode property",
            "nullable": true
          },
          "securityRefNo": {
            "type": "string",
            "description": "Gets or Sets the value of the SecurityRefNo property",
            "nullable": true
          },
          "securityExpDate": {
            "type": "string",
            "description": "Gets or Sets the value of the SecurityExpDate property",
            "format": "date-time",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Person required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPerson(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Int32)"
      },
      "PersonPatch": {
        "required": [
          "code",
          "initial",
          "surname"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "surname": {
            "type": "string",
            "description": "Gets or Sets the value of the Surname property"
          },
          "initial": {
            "type": "string",
            "description": "Gets or Sets the value of the Initial property"
          },
          "title": {
            "type": "string",
            "description": "Gets or Sets the value of the Title property",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "description": "Gets or Sets the value of the FullName property",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Gets or Sets the value of the FirstName property",
            "nullable": true
          },
          "nationalId": {
            "type": "string",
            "description": "Gets or Sets the value of the NationalId property",
            "nullable": true
          },
          "additionalCode": {
            "type": "string",
            "description": "Gets or Sets the value of the AdditionalCode property",
            "nullable": true
          },
          "securityRefNo": {
            "type": "string",
            "description": "Gets or Sets the value of the SecurityRefNo property",
            "nullable": true
          },
          "securityExpDate": {
            "type": "string",
            "description": "Gets or Sets the value of the SecurityExpDate property",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Person required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPerson(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.Int32)"
      },
      "PersonPersonPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PersonPhysicalItemPost": {
        "required": [
          "person",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PersonProjectPost": {
        "required": [
          "person",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PersonProjectWiseItemPost": {
        "required": [
          "person",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PersonSerializedItemPost": {
        "required": [
          "person",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PersonSharePointItemPost": {
        "required": [
          "person",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PersonSkillPost": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "skill": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonSkill required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPersonSkill(System.String,System.Int32,System.Int32)"
      },
      "PersonTagPost": {
        "required": [
          "person",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PersonVirtualItemGroupPost": {
        "required": [
          "person",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PersonVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PhysicalItemPost": {
        "required": [
          "code",
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "version": {
            "type": "string",
            "description": "Gets or Sets the value of the Version property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "unit": {
            "$ref": "#/components/schemas/IdPost"
          },
          "itemClass": {
            "type": "string",
            "description": "Gets or Sets the value of the ItemClass property",
            "nullable": true
          },
          "isSerialized": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSerialized property"
          },
          "isPhantom": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsPhantom property"
          },
          "isMainEquipment": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMainEquipment property"
          },
          "isSoftware": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSoftware property"
          },
          "physicalItemType": {
            "$ref": "#/components/schemas/CodeRefPost"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "extendedDescription": {
            "type": "string",
            "description": "Gets or Sets the value of the ExtendedDescription property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddItem(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.DateTime,System.String)"
      },
      "PhysicalItemPatch": {
        "required": [
          "code",
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "version": {
            "type": "string",
            "description": "Gets or Sets the value of the Version property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "unit": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "itemClass": {
            "type": "string",
            "description": "Gets or Sets the value of the ItemClass property",
            "nullable": true
          },
          "isSerialized": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSerialized property"
          },
          "isPhantom": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsPhantom property"
          },
          "isMainEquipment": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMainEquipment property"
          },
          "isSoftware": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSoftware property"
          },
          "physicalItemType": {
            "$ref": "#/components/schemas/CodeRefPatch"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "extendedDescription": {
            "type": "string",
            "description": "Gets or Sets the value of the ExtendedDescription property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgItem(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.DateTime,System.String)"
      },
      "PhysicalItemPhysicalItemPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PhysicalItemProjectPost": {
        "required": [
          "physicalItem",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "PhysicalItemProjectWiseItemPost": {
        "required": [
          "physicalItem",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.PhysicalItemProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemProjectPost": {
        "required": [
          "groupedVirtualItem",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemProjectWiseItemPost": {
        "required": [
          "groupedVirtualItem",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemSerializedItemPost": {
        "required": [
          "groupedVirtualItem",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemSharePointItemPost": {
        "required": [
          "groupedVirtualItem",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemStructurePost": {
        "required": [
          "child",
          "parent"
        ],
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/IdPost"
          },
          "child": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemStructure required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddGvitemStructure(System.String,System.Int32,System.Int32)"
      },
      "GroupedVirtualItemTagPost": {
        "required": [
          "groupedVirtualItem",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemVirtualItemGroupPost": {
        "required": [
          "groupedVirtualItem",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "HostDefinitionPost": {
        "required": [
          "assembly"
        ],
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.HostDefinition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddHostDefinition(System.String,System.Int32)"
      },
      "HostDefinitionPatch": {
        "required": [
          "assembly"
        ],
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.HostDefinition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgHostDefinition(System.String,System.Int32,System.Int32)"
      },
      "HostInstancePost": {
        "required": [
          "hostDefinition",
          "server",
          "status"
        ],
        "type": "object",
        "properties": {
          "hostDefinition": {
            "$ref": "#/components/schemas/IdPost"
          },
          "server": {
            "$ref": "#/components/schemas/IdPost"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.HostInstance required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddHostInstance(System.String,System.Int32,System.Int32,System.String)"
      },
      "HostInstancePatch": {
        "required": [
          "hostDefinition",
          "server",
          "status"
        ],
        "type": "object",
        "properties": {
          "hostDefinition": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "server": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.HostInstance required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgHostInstance(System.String,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "IdentityMappingDefPost": {
        "required": [
          "criteria",
          "name",
          "provider",
          "template",
          "weight"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "template": {
            "$ref": "#/components/schemas/IdPost"
          },
          "weight": {
            "type": "integer",
            "description": "Gets or Sets the value of the Weight property",
            "format": "int32"
          },
          "criteria": {
            "type": "string",
            "description": "Gets or Sets the value of the Criteria property"
          },
          "provider": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.IdentityMappingDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddIdentityMappingDef(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "IdentityMappingDefPatch": {
        "required": [
          "criteria",
          "name",
          "provider",
          "template",
          "weight"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "template": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "weight": {
            "type": "integer",
            "description": "Gets or Sets the value of the Weight property",
            "format": "int32"
          },
          "criteria": {
            "type": "string",
            "description": "Gets or Sets the value of the Criteria property"
          },
          "provider": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.IdentityMappingDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgIdentityMappingDef(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "IdentityMappingDefRolePost": {
        "type": "object",
        "properties": {
          "mappingDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "role": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.IdentityMappingDefRole required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddIdentityMappingDefRole(System.String,System.Int32,System.Int32)"
      },
      "IdentityProviderPost": {
        "required": [
          "claimIssuer",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "claimIssuer": {
            "type": "string",
            "description": "Gets or Sets the value of the ClaimIssuer property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.IdentityProvider required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddIdentityProvider(System.String,System.String,System.String)"
      },
      "IdentityProviderPatch": {
        "required": [
          "claimIssuer",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "claimIssuer": {
            "type": "string",
            "description": "Gets or Sets the value of the ClaimIssuer property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.IdentityProvider required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgIdentityProvider(System.String,System.Int32,System.String,System.String)"
      },
      "IntentPost": {
        "required": [
          "code",
          "isEnabled",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Intent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddIntent(System.String,System.String,System.String,System.String,System.String)"
      },
      "IntentPatch": {
        "required": [
          "code",
          "isEnabled",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Intent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgIntent(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "InterfacePost": {
        "required": [
          "class",
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "position": {
            "type": "string",
            "description": "Gets or Sets the value of the Position property",
            "nullable": true
          },
          "positionOffset": {
            "type": "integer",
            "description": "Gets or Sets the value of the PositionOffset property",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "allowedLinks": {
            "type": "integer",
            "description": "Gets or Sets the value of the AllowedLinks property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Interface required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddInterface(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "InterfacePatch": {
        "required": [
          "class",
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "position": {
            "type": "string",
            "description": "Gets or Sets the value of the Position property",
            "nullable": true
          },
          "positionOffset": {
            "type": "integer",
            "description": "Gets or Sets the value of the PositionOffset property",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "allowedLinks": {
            "type": "integer",
            "description": "Gets or Sets the value of the AllowedLinks property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Interface required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgInterface(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "JobTypePost": {
        "required": [
          "serviceId"
        ],
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "description": "Gets or Sets the value of the ServiceId property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.JobType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddJobtype(System.String,System.Int32,System.Int32,System.String)"
      },
      "JobTypeDelete": {
        "required": [
          "serviceId"
        ],
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "description": "Gets or Sets the value of the ServiceId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.DelJobtype(System.String,System.Int32,System.Int32)"
      },
      "KeywordPost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Keyword required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddKeyword(System.String,System.String)"
      },
      "KeywordPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Keyword required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgKeyword(System.String,System.Int32,System.String)"
      },
      "KeywordGroupPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.KeywordGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddKeywordClass(System.String,System.String)"
      },
      "KeywordGroupPatch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.KeywordGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgKeywordClass(System.String,System.Int32,System.String)"
      },
      "KeywordGroupKeywordPost": {
        "type": "object",
        "properties": {
          "keyword": {
            "$ref": "#/components/schemas/IdPost"
          },
          "keywordGroup": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.KeywordGroupKeyword required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddClassKeyword(System.String,System.Int32,System.Int32)"
      },
      "KindOfQuantityPost": {
        "required": [
          "code",
          "dimension",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "dimension": {
            "$ref": "#/components/schemas/IdPost"
          },
          "defaultUnit": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.KindOfQuantity required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddKindOfQuantity(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "KindOfQuantityPatch": {
        "required": [
          "code",
          "dimension",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "dimension": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "defaultUnit": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.KindOfQuantity required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgKindOfQuantity(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "LinearLocationPost": {
        "required": [
          "locatedObject"
        ],
        "type": "object",
        "properties": {
          "locatedObject": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "jxp": {
            "type": "string",
            "description": "Gets or Sets the value of the Jxp property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LinearLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddLinearLocation(System.String,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})"
      },
      "LinearLocationPatch": {
        "type": "object",
        "properties": {
          "jxp": {
            "type": "string",
            "description": "Gets or Sets the value of the Jxp property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LinearLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgLinearLocation(System.String,System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})"
      },
      "LinearLocationDelete": {
        "type": "object",
        "properties": {
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.DelLinearLocation(System.String,System.Int32,System.Nullable{System.DateTime})"
      },
      "LinearLocationRestrictionPost": {
        "required": [
          "linearLocation",
          "relationshipType",
          "restriction"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "linearLocation": {
            "$ref": "#/components/schemas/IdPost"
          },
          "restriction": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LinearLocationRestriction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationPost": {
        "required": [
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Location required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddLocation(System.String,System.String,System.String,System.Int32)"
      },
      "LocationPatch": {
        "required": [
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Location required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgLocation(System.String,System.Int32,System.String,System.String,System.Int32)"
      },
      "LocationLocationPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationOrganizationPost": {
        "required": [
          "location",
          "organization",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationOrganization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationPersonPost": {
        "required": [
          "location",
          "person",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationPhysicalItemPost": {
        "required": [
          "location",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationProjectPost": {
        "required": [
          "location",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationProjectWiseItemPost": {
        "required": [
          "location",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationSerializedItemPost": {
        "required": [
          "location",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationSharePointItemPost": {
        "required": [
          "location",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationTagPost": {
        "required": [
          "location",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "LocationVirtualItemGroupPost": {
        "required": [
          "location",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.LocationVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "MapPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "srs": {
            "type": "string",
            "description": "Gets or Sets the value of the SRS property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Map required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddMap(System.String,System.String,System.String,System.String,System.String)"
      },
      "MapPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "srs": {
            "type": "string",
            "description": "Gets or Sets the value of the SRS property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Map required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgMap(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "MapLayerPost": {
        "required": [
          "displayOrder",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "parentMap": {
            "$ref": "#/components/schemas/IdPost"
          },
          "dataLayer": {
            "$ref": "#/components/schemas/IdPost"
          },
          "displayOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the DisplayOrder property",
            "format": "int32"
          },
          "isSelectable": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSelectable property"
          },
          "isVisibleByDefault": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsVisibleByDefault property"
          },
          "xMin": {
            "type": "number",
            "description": "Gets or Sets the value of the XMin property",
            "format": "double"
          },
          "yMin": {
            "type": "number",
            "description": "Gets or Sets the value of the YMin property",
            "format": "double"
          },
          "xMax": {
            "type": "number",
            "description": "Gets or Sets the value of the XMax property",
            "format": "double"
          },
          "yMax": {
            "type": "number",
            "description": "Gets or Sets the value of the YMax property",
            "format": "double"
          },
          "scaleMin": {
            "type": "number",
            "description": "Gets or Sets the value of the ScaleMin property",
            "format": "double"
          },
          "scaleMax": {
            "type": "number",
            "description": "Gets or Sets the value of the ScaleMax property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.MapLayer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddMapLayer(System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)"
      },
      "MapLayerPatch": {
        "required": [
          "displayOrder",
          "name",
          "parentLayer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "dataLayer": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "displayOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the DisplayOrder property",
            "format": "int32"
          },
          "parentLayer": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "isSelectable": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSelectable property"
          },
          "isVisibleByDefault": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsVisibleByDefault property"
          },
          "xMin": {
            "type": "number",
            "description": "Gets or Sets the value of the XMin property",
            "format": "double"
          },
          "yMin": {
            "type": "number",
            "description": "Gets or Sets the value of the YMin property",
            "format": "double"
          },
          "xMax": {
            "type": "number",
            "description": "Gets or Sets the value of the XMax property",
            "format": "double"
          },
          "yMax": {
            "type": "number",
            "description": "Gets or Sets the value of the YMax property",
            "format": "double"
          },
          "scaleMin": {
            "type": "number",
            "description": "Gets or Sets the value of the ScaleMin property",
            "format": "double"
          },
          "scaleMax": {
            "type": "number",
            "description": "Gets or Sets the value of the ScaleMax property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.MapLayer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgMapLayer(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)"
      },
      "MediaTypePost": {
        "required": [
          "name",
          "sysType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.MediaType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddMediaType(System.String,System.String,System.String)"
      },
      "MediaTypePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.MediaType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgMediaType(System.String,System.Int32,System.String)"
      },
      "ModificationPost": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "dateRegistered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRegistered property",
            "format": "date-time",
            "nullable": true
          },
          "requestedBy": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Modification required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddModOrder(System.String,System.String,System.String,System.DateTime,System.Int32,System.Int32)"
      },
      "ModificationPatch": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "dateRegistered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRegistered property",
            "format": "date-time",
            "nullable": true
          },
          "requestedBy": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Modification required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgModOrder(System.String,System.Int32,System.String,System.String,System.String,System.DateTime,System.Int32,System.Int32)"
      },
      "ModificationDependencyPost": {
        "required": [
          "left",
          "right"
        ],
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "dependencyType": {
            "type": "string",
            "description": "Gets or Sets the value of the DependencyType property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ModificationDependency required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddModRelation(System.String,System.Int32,System.Int32,System.String)"
      },
      "ModificationImpactedChangeRequestPost": {
        "type": "object",
        "properties": {
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ModificationImpactedChangeRequest required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddModOrderChanges(System.String,System.Int32,System.Int32)"
      },
      "ExternalObjectLocationPost": {
        "required": [
          "externalObject",
          "location",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectOrganizationPost": {
        "required": [
          "externalObject",
          "organization",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectOrganization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectPersonPost": {
        "required": [
          "externalObject",
          "person",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectPhysicalItemPost": {
        "required": [
          "externalObject",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectProjectPost": {
        "required": [
          "externalObject",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectProjectWiseItemPost": {
        "required": [
          "externalObject",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectSerializedItemPost": {
        "required": [
          "externalObject",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectSharePointItemPost": {
        "required": [
          "externalObject",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectTagPost": {
        "required": [
          "externalObject",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectVirtualItemGroupPost": {
        "required": [
          "externalObject",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalSystemPost": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "onObjectAdding": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectAdding property",
            "nullable": true
          },
          "onObjectAdded": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectAdded property",
            "nullable": true
          },
          "onObjectDeleting": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectDeleting property",
            "nullable": true
          },
          "onObjectDeleted": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectDeleted property",
            "nullable": true
          },
          "onObjectChanging": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectChanging property",
            "nullable": true
          },
          "onObjectChanged": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectChanged property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalSystem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddExternalSystem(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "ExternalSystemPatch": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "onObjectAdding": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectAdding property",
            "nullable": true
          },
          "onObjectAdded": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectAdded property",
            "nullable": true
          },
          "onObjectDeleting": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectDeleting property",
            "nullable": true
          },
          "onObjectDeleted": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectDeleted property",
            "nullable": true
          },
          "onObjectChanging": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectChanging property",
            "nullable": true
          },
          "onObjectChanged": {
            "type": "string",
            "description": "Gets or Sets the value of the OnObjectChanged property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalSystem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgExternalSystem(System.String,System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "FilePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "fileFormat": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "remarks": {
            "type": "string",
            "description": "Gets or Sets the value of the Remarks property",
            "nullable": true
          },
          "pageSize": {
            "type": "string",
            "description": "Gets or Sets the value of the PageSize property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.File required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDocFile(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "FileFormatPost": {
        "required": [
          "fileExtentions",
          "mimeType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "fileExtentions": {
            "type": "string",
            "description": "Gets or Sets the value of the FileExtentions property"
          },
          "mimeType": {
            "type": "string",
            "description": "Gets or Sets the value of the MimeType property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FileFormat required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddApplication(System.String,System.String,System.String,System.String)"
      },
      "FileFormatPatch": {
        "required": [
          "fileExtentions",
          "mimeType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "fileExtentions": {
            "type": "string",
            "description": "Gets or Sets the value of the FileExtentions property"
          },
          "mimeType": {
            "type": "string",
            "description": "Gets or Sets the value of the MimeType property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FileFormat required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgApplication(System.String,System.Int32,System.String,System.String,System.String)"
      },
      "FileplanPost": {
        "required": [
          "code",
          "isEnabled",
          "isHoldFolder",
          "isOpen",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "isOpen": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsOpen property"
          },
          "isHoldFolder": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsHoldFolder property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Fileplan required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFileplanFolder(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "FileplanPatch": {
        "required": [
          "code",
          "isEnabled",
          "isHoldFolder",
          "isOpen",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "isOpen": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsOpen property"
          },
          "isHoldFolder": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsHoldFolder property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Fileplan required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFileplanFolder(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "FinancialYearPost": {
        "required": [
          "description",
          "endDate",
          "isActive",
          "name",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsActive property"
          },
          "startDate": {
            "type": "string",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FinancialYear required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFinancialYear(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "FinancialYearPatch": {
        "required": [
          "description",
          "endDate",
          "isActive",
          "name",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsActive property"
          },
          "startDate": {
            "type": "string",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FinancialYear required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFinancialYear(System.String,System.Int32,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "FolderPost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Folder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddGuiObject(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "FolderPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Folder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgGuiObject(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "FormPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "description": "Gets or Sets the value of the ObjectId property",
            "format": "int32"
          },
          "objectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ObjectType property",
            "format": "int32"
          },
          "ecSchemaName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECSchemaName property",
            "nullable": true
          },
          "ecClassName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECClassName property",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Form required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddForm(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "FormPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "description": "Gets or Sets the value of the ObjectId property",
            "format": "int32"
          },
          "objectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ObjectType property",
            "format": "int32"
          },
          "ecSchemaName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECSchemaName property",
            "nullable": true
          },
          "ecClassName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECClassName property",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Form required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgForm(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "FormBindingPost": {
        "required": [
          "formDefinitionId",
          "isBaseClass"
        ],
        "type": "object",
        "properties": {
          "classId": {
            "type": "integer",
            "description": "Gets or Sets the value of the ClassId property",
            "format": "int32",
            "nullable": true
          },
          "ecSchemaName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECSchemaName property",
            "nullable": true
          },
          "ecClassName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECClassName property",
            "nullable": true
          },
          "formDefinitionId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormDefinitionId property",
            "format": "int32"
          },
          "isBaseClass": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsBaseClass property"
          },
          "relationship": {
            "type": "string",
            "description": "Gets or Sets the value of the Relationship property",
            "nullable": true
          },
          "relatedTo": {
            "type": "string",
            "description": "Gets or Sets the value of the RelatedTo property",
            "nullable": true
          },
          "relationshipDirection": {
            "type": "string",
            "description": "Gets or Sets the value of the RelationshipDirection property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormBinding required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormBinding(System.String,System.Nullable{System.Int32},System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "FormBindingPatch": {
        "required": [
          "formDefinitionId",
          "isBaseClass"
        ],
        "type": "object",
        "properties": {
          "classId": {
            "type": "integer",
            "description": "Gets or Sets the value of the ClassId property",
            "format": "int32",
            "nullable": true
          },
          "ecSchemaName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECSchemaName property",
            "nullable": true
          },
          "ecClassName": {
            "type": "string",
            "description": "Gets or Sets the value of the ECClassName property",
            "nullable": true
          },
          "formDefinitionId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormDefinitionId property",
            "format": "int32"
          },
          "isBaseClass": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsBaseClass property"
          },
          "relationship": {
            "type": "string",
            "description": "Gets or Sets the value of the Relationship property",
            "nullable": true
          },
          "relatedTo": {
            "type": "string",
            "description": "Gets or Sets the value of the RelatedTo property",
            "nullable": true
          },
          "relationshipDirection": {
            "type": "string",
            "description": "Gets or Sets the value of the RelationshipDirection property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormBinding required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormBinding(System.String,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String)"
      },
      "FormCollectionPost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "binding": {
            "type": "string",
            "description": "Gets or Sets the value of the Binding property",
            "nullable": true
          },
          "displayLabel": {
            "type": "string",
            "description": "Gets or Sets the value of the DisplayLabel property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormCollection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormCollection(System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "FormCollectionPatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "binding": {
            "type": "string",
            "description": "Gets or Sets the value of the Binding property",
            "nullable": true
          },
          "displayLabel": {
            "type": "string",
            "description": "Gets or Sets the value of the DisplayLabel property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormCollection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormCollection(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)"
      },
      "FormControlPost": {
        "required": [
          "formDefinitionId",
          "height",
          "leftPosition",
          "name",
          "order",
          "topPosition",
          "type",
          "width"
        ],
        "type": "object",
        "properties": {
          "formDefinitionId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormDefinitionId property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "type": {
            "type": "integer",
            "description": "Gets or Sets the value of the Type property",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "Gets or Sets the value of the Width property",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Gets or Sets the value of the Height property",
            "format": "int32"
          },
          "leftPosition": {
            "type": "integer",
            "description": "Gets or Sets the value of the LeftPosition property",
            "format": "int32"
          },
          "topPosition": {
            "type": "integer",
            "description": "Gets or Sets the value of the TopPosition property",
            "format": "int32"
          },
          "displayLabel": {
            "type": "string",
            "description": "Gets or Sets the value of the DisplayLabel property",
            "nullable": true
          },
          "isPercent": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsPercent property"
          },
          "isReadonly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsReadonly property"
          },
          "isRequired": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsRequired property"
          },
          "fileId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FileId property",
            "format": "int32",
            "nullable": true
          },
          "isSingleImage": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSingleImage property"
          },
          "isSingleLine": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSingleLine property"
          },
          "isSingleSelect": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSingleSelect property"
          },
          "listItems": {
            "type": "string",
            "description": "Gets or Sets the value of the ListItems property",
            "nullable": true
          },
          "labelAnchor": {
            "type": "integer",
            "description": "Gets or Sets the value of the LabelAnchor property",
            "format": "int32",
            "nullable": true
          },
          "contentPadding": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentPadding property",
            "format": "int32",
            "nullable": true
          },
          "contentSpacing": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentSpacing property",
            "format": "int32",
            "nullable": true
          },
          "layoutType": {
            "type": "integer",
            "description": "Gets or Sets the value of the LayoutType property",
            "format": "int32",
            "nullable": true
          },
          "keyType": {
            "type": "string",
            "description": "Gets or Sets the value of the KeyType property",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "Gets or Sets the value of the Order property",
            "format": "int32"
          },
          "customFields": {
            "type": "string",
            "description": "Gets or Sets the value of the CustomFields property",
            "nullable": true
          },
          "allowsEditing": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowsEditing property"
          },
          "allowsRowAdding": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowsRowAdding property"
          },
          "allowsRowDeletion": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowsRowDeletion property"
          },
          "style": {
            "$ref": "#/components/schemas/IdPost"
          },
          "binding": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControl required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormControl(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})"
      },
      "FormControlPatch": {
        "required": [
          "formDefinitionId",
          "height",
          "leftPosition",
          "name",
          "order",
          "topPosition",
          "type",
          "width"
        ],
        "type": "object",
        "properties": {
          "formDefinitionId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormDefinitionId property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "type": {
            "type": "integer",
            "description": "Gets or Sets the value of the Type property",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "Gets or Sets the value of the Width property",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Gets or Sets the value of the Height property",
            "format": "int32"
          },
          "leftPosition": {
            "type": "integer",
            "description": "Gets or Sets the value of the LeftPosition property",
            "format": "int32"
          },
          "topPosition": {
            "type": "integer",
            "description": "Gets or Sets the value of the TopPosition property",
            "format": "int32"
          },
          "displayLabel": {
            "type": "string",
            "description": "Gets or Sets the value of the DisplayLabel property",
            "nullable": true
          },
          "isPercent": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsPercent property"
          },
          "isReadonly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsReadonly property"
          },
          "isRequired": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsRequired property"
          },
          "fileId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FileId property",
            "format": "int32",
            "nullable": true
          },
          "isSingleImage": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSingleImage property"
          },
          "isSingleLine": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSingleLine property"
          },
          "isSingleSelect": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSingleSelect property"
          },
          "listItems": {
            "type": "string",
            "description": "Gets or Sets the value of the ListItems property",
            "nullable": true
          },
          "labelAnchor": {
            "type": "integer",
            "description": "Gets or Sets the value of the LabelAnchor property",
            "format": "int32",
            "nullable": true
          },
          "contentPadding": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentPadding property",
            "format": "int32",
            "nullable": true
          },
          "contentSpacing": {
            "type": "integer",
            "description": "Gets or Sets the value of the ContentSpacing property",
            "format": "int32",
            "nullable": true
          },
          "layoutType": {
            "type": "integer",
            "description": "Gets or Sets the value of the LayoutType property",
            "format": "int32",
            "nullable": true
          },
          "keyType": {
            "type": "string",
            "description": "Gets or Sets the value of the KeyType property",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "Gets or Sets the value of the Order property",
            "format": "int32"
          },
          "customFields": {
            "type": "string",
            "description": "Gets or Sets the value of the CustomFields property",
            "nullable": true
          },
          "allowsEditing": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowsEditing property"
          },
          "allowsRowAdding": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowsRowAdding property"
          },
          "allowsRowDeletion": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowsRowDeletion property"
          },
          "style": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "binding": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControl required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormControl(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})"
      },
      "FormControlEventPost": {
        "required": [
          "event",
          "formControlId"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "Gets or Sets the value of the Event property"
          },
          "formControlId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlEvent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormControlEvent(System.String,System.String,System.Int32)"
      },
      "FormControlEventPatch": {
        "required": [
          "event",
          "formControlId"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "Gets or Sets the value of the Event property"
          },
          "formControlId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlEvent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormControlEvent(System.String,System.Int32,System.String,System.Int32)"
      },
      "FormControlScriptPost": {
        "required": [
          "formControlEventId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "formControlEventId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlEventId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlScript required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormControlScript(System.String,System.String,System.Int32)"
      },
      "FormControlScriptPatch": {
        "required": [
          "formControlEventId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "formControlEventId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlEventId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlScript required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormControlScript(System.String,System.Int32,System.String,System.Int32)"
      },
      "FormControlScriptActionPost": {
        "required": [
          "actionType",
          "formControlScriptId"
        ],
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string",
            "description": "Gets or Sets the value of the ActionType property"
          },
          "expression": {
            "type": "string",
            "description": "Gets or Sets the value of the Expression property",
            "nullable": true
          },
          "targetControl": {
            "$ref": "#/components/schemas/IdPost"
          },
          "executeOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the ExecuteOrder property",
            "format": "int32"
          },
          "formControlScriptId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlScriptId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlScriptAction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormControlScriptAction(System.String,System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32)"
      },
      "FormControlScriptActionPatch": {
        "required": [
          "actionType",
          "formControlScriptId"
        ],
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string",
            "description": "Gets or Sets the value of the ActionType property"
          },
          "expression": {
            "type": "string",
            "description": "Gets or Sets the value of the Expression property",
            "nullable": true
          },
          "targetControl": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "executeOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the ExecuteOrder property",
            "format": "int32"
          },
          "formControlScriptId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlScriptId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlScriptAction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormControlScriptAction(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32)"
      },
      "FormControlScriptConditionPost": {
        "required": [
          "formControlScriptId",
          "property"
        ],
        "type": "object",
        "properties": {
          "conditional": {
            "type": "string",
            "description": "Gets or Sets the value of the Conditional property",
            "nullable": true
          },
          "property": {
            "type": "string",
            "description": "Gets or Sets the value of the Property property"
          },
          "operator": {
            "type": "string",
            "description": "Gets or Sets the value of the Operator property",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property",
            "nullable": true
          },
          "conditionOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the ConditionOrder property",
            "format": "int32"
          },
          "formControlScriptId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlScriptId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlScriptCondition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormControlScriptCondition(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "FormControlScriptConditionPatch": {
        "required": [
          "formControlScriptId",
          "property"
        ],
        "type": "object",
        "properties": {
          "conditional": {
            "type": "string",
            "description": "Gets or Sets the value of the Conditional property",
            "nullable": true
          },
          "property": {
            "type": "string",
            "description": "Gets or Sets the value of the Property property"
          },
          "operator": {
            "type": "string",
            "description": "Gets or Sets the value of the Operator property",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property",
            "nullable": true
          },
          "conditionOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the ConditionOrder property",
            "format": "int32"
          },
          "formControlScriptId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormControlScriptId property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormControlScriptCondition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormControlScriptCondition(System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "FormDefinitionPost": {
        "required": [
          "formId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Gets or Sets the value of the Type property"
          },
          "platform": {
            "type": "string",
            "description": "Gets or Sets the value of the Platform property",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "description": "Gets or Sets the value of the Width property",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "description": "Gets or Sets the value of the Height property",
            "format": "int32",
            "nullable": true
          },
          "gpsBindingType": {
            "type": "string",
            "description": "Gets or Sets the value of the GpsBindingType property",
            "nullable": true
          },
          "gpsFirstBinding": {
            "type": "string",
            "description": "Gets or Sets the value of the GpsFirstBinding property",
            "nullable": true
          },
          "gpsSecondBinding": {
            "type": "string",
            "description": "Gets or Sets the value of the GpsSecondBinding property",
            "nullable": true
          },
          "formId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormId property",
            "format": "int32"
          },
          "definitionCache": {
            "type": "string",
            "description": "Gets or Sets the value of the DefinitionCache property",
            "nullable": true
          },
          "definitionVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the DefinitionVersion property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormDefinition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormDefinition(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.Int32)"
      },
      "FormDefinitionPatch": {
        "required": [
          "formId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Gets or Sets the value of the Type property"
          },
          "platform": {
            "type": "string",
            "description": "Gets or Sets the value of the Platform property",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "description": "Gets or Sets the value of the Width property",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "description": "Gets or Sets the value of the Height property",
            "format": "int32",
            "nullable": true
          },
          "gpsBindingType": {
            "type": "string",
            "description": "Gets or Sets the value of the GpsBindingType property",
            "nullable": true
          },
          "gpsFirstBinding": {
            "type": "string",
            "description": "Gets or Sets the value of the GpsFirstBinding property",
            "nullable": true
          },
          "gpsSecondBinding": {
            "type": "string",
            "description": "Gets or Sets the value of the GpsSecondBinding property",
            "nullable": true
          },
          "formId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormId property",
            "format": "int32"
          },
          "definitionCache": {
            "type": "string",
            "description": "Gets or Sets the value of the DefinitionCache property",
            "nullable": true
          },
          "definitionVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the DefinitionVersion property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormDefinition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormDefinition(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.String,System.Int32)"
      },
      "FormFormCollectionPost": {
        "required": [
          "formCollectionId",
          "formId"
        ],
        "type": "object",
        "properties": {
          "formCollectionId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormCollectionId property",
            "format": "int32"
          },
          "formId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormId property",
            "format": "int32"
          },
          "formOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormOrder property",
            "format": "int32"
          },
          "relationship": {
            "type": "string",
            "description": "Gets or Sets the value of the Relationship property",
            "nullable": true
          },
          "relationshipDirection": {
            "type": "string",
            "description": "Gets or Sets the value of the RelationshipDirection property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormFormCollection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormFormCollection(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)"
      },
      "FormFormCollectionPatch": {
        "required": [
          "formCollectionId",
          "formId"
        ],
        "type": "object",
        "properties": {
          "formCollectionId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormCollectionId property",
            "format": "int32"
          },
          "formId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormId property",
            "format": "int32"
          },
          "formOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormOrder property",
            "format": "int32"
          },
          "relationship": {
            "type": "string",
            "description": "Gets or Sets the value of the Relationship property",
            "nullable": true
          },
          "relationshipDirection": {
            "type": "string",
            "description": "Gets or Sets the value of the RelationshipDirection property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormFormCollection required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormFormCollection(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)"
      },
      "FormListWherePost": {
        "required": [
          "formPropertyId",
          "operator",
          "property",
          "value"
        ],
        "type": "object",
        "properties": {
          "formPropertyId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormPropertyId property",
            "format": "int32"
          },
          "property": {
            "type": "string",
            "description": "Gets or Sets the value of the Property property"
          },
          "operator": {
            "type": "integer",
            "description": "Gets or Sets the value of the Operator property",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property"
          },
          "listOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the ListOrder property",
            "format": "int32"
          },
          "joinOperator": {
            "type": "integer",
            "description": "Gets or Sets the value of the JoinOperator property",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormListWhere required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormListWhere(System.String,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.Int32})"
      },
      "FormListWherePatch": {
        "required": [
          "formPropertyId",
          "operator",
          "property",
          "value"
        ],
        "type": "object",
        "properties": {
          "formPropertyId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormPropertyId property",
            "format": "int32"
          },
          "property": {
            "type": "string",
            "description": "Gets or Sets the value of the Property property"
          },
          "operator": {
            "type": "integer",
            "description": "Gets or Sets the value of the Operator property",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property"
          },
          "listOrder": {
            "type": "integer",
            "description": "Gets or Sets the value of the ListOrder property",
            "format": "int32"
          },
          "joinOperator": {
            "type": "integer",
            "description": "Gets or Sets the value of the JoinOperator property",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormListWhere required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormListWhere(System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Nullable{System.Int32})"
      },
      "FormPropertyBindingPost": {
        "required": [
          "formBindingId",
          "property"
        ],
        "type": "object",
        "properties": {
          "formBindingId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormBindingId property",
            "format": "int32"
          },
          "property": {
            "type": "string",
            "description": "Gets or Sets the value of the Property property"
          },
          "orderBy": {
            "type": "string",
            "description": "Gets or Sets the value of the OrderBy property",
            "nullable": true
          },
          "groupBy": {
            "type": "string",
            "description": "Gets or Sets the value of the GroupBy property",
            "nullable": true
          },
          "displayProperty": {
            "type": "string",
            "description": "Gets or Sets the value of the DisplayProperty property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormPropertyBinding required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormPropertyBinding(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "FormPropertyBindingPatch": {
        "required": [
          "formBindingId",
          "property"
        ],
        "type": "object",
        "properties": {
          "formBindingId": {
            "type": "integer",
            "description": "Gets or Sets the value of the FormBindingId property",
            "format": "int32"
          },
          "property": {
            "type": "string",
            "description": "Gets or Sets the value of the Property property"
          },
          "orderBy": {
            "type": "string",
            "description": "Gets or Sets the value of the OrderBy property",
            "nullable": true
          },
          "groupBy": {
            "type": "string",
            "description": "Gets or Sets the value of the GroupBy property",
            "nullable": true
          },
          "displayProperty": {
            "type": "string",
            "description": "Gets or Sets the value of the DisplayProperty property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormPropertyBinding required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormPropertyBinding(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "FormStylePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "backgroundColor": {
            "type": "string",
            "description": "Gets or Sets the value of the BackgroundColor property",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "description": "Gets or Sets the value of the BorderColor property",
            "nullable": true
          },
          "borderSide": {
            "type": "integer",
            "description": "Gets or Sets the value of the BorderSide property",
            "format": "int32",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "description": "Gets or Sets the value of the BorderWidth property",
            "format": "int32",
            "nullable": true
          },
          "fontColor": {
            "type": "string",
            "description": "Gets or Sets the value of the FontColor property",
            "nullable": true
          },
          "fontFamily": {
            "type": "string",
            "description": "Gets or Sets the value of the FontFamily property",
            "nullable": true
          },
          "fontSize": {
            "type": "integer",
            "description": "Gets or Sets the value of the FontSize property",
            "format": "int32",
            "nullable": true
          },
          "isBold": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsBold property"
          },
          "isItalic": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsItalic property"
          },
          "isUnderlined": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsUnderlined property"
          },
          "textAlignment": {
            "type": "integer",
            "description": "Gets or Sets the value of the TextAlignment property",
            "format": "int32",
            "nullable": true
          },
          "styleCache": {
            "type": "string",
            "description": "Gets or Sets the value of the StyleCache property",
            "nullable": true
          },
          "styleVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the StyleVersion property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormStyle required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddFormStyle(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Int32)"
      },
      "FormStylePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "backgroundColor": {
            "type": "string",
            "description": "Gets or Sets the value of the BackgroundColor property",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "description": "Gets or Sets the value of the BorderColor property",
            "nullable": true
          },
          "borderSide": {
            "type": "integer",
            "description": "Gets or Sets the value of the BorderSide property",
            "format": "int32",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "description": "Gets or Sets the value of the BorderWidth property",
            "format": "int32",
            "nullable": true
          },
          "fontColor": {
            "type": "string",
            "description": "Gets or Sets the value of the FontColor property",
            "nullable": true
          },
          "fontFamily": {
            "type": "string",
            "description": "Gets or Sets the value of the FontFamily property",
            "nullable": true
          },
          "fontSize": {
            "type": "integer",
            "description": "Gets or Sets the value of the FontSize property",
            "format": "int32",
            "nullable": true
          },
          "isBold": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsBold property"
          },
          "isItalic": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsItalic property"
          },
          "isUnderlined": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsUnderlined property"
          },
          "textAlignment": {
            "type": "integer",
            "description": "Gets or Sets the value of the TextAlignment property",
            "format": "int32",
            "nullable": true
          },
          "styleCache": {
            "type": "string",
            "description": "Gets or Sets the value of the StyleCache property",
            "nullable": true
          },
          "styleVersion": {
            "type": "integer",
            "description": "Gets or Sets the value of the StyleVersion property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.FormStyle required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgFormStyle(System.String,System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Int32)"
      },
      "GroupedVirtualItemPost": {
        "type": "object",
        "properties": {
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddVitemGrpMember(System.String,System.Int32,System.Int32)"
      },
      "GroupedVirtualItemGroupedVirtualItemPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemGroupedVirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemLocationPost": {
        "required": [
          "groupedVirtualItem",
          "location",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemOrganizationPost": {
        "required": [
          "groupedVirtualItem",
          "organization",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemOrganization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemPersonPost": {
        "required": [
          "groupedVirtualItem",
          "person",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "GroupedVirtualItemPhysicalItemPost": {
        "required": [
          "groupedVirtualItem",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.GroupedVirtualItemPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentCopyPatch": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "copyType": {
            "type": "string",
            "description": "Gets or Sets the value of the CopyType property",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "repositoryGroup": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "purpose": {
            "type": "integer",
            "description": "Gets or Sets the value of the Purpose property",
            "format": "int32"
          },
          "mediaType": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentCopy required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDocCopy(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)"
      },
      "DocumentDocumentPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentEventPost": {
        "required": [
          "document",
          "event",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentEvent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentExternalObjectPost": {
        "required": [
          "document",
          "externalObject",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentExternalObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentFileplanPost": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "fileplan": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentFileplan required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDocFileplan(System.String,System.Int32,System.Int32)"
      },
      "DocumentGroupedVirtualItemPost": {
        "required": [
          "document",
          "groupedVirtualItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentGroupedVirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentLocationPost": {
        "required": [
          "document",
          "location",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentModificationPost": {
        "required": [
          "document",
          "modification",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentModification required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentOrganizationPost": {
        "required": [
          "document",
          "organization",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentOrganization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentPersonPost": {
        "required": [
          "document",
          "person",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentPhysicalItemPost": {
        "required": [
          "document",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentProgramPost": {
        "required": [
          "document",
          "program",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "program": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentProgram required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentProjectPost": {
        "required": [
          "document",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentProjectWiseItemPost": {
        "required": [
          "document",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentRestrictionPost": {
        "required": [
          "document",
          "relationshipType",
          "restriction"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "restriction": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentRestriction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentSerializedItemPost": {
        "required": [
          "document",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentSharePointItemPost": {
        "required": [
          "document",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentTagPost": {
        "required": [
          "document",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentTaskOrderPost": {
        "required": [
          "document",
          "relationshipType",
          "taskOrder"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "taskOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentTaskOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DocumentVirtualItemGroupPost": {
        "required": [
          "document",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EnginePost": {
        "required": [
          "codeReference",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "iFaceId": {
            "type": "integer",
            "description": "Gets or Sets the value of the IFaceId property",
            "format": "int32"
          },
          "codeReference": {
            "type": "string",
            "description": "Gets or Sets the value of the CodeReference property"
          },
          "runtimeAssembly": {
            "type": "string",
            "description": "Gets or Sets the value of the RuntimeAssembly property",
            "nullable": true
          },
          "timeout": {
            "type": "integer",
            "description": "Gets or Sets the value of the Timeout property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Engine required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddEngine(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32)"
      },
      "EnginePatch": {
        "required": [
          "codeReference",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "codeReference": {
            "type": "string",
            "description": "Gets or Sets the value of the CodeReference property"
          },
          "timeout": {
            "type": "integer",
            "description": "Gets or Sets the value of the Timeout property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Engine required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgEngine(System.String,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "EntityMetadataPost": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "schemaName": {
            "type": "string",
            "description": "Gets or Sets the value of the SchemaName property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EntityMetadata required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddEntityMetadata(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "EntityMetadataPatch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "schemaName": {
            "type": "string",
            "description": "Gets or Sets the value of the SchemaName property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EntityMetadata required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgEntityMetadata(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "EventPost": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "startDate": {
            "type": "string",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Event required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddEvent(System.String,System.String,System.Int32,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "EventPatch": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "startDate": {
            "type": "string",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Event required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgEvent(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "EventEventPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventEvent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventExternalObjectPost": {
        "required": [
          "event",
          "externalObject",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventExternalObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventGroupedVirtualItemPost": {
        "required": [
          "event",
          "groupedVirtualItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventGroupedVirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventLocationPost": {
        "required": [
          "event",
          "location",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventModificationPost": {
        "required": [
          "event",
          "modification",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventModification required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventOrganizationPost": {
        "required": [
          "event",
          "organization",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventOrganization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventPersonPost": {
        "required": [
          "event",
          "person",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventPhysicalItemPost": {
        "required": [
          "event",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventProjectPost": {
        "required": [
          "event",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventProjectWiseItemPost": {
        "required": [
          "event",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventSerializedItemPost": {
        "required": [
          "event",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventSharePointItemPost": {
        "required": [
          "event",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventTagPost": {
        "required": [
          "event",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "EventVirtualItemGroupPost": {
        "required": [
          "event",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.EventVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalAttributeDefPost": {
        "required": [
          "code",
          "isReadOnly",
          "name",
          "systemScope"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "description": "Gets or Sets the value of the SystemId property",
            "format": "int32"
          },
          "systemScope": {
            "type": "string",
            "description": "Gets or Sets the value of the SystemScope property"
          },
          "dataType": {
            "type": "integer",
            "description": "Gets or Sets the value of the DataType property",
            "format": "int32"
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsReadOnly property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalAttributeDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddExternalAttribDef(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String)"
      },
      "ExternalAttributeDefPatch": {
        "required": [
          "code",
          "isReadOnly",
          "name",
          "systemScope"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "description": "Gets or Sets the value of the SystemId property",
            "format": "int32"
          },
          "systemScope": {
            "type": "string",
            "description": "Gets or Sets the value of the SystemScope property"
          },
          "dataType": {
            "type": "integer",
            "description": "Gets or Sets the value of the DataType property",
            "format": "int32"
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsReadOnly property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalAttributeDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgExternalAttribDef(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String)"
      },
      "ExternalAttributeLinkPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "externalAttributeDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "attributeName": {
            "type": "string",
            "description": "Gets or Sets the value of the AttributeName property",
            "nullable": true
          },
          "attributeDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "direction": {
            "type": "string",
            "description": "Gets or Sets the value of the Direction property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalAttributeLink required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddExternalAttribLink(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)"
      },
      "ObjectLayout": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "layoutType": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "getObjectOptions": {
            "type": "integer",
            "format": "int64"
          },
          "inheritedFrom": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "description": "Describes the members of the ObjectLayout DataContract"
      },
      "ObjectBehavior": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "behaviorType": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "inheritedFrom": {
            "$ref": "#/components/schemas/Object"
          },
          "useDefault": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the ObjectBehavior DataContract"
      },
      "AuditDef": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "actionType": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "track": {
            "type": "boolean"
          },
          "mustTrack": {
            "type": "boolean"
          },
          "purgeFlags": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the AuditDef DataContract"
      },
      "AuditPropertySummary": {
        "type": "object",
        "properties": {
          "auditDetail": {
            "$ref": "#/components/schemas/AuditDetail"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the AuditPropertySummary DataContract"
      },
      "State": {
        "type": "object",
        "properties": {
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isStartState": {
            "type": "boolean"
          },
          "isEndState": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "fromStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "nullable": true
          },
          "toStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the State DataContract"
      },
      "StateTransition": {
        "type": "object",
        "properties": {
          "fromState": {
            "$ref": "#/components/schemas/State"
          },
          "toState": {
            "$ref": "#/components/schemas/State"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the StateTransition DataContract"
      },
      "StateMachine": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            },
            "nullable": true
          },
          "stateTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateTransition"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the StateMachine DataContract"
      },
      "AttributeGroup": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeGroupMember"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the AttributeGroup DataContract"
      },
      "AttributeGroupMember": {
        "type": "object",
        "properties": {
          "attributeGroup": {
            "$ref": "#/components/schemas/AttributeGroup"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "permHint": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the AttributeGroupMember DataContract"
      },
      "AttributeValueList": {
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "isObsolete": {
            "type": "boolean"
          },
          "valueDescription": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "$ref": "#/components/schemas/AttributeValueList"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueList"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AttributeValueList DataContract"
      },
      "AttributeTypeDef": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "isNullable": {
            "type": "boolean"
          },
          "hasLookup": {
            "type": "boolean"
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "editQuery": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "lookupQuery": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributeValueList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueList"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the AttributeTypeDef DataContract"
      },
      "AttributeTableColumnDef": {
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "sequenceNo": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/AttributeTypeDef"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the AttributeTableColumnDef DataContract"
      },
      "OrdinalObject": {
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "description": "Describes the members of the OrdinalObject DataContract"
      },
      "EntityMetadata": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "schemaName": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/Object"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the EntityMetadata DataContract"
      },
      "UnitSystem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Unit"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the UnitSystem DataContract"
      },
      "MeasurementFunction": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "dimension1": {
            "type": "string",
            "nullable": true
          },
          "dimension2": {
            "type": "string",
            "nullable": true
          },
          "dimension3": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the MeasurementFunction DataContract"
      },
      "Unit": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "dimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "unitSystem": {
            "$ref": "#/components/schemas/UnitSystem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "conversionFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "conversionOffSet": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "converter": {
            "type": "integer",
            "format": "int32"
          },
          "unitSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitSystem"
            },
            "nullable": true
          },
          "kindOfQuantities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindOfQuantity"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "baseUnit": {
            "$ref": "#/components/schemas/Unit"
          },
          "measurement": {
            "$ref": "#/components/schemas/MeasurementFunction"
          }
        },
        "description": "Describes the members of the Unit DataContract"
      },
      "Dimension": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "derivation": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "kindOfQuantities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindOfQuantity"
            },
            "nullable": true
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Unit"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Dimension DataContract"
      },
      "KindOfQuantity": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dimension": {
            "$ref": "#/components/schemas/Dimension"
          },
          "defaultUnit": {
            "$ref": "#/components/schemas/Unit"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindOfQuantity"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/KindOfQuantity"
          }
        },
        "description": "Describes the members of the KindOfQuantity DataContract"
      },
      "AttributeUnit": {
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "kindOfQuantity": {
            "$ref": "#/components/schemas/KindOfQuantity"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "lowValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "highValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "varianceValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "allowableUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Unit"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AttributeUnit DataContract"
      },
      "AttributeDomainSource": {
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "sourceObjectType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the AttributeDomainSource DataContract"
      },
      "AttributeDependency": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "child": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "context": {
            "$ref": "#/components/schemas/Object"
          },
          "behavior": {
            "type": "integer",
            "format": "int32"
          },
          "paramName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the AttributeDependency DataContract"
      },
      "ObjectDataset": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "applicability": {
            "type": "integer",
            "format": "int32"
          },
          "contentData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "contentVersion": {
            "type": "integer",
            "format": "int32"
          },
          "outObjectType": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "sqlQuery": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ObjectDataset DataContract"
      },
      "ClassAttribute": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "inherit": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dataTypeConstraints": {
            "type": "integer",
            "format": "int32"
          },
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMetadata"
            },
            "nullable": true
          },
          "attributeUnit": {
            "$ref": "#/components/schemas/AttributeUnit"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "numAssocGroups": {
            "type": "integer",
            "format": "int32"
          },
          "isLinked": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ClassAttribute DataContract"
      },
      "AttributeDef": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "scale": {
            "type": "integer",
            "format": "int32"
          },
          "baseUnit": {
            "type": "string",
            "nullable": true
          },
          "isChangeControlled": {
            "type": "boolean"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "isMultiValued": {
            "type": "boolean"
          },
          "mask": {
            "type": "string",
            "nullable": true
          },
          "hasLookup": {
            "type": "boolean"
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "editQuery": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "searchQuery": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "hasValueDescription": {
            "type": "boolean"
          },
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "dataTypeConstraints": {
            "type": "integer",
            "format": "int32"
          },
          "permMask": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "memberOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeGroupMember"
            },
            "nullable": true
          },
          "attributeValueList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueList"
            },
            "nullable": true
          },
          "tableColumnDefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeTableColumnDef"
            },
            "nullable": true
          },
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMetadata"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "attributeUnit": {
            "$ref": "#/components/schemas/AttributeUnit"
          },
          "attributeDomainSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDomainSource"
            },
            "nullable": true
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDependency"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "isIntrinsic": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "editCommand": {
            "$ref": "#/components/schemas/ObjectDataset"
          },
          "searchCommand": {
            "$ref": "#/components/schemas/ObjectDataset"
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassAttribute"
            },
            "nullable": true
          },
          "attributeUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeUnit"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AttributeDef DataContract"
      },
      "AuditPropertyDef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "collectionName": {
            "type": "string",
            "nullable": true
          },
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "track": {
            "type": "boolean"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          }
        },
        "description": "Describes the members of the AuditPropertyDef DataContract"
      },
      "AuditProperty": {
        "type": "object",
        "properties": {
          "auditDetail": {
            "$ref": "#/components/schemas/AuditDetail"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "auditPropertyDef": {
            "$ref": "#/components/schemas/AuditPropertyDef"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "collectionActionType": {
            "type": "integer",
            "format": "int32"
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the AuditProperty DataContract"
      },
      "AuditDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "auditDef": {
            "$ref": "#/components/schemas/AuditDef"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "propertySummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditPropertySummary"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditProperty"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AuditDetail DataContract"
      },
      "RevisionRule": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "ruleSyntax": {
            "type": "string",
            "nullable": true
          },
          "forceOrder": {
            "type": "boolean"
          },
          "forceValue": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Object"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the RevisionRule DataContract"
      },
      "TemplateInstance": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/Template"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "description": "Describes the members of the TemplateInstance DataContract"
      },
      "Security": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "activityType": {
            "$ref": "#/components/schemas/Object"
          },
          "principal": {
            "$ref": "#/components/schemas/Object"
          },
          "permissionType": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "permission": {
            "type": "integer",
            "format": "int32"
          },
          "isSelfOrMember": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the Security DataContract"
      },
      "AutomationActionDef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "autoProcId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "ruleSyntax": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "sqlQuery": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "isAssertion": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "faultMessage": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AutomationActionDef DataContract"
      },
      "AutomationAction": {
        "type": "object",
        "properties": {
          "automation": {
            "$ref": "#/components/schemas/Automation"
          },
          "action": {
            "$ref": "#/components/schemas/AutomationActionDef"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the AutomationAction DataContract"
      },
      "DbEventHandler": {
        "type": "object",
        "properties": {
          "dbEvent": {
            "$ref": "#/components/schemas/DbEvent"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "codeReference": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isInternal": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the DbEventHandler DataContract"
      },
      "DbEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "paramList": {
            "type": "string",
            "nullable": true
          },
          "bindArgs": {
            "type": "string",
            "nullable": true
          },
          "dbEventHandlers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbEventHandler"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the DbEvent DataContract"
      },
      "AutomationDbEvent": {
        "type": "object",
        "properties": {
          "automation": {
            "$ref": "#/components/schemas/Automation"
          },
          "dbEvent": {
            "$ref": "#/components/schemas/DbEvent"
          }
        },
        "description": "Describes the members of the AutomationDbEvent DataContract"
      },
      "Automation": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isExtention": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "autoOnly": {
            "type": "boolean"
          },
          "isAsync": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "runAs": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutomationAction"
            },
            "nullable": true
          },
          "dbEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutomationDbEvent"
            },
            "nullable": true
          },
          "attributeDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDependency"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Automation DataContract"
      },
      "ObjectAutomation": {
        "type": "object",
        "properties": {
          "executionOrder": {
            "type": "integer",
            "format": "int32"
          },
          "automation": {
            "$ref": "#/components/schemas/Automation"
          },
          "inherited": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the ObjectAutomation DataContract"
      },
      "SnapshotDefDbEvent": {
        "type": "object",
        "properties": {
          "snapshotDef": {
            "$ref": "#/components/schemas/SnapshotDef"
          },
          "dbEvent": {
            "$ref": "#/components/schemas/DbEvent"
          }
        },
        "description": "Describes the members of the SnapshotDefDbEvent DataContract"
      },
      "SnapshotDefClass": {
        "type": "object",
        "properties": {
          "snapshotDef": {
            "$ref": "#/components/schemas/SnapshotDef"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          }
        },
        "description": "Describes the members of the SnapshotDefClass DataContract"
      },
      "SnapshotDef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "targetType": {
            "type": "integer",
            "format": "int32"
          },
          "derivedFrom": {
            "$ref": "#/components/schemas/Template"
          },
          "contentRetrieveOptions": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "cardinality": {
            "type": "integer",
            "format": "int32"
          },
          "mayIgnoreEvent": {
            "type": "boolean"
          },
          "autoOnly": {
            "type": "boolean"
          },
          "renditionType": {
            "type": "integer",
            "format": "int32"
          },
          "dbEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotDefDbEvent"
            },
            "nullable": true
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotDefClass"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the SnapshotDef DataContract"
      },
      "Skill": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Object"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Skill DataContract"
      },
      "TaskPriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the TaskPriority DataContract"
      },
      "TaskStructure": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/Task"
          },
          "child": {
            "$ref": "#/components/schemas/Task"
          },
          "isConditional": {
            "type": "boolean"
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "askQuestion": {
            "type": "boolean"
          },
          "defaultStatus": {
            "type": "string",
            "nullable": true
          },
          "isReworkLink": {
            "type": "boolean"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isExcluded": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the TaskStructure DataContract"
      },
      "RelationshipType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "leftType": {
            "type": "integer",
            "format": "int32"
          },
          "rightType": {
            "type": "integer",
            "format": "int32"
          },
          "leftName": {
            "type": "string",
            "nullable": true
          },
          "rightName": {
            "type": "string",
            "nullable": true
          },
          "controlledBy": {
            "type": "string",
            "nullable": true
          },
          "presentation": {
            "type": "string",
            "nullable": true
          },
          "numLeft": {
            "type": "integer",
            "format": "int32"
          },
          "numRight": {
            "type": "integer",
            "format": "int32"
          },
          "isDirected": {
            "type": "boolean"
          },
          "allowCircularReference": {
            "type": "boolean"
          },
          "derivedFrom": {
            "$ref": "#/components/schemas/Class"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "isSameType": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the RelationshipType DataContract"
      },
      "ChangeRequestPriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the ChangeRequestPriority DataContract"
      },
      "AffectedDocument": {
        "type": "object",
        "properties": {
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "current": {
            "$ref": "#/components/schemas/Document"
          },
          "isMovedForward": {
            "type": "boolean"
          },
          "isImplemented": {
            "type": "boolean"
          },
          "original": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "description": "Describes the members of the AffectedDocument DataContract"
      },
      "Prototype": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "baseObject": {
            "$ref": "#/components/schemas/Object"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "control": {
            "$ref": "#/components/schemas/Object"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the Prototype DataContract"
      },
      "DocumentChangeHistory": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          }
        },
        "description": "Describes the members of the DocumentChangeHistory DataContract"
      },
      "DocumentCheckoutHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "checkoutDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isHistoric": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the DocumentCheckoutHistory DataContract"
      },
      "ChangeRequestLocation": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestLocation DataContract"
      },
      "DocumentLocation": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentLocation DataContract"
      },
      "AffectedVirtualItemGroup": {
        "type": "object",
        "properties": {
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "current": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "isMovedForward": {
            "type": "boolean"
          },
          "isImplemented": {
            "type": "boolean"
          },
          "original": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          }
        },
        "description": "Describes the members of the AffectedVirtualItemGroup DataContract"
      },
      "ResponsibilityType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the ResponsibilityType DataContract"
      },
      "Responsibility": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "responsibilityType": {
            "$ref": "#/components/schemas/ResponsibilityType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Responsibility DataContract"
      },
      "ObjectSnapshot": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "description": "Describes the members of the ObjectSnapshot DataContract"
      },
      "ChangeRequestVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestVirtualItemGroup DataContract"
      },
      "DocumentVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentVirtualItemGroup DataContract"
      },
      "EventVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventVirtualItemGroup DataContract"
      },
      "GroupedVirtualItemVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemVirtualItemGroup DataContract"
      },
      "LocationVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationVirtualItemGroup DataContract"
      },
      "OrganizationVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationVirtualItemGroup DataContract"
      },
      "PersonVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonVirtualItemGroup DataContract"
      },
      "PhysicalItemType": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "legacyId": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the PhysicalItemType DataContract"
      },
      "ChangeRequestSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestSerializedItem DataContract"
      },
      "DocumentSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentSerializedItem DataContract"
      },
      "EventSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventSerializedItem DataContract"
      },
      "GroupedVirtualItemSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemSerializedItem DataContract"
      },
      "LocationSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationSerializedItem DataContract"
      },
      "OrganizationSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationSerializedItem DataContract"
      },
      "PersonSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonSerializedItem DataContract"
      },
      "PhysicalItemSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PhysicalItemSerializedItem DataContract"
      },
      "ProjectSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectSerializedItem DataContract"
      },
      "ObjectKeyValue": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "objectValue": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "description": "Describes the members of the ObjectKeyValue DataContract"
      },
      "ChangeRequestSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestSharePointItem DataContract"
      },
      "DocumentSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentSharePointItem DataContract"
      },
      "EventSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventSharePointItem DataContract"
      },
      "GroupedVirtualItemSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemSharePointItem DataContract"
      },
      "LocationSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationSharePointItem DataContract"
      },
      "OrganizationSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationSharePointItem DataContract"
      },
      "PersonSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonSharePointItem DataContract"
      },
      "PhysicalItemSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PhysicalItemSharePointItem DataContract"
      },
      "ProjectSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectSharePointItem DataContract"
      },
      "ChangeRequestExternalObject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestExternalObject DataContract"
      },
      "DocumentExternalObject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentExternalObject DataContract"
      },
      "EventExternalObject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventExternalObject DataContract"
      },
      "ExternalObjectGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectGroupedVirtualItem DataContract"
      },
      "ExternalObjectLocation": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectLocation DataContract"
      },
      "ExternalObjectOrganization": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectOrganization DataContract"
      },
      "ExternalObjectPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectPerson DataContract"
      },
      "ExternalObjectPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectPhysicalItem DataContract"
      },
      "ExternalObjectProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectProject DataContract"
      },
      "ExternalObjectSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectSerializedItem DataContract"
      },
      "ExternalObjectSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectSharePointItem DataContract"
      },
      "ExternalObjectProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectProjectWiseItem DataContract"
      },
      "AlternativeNumberDef": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "leftName": {
            "type": "string",
            "nullable": true
          },
          "rightName": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "isInteral": {
            "type": "boolean"
          },
          "numLeft": {
            "type": "integer",
            "format": "int32"
          },
          "numRight": {
            "type": "integer",
            "format": "int32"
          },
          "transferOnUprev": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "alternativeNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeNumber"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AlternativeNumberDef DataContract"
      },
      "AlternativeNumber": {
        "type": "object",
        "properties": {
          "alternativeNumberDef": {
            "$ref": "#/components/schemas/AlternativeNumberDef"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the AlternativeNumber DataContract"
      },
      "ControlledObject": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "refObject": {
            "$ref": "#/components/schemas/Object"
          },
          "seqNo": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the ControlledObject DataContract"
      },
      "CrossReferenceType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the CrossReferenceType DataContract"
      },
      "CrossReference": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "crossReferenceType": {
            "$ref": "#/components/schemas/CrossReferenceType"
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the CrossReference DataContract"
      },
      "CopyOptionFilter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the CopyOptionFilter DataContract"
      },
      "CopyOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hasData": {
            "type": "boolean"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOptionFilter"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the CopyOption DataContract"
      },
      "FolderDocument": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderDocument DataContract"
      },
      "FileFormat": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fileExtentions": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the FileFormat DataContract"
      },
      "DocumentCopyFile": {
        "type": "object",
        "properties": {
          "documentCopy": {
            "$ref": "#/components/schemas/DocumentCopy"
          },
          "file": {
            "$ref": "#/components/schemas/File"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "sequenceName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the DocumentCopyFile DataContract"
      },
      "FileDependency": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/File"
          },
          "child": {
            "$ref": "#/components/schemas/File"
          },
          "dependencyType": {
            "type": "integer",
            "format": "int32"
          },
          "relativePath": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the FileDependency DataContract"
      },
      "SiteServer": {
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "server": {
            "$ref": "#/components/schemas/Server"
          },
          "connectInfo": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the SiteServer DataContract"
      },
      "Site": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "connectedServers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteServer"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Site DataContract"
      },
      "CodeAssembly": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "assemblyType": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the CodeAssembly DataContract"
      },
      "HostDefinition": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/CodeAssembly"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the HostDefinition DataContract"
      },
      "ServiceDefinition": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isAdminService": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ServiceDefinition DataContract"
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/CodeAssembly"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Module DataContract"
      },
      "ServiceInstance": {
        "type": "object",
        "properties": {
          "serviceDefinition": {
            "$ref": "#/components/schemas/ServiceDefinition"
          },
          "implementation": {
            "$ref": "#/components/schemas/Module"
          },
          "host": {
            "$ref": "#/components/schemas/HostInstance"
          },
          "isVirtual": {
            "type": "string",
            "nullable": true
          },
          "wsdl": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ServiceInstance DataContract"
      },
      "HostInstance": {
        "type": "object",
        "properties": {
          "hostDefinition": {
            "$ref": "#/components/schemas/HostDefinition"
          },
          "server": {
            "$ref": "#/components/schemas/Server"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceInstance"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the HostInstance DataContract"
      },
      "ServerRepository": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/Repository"
          },
          "server": {
            "$ref": "#/components/schemas/Server"
          }
        },
        "description": "Describes the members of the ServerRepository DataContract"
      },
      "Engine": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "iFaceId": {
            "type": "integer",
            "format": "int32"
          },
          "codeReference": {
            "type": "string",
            "nullable": true
          },
          "runtimeAssembly": {
            "type": "string",
            "nullable": true
          },
          "timeout": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerEngine"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Engine DataContract"
      },
      "ServerEngine": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/Server"
          },
          "engine": {
            "$ref": "#/components/schemas/Engine"
          }
        },
        "description": "Describes the members of the ServerEngine DataContract"
      },
      "JobType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerJobType"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the JobType DataContract"
      },
      "ServerJobType": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/Server"
          },
          "jobType": {
            "$ref": "#/components/schemas/JobType"
          }
        },
        "description": "Describes the members of the ServerJobType DataContract"
      },
      "PrinterCapability": {
        "type": "object",
        "properties": {
          "printer": {
            "$ref": "#/components/schemas/Printer"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the PrinterCapability DataContract"
      },
      "Printer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerPrinter"
            },
            "nullable": true
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrinterCapability"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Printer DataContract"
      },
      "ServerPrinter": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/Server"
          },
          "printer": {
            "$ref": "#/components/schemas/Printer"
          }
        },
        "description": "Describes the members of the ServerPrinter DataContract"
      },
      "Server": {
        "type": "object",
        "properties": {
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "hostInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostInstance"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "parent": {
            "$ref": "#/components/schemas/Server"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteServer"
            },
            "nullable": true
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerRepository"
            },
            "nullable": true
          },
          "engines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerEngine"
            },
            "nullable": true
          },
          "jobTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerJobType"
            },
            "nullable": true
          },
          "storageDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageDevice"
            },
            "nullable": true
          },
          "printers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerPrinter"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Server DataContract"
      },
      "StorageDevice": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/Server"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "rootAccess": {
            "type": "string",
            "nullable": true
          },
          "uriSchemeName": {
            "type": "string",
            "nullable": true
          },
          "driver": {
            "$ref": "#/components/schemas/Engine"
          },
          "speed": {
            "type": "integer",
            "format": "int32"
          },
          "configData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Repository"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the StorageDevice DataContract"
      },
      "RepositoryGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Repository"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the RepositoryGroup DataContract"
      },
      "Repository": {
        "type": "object",
        "properties": {
          "storageDevice": {
            "$ref": "#/components/schemas/StorageDevice"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerRepository"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isOnline": {
            "type": "boolean"
          },
          "isWriteAble": {
            "type": "boolean"
          },
          "isDeleteAble": {
            "type": "boolean"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "isExternal": {
            "type": "boolean"
          },
          "isReplicationSource": {
            "type": "boolean"
          },
          "isReplicationDestination": {
            "type": "boolean"
          },
          "createSignatures": {
            "type": "boolean"
          },
          "verifySignatures": {
            "type": "boolean"
          },
          "repositoryGroup": {
            "$ref": "#/components/schemas/RepositoryGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "absolutePath": {
            "type": "string",
            "nullable": true
          },
          "lastOffset": {
            "type": "integer",
            "format": "int32"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepositoryFile"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Repository DataContract"
      },
      "RepositoryFile": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/Repository"
          },
          "file": {
            "$ref": "#/components/schemas/File"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "relativePath": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the RepositoryFile DataContract"
      },
      "FileCheckoutHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "machineName": {
            "type": "string",
            "nullable": true
          },
          "checkoutDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isHistoric": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the FileCheckoutHistory DataContract"
      },
      "ObjectLock": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "lockType": {
            "type": "integer",
            "format": "int32"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "transactionName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the ObjectLock DataContract"
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileFormat": {
            "$ref": "#/components/schemas/FileFormat"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "copies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCopyFile"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDependency"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDependency"
            },
            "nullable": true
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepositoryFile"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "fileDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "hashKey": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "currentCheckout": {
            "$ref": "#/components/schemas/FileCheckoutHistory"
          },
          "contentData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isCheckedOut": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "isHistoric": {
            "type": "boolean"
          },
          "isPending": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "statusHint": {
            "type": "integer",
            "format": "int32"
          },
          "checkoutHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileCheckoutHistory"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the File DataContract"
      },
      "FolderFile": {
        "type": "object",
        "properties": {
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "file": {
            "$ref": "#/components/schemas/File"
          }
        },
        "description": "Describes the members of the FolderFile DataContract"
      },
      "FolderVirtualItemGroup": {
        "type": "object",
        "properties": {
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderVirtualItemGroup DataContract"
      },
      "FolderGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderGroupedVirtualItem DataContract"
      },
      "FolderPerson": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderPerson DataContract"
      },
      "FolderOrganization": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderOrganization DataContract"
      },
      "FolderLocation": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderLocation DataContract"
      },
      "FolderProject": {
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderProject DataContract"
      },
      "FolderSerializedItem": {
        "type": "object",
        "properties": {
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderSerializedItem DataContract"
      },
      "FolderPhysicalItem": {
        "type": "object",
        "properties": {
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderPhysicalItem DataContract"
      },
      "UrlPage": {
        "type": "object",
        "properties": {
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the UrlPage DataContract"
      },
      "FolderEvent": {
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderEvent DataContract"
      },
      "FolderTag": {
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderTag DataContract"
      },
      "FolderChangeRequest": {
        "type": "object",
        "properties": {
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderChangeRequest DataContract"
      },
      "ModificationPriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the ModificationPriority DataContract"
      },
      "DocumentModification": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentModification DataContract"
      },
      "EventModification": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventModification DataContract"
      },
      "ModificationDependency": {
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/Modification"
          },
          "right": {
            "$ref": "#/components/schemas/Modification"
          },
          "dependencyType": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the ModificationDependency DataContract"
      },
      "ModificationImpactedChangeRequest": {
        "type": "object",
        "properties": {
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          }
        },
        "description": "Describes the members of the ModificationImpactedChangeRequest DataContract"
      },
      "ModificationImpactedPhysicalItem": {
        "type": "object",
        "properties": {
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "modStrike": {
            "type": "string",
            "nullable": true
          },
          "newPhysicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "becomesNewItem": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the ModificationImpactedPhysicalItem DataContract"
      },
      "ModificationImpactedSerializedItem": {
        "type": "object",
        "properties": {
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "newSerializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "datePlanned": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateImplemented": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modStrike": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the ModificationImpactedSerializedItem DataContract"
      },
      "KeywordGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeywordGroupKeyword"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the KeywordGroup DataContract"
      },
      "KeywordGroupKeyword": {
        "type": "object",
        "properties": {
          "keyword": {
            "$ref": "#/components/schemas/Keyword"
          },
          "keywordGroup": {
            "$ref": "#/components/schemas/KeywordGroup"
          }
        },
        "description": "Describes the members of the KeywordGroupKeyword DataContract"
      },
      "Keyword": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywordGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeywordGroupKeyword"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Keyword DataContract"
      },
      "ObjectKeyword": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "keyword": {
            "$ref": "#/components/schemas/Keyword"
          }
        },
        "description": "Describes the members of the ObjectKeyword DataContract"
      },
      "NotePriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the NotePriority DataContract"
      },
      "Note": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "priority": {
            "$ref": "#/components/schemas/NotePriority"
          },
          "content": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Note DataContract"
      },
      "WorkOrderPriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the WorkOrderPriority DataContract"
      },
      "ProjectWorkOrder": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectWorkOrder DataContract"
      },
      "WorkOrderWorkOrder": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "right": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the WorkOrderWorkOrder DataContract"
      },
      "WorkOrderChangeRequest": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderChangeRequest DataContract"
      },
      "WorkOrderDocument": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderDocument DataContract"
      },
      "DirectoryEntryType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the DirectoryEntryType DataContract"
      },
      "DirectoryEntry": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "directoryEntryType": {
            "$ref": "#/components/schemas/DirectoryEntryType"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the DirectoryEntry DataContract"
      },
      "TransmittalResponseType": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/DistributionReason"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the TransmittalResponseType DataContract"
      },
      "DistributionReason": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultNotify": {
            "type": "boolean"
          },
          "isAckRequired": {
            "type": "boolean"
          },
          "isResponseRequired": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "responseTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransmittalResponseType"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the DistributionReason DataContract"
      },
      "DistributionItemFile": {
        "type": "object",
        "properties": {
          "distributionItem": {
            "$ref": "#/components/schemas/DistributionItem"
          },
          "file": {
            "$ref": "#/components/schemas/File"
          }
        },
        "description": "Describes the members of the DistributionItemFile DataContract"
      },
      "FolderTransmittal": {
        "type": "object",
        "properties": {
          "transmittal": {
            "$ref": "#/components/schemas/Transmittal"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderTransmittal DataContract"
      },
      "TaskTransmittal": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "transmittal": {
            "$ref": "#/components/schemas/Transmittal"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskTransmittal DataContract"
      },
      "WorkOrderTransmittal": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "transmittal": {
            "$ref": "#/components/schemas/Transmittal"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderTransmittal DataContract"
      },
      "WorkTaskTransmittal": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "transmittal": {
            "$ref": "#/components/schemas/Transmittal"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskTransmittal DataContract"
      },
      "Notification": {
        "type": "object",
        "properties": {
          "dateNotified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "directoryEntry": {
            "$ref": "#/components/schemas/DirectoryEntry"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "description": "Describes the members of the Notification DataContract"
      },
      "Transmittal": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "issuedTo": {
            "$ref": "#/components/schemas/Person"
          },
          "coverSheet": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItem"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderTransmittal"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTransmittal"
            },
            "nullable": true
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "acceptedStatus": {
            "type": "string",
            "nullable": true
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "$ref": "#/components/schemas/DirectoryEntry"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderTransmittal"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskTransmittal"
            },
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Transmittal DataContract"
      },
      "DistributionItemHistory": {
        "type": "object",
        "properties": {
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "logDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "distibutionItemSequence": {
            "type": "integer",
            "format": "int32"
          },
          "distributionHistoryType": {
            "type": "integer",
            "format": "int32"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "issuedTo": {
            "type": "integer",
            "format": "int32"
          },
          "distributionAddress": {
            "$ref": "#/components/schemas/DirectoryEntry"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "fromTransmittal": {
            "$ref": "#/components/schemas/Transmittal"
          },
          "toTransmittal": {
            "$ref": "#/components/schemas/Transmittal"
          }
        },
        "description": "Describes the members of the DistributionItemHistory DataContract"
      },
      "DistributionItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "preferedCopyCode": {
            "type": "string",
            "nullable": true
          },
          "documentCopy": {
            "$ref": "#/components/schemas/DocumentCopy"
          },
          "copyType": {
            "type": "string",
            "nullable": true
          },
          "dateToReturn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateReturned": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issuedTo": {
            "$ref": "#/components/schemas/Person"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "reason": {
            "$ref": "#/components/schemas/DistributionReason"
          },
          "notifyAddress": {
            "$ref": "#/components/schemas/DirectoryEntry"
          },
          "dateNotified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateAcknowledged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateRequired": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateRequiredUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "hasConflict": {
            "type": "boolean"
          },
          "notify": {
            "type": "boolean"
          },
          "backOrderPriority": {
            "type": "integer",
            "format": "int32"
          },
          "dispatchComment": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "response": {
            "$ref": "#/components/schemas/TransmittalResponseType"
          },
          "responseComment": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "dateResponded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItemFile"
            },
            "nullable": true
          },
          "transmittal": {
            "$ref": "#/components/schemas/Transmittal"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItemHistory"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the DistributionItem DataContract"
      },
      "DistributionOrderDocument": {
        "type": "object",
        "properties": {
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "description": "Describes the members of the DistributionOrderDocument DataContract"
      },
      "DistributionOrderRecipient": {
        "type": "object",
        "properties": {
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "comment": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "description": "Describes the members of the DistributionOrderRecipient DataContract"
      },
      "WorkTaskDistributionOrder": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskDistributionOrder DataContract"
      },
      "TaskDistributionOrder": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskDistributionOrder DataContract"
      },
      "FolderDistributionOrder": {
        "type": "object",
        "properties": {
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderDistributionOrder DataContract"
      },
      "DistributionOrder": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "dateReceived": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "returnAddress": {
            "$ref": "#/components/schemas/DirectoryEntry"
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "defaultReason": {
            "$ref": "#/components/schemas/DistributionReason"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "issueDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issueDueDays": {
            "type": "integer",
            "format": "int32"
          },
          "acknowledgeDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "acknowledgeDueDays": {
            "type": "integer",
            "format": "int32"
          },
          "responseDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "responseDueDays": {
            "type": "integer",
            "format": "int32"
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "coverSheetTemplate": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItem"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "transmittals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transmittal"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItem"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionOrderDocument"
            },
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionOrderRecipient"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderDistributionOrder"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskDistributionOrder"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDistributionOrder"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDistributionOrder"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "acknowleageDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "acknowleageDueDays": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the DistributionOrder DataContract"
      },
      "WorkOrderDistributionOrder": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "distributionOrder": {
            "$ref": "#/components/schemas/DistributionOrder"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderDistributionOrder DataContract"
      },
      "WorkOrderEvent": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderEvent DataContract"
      },
      "WorkOrderGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderGroupedVirtualItem DataContract"
      },
      "WorkOrderVirtualItemGroup": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderVirtualItemGroup DataContract"
      },
      "WorkOrderModification": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderModification DataContract"
      },
      "WorkOrderPhysicalItem": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderPhysicalItem DataContract"
      },
      "WorkOrderSerializedItem": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderSerializedItem DataContract"
      },
      "WorkOrderTag": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkOrderTag DataContract"
      },
      "FolderWorkOrder": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderWorkOrder DataContract"
      },
      "WorkOrder": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "priority": {
            "$ref": "#/components/schemas/WorkOrderPriority"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "description": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nestedIn": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWorkOrder"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderWorkOrder"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderChangeRequest"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderDocument"
            },
            "nullable": true
          },
          "distributionOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderDistributionOrder"
            },
            "nullable": true
          },
          "transmittals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderTransmittal"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderEvent"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderGroupedVirtualItem"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderVirtualItemGroup"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTask"
            },
            "nullable": true
          },
          "modifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderModification"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderPhysicalItem"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderSerializedItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderTag"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderWorkOrder"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "actStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pendingRequest": {
            "type": "string",
            "nullable": true
          },
          "reworkTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the WorkOrder DataContract"
      },
      "ConditionalWorkTask": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "child": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isReworkLink": {
            "type": "boolean"
          },
          "isConditional": {
            "type": "boolean"
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "askQuestion": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "defaultStatus": {
            "type": "string",
            "nullable": true
          },
          "isExcluded": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the ConditionalWorkTask DataContract"
      },
      "WorkTaskDocument": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskDocument DataContract"
      },
      "WorkTaskEvent": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskEvent DataContract"
      },
      "WorkTaskChangeRequest": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskChangeRequest DataContract"
      },
      "WorkTaskPhysicalItem": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskPhysicalItem DataContract"
      },
      "WorkTaskSerializedItem": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskSerializedItem DataContract"
      },
      "WorkTaskGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskGroupedVirtualItem DataContract"
      },
      "WorkTaskVirtualItemGroup": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskVirtualItemGroup DataContract"
      },
      "NestedWorkOrderTemplate": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "template": {
            "$ref": "#/components/schemas/Template"
          },
          "autoInstantiate": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the NestedWorkOrderTemplate DataContract"
      },
      "NestedWorkOrder": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          }
        },
        "description": "Describes the members of the NestedWorkOrder DataContract"
      },
      "WorkTaskStructureRule": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "child": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "ruleType": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "$ref": "#/components/schemas/WorkTask"
          }
        },
        "description": "Describes the members of the WorkTaskStructureRule DataContract"
      },
      "WorkTaskTag": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskTag DataContract"
      },
      "FolderWorkTask": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderWorkTask DataContract"
      },
      "WorkTask": {
        "type": "object",
        "properties": {
          "workOrder": {
            "$ref": "#/components/schemas/WorkOrder"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "skill": {
            "$ref": "#/components/schemas/Skill"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "remark": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "flags": {
            "type": "integer",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "isOptional": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "conditionalWorkTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionalWorkTask"
            },
            "nullable": true
          },
          "delegatedWorkTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTask"
            },
            "nullable": true
          },
          "delegatedFrom": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "mergeFrom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionalWorkTask"
            },
            "nullable": true
          },
          "splitTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionalWorkTask"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskDocument"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskEvent"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskChangeRequest"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskPhysicalItem"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskSerializedItem"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskGroupedVirtualItem"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskVirtualItemGroup"
            },
            "nullable": true
          },
          "modifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskModification"
            },
            "nullable": true
          },
          "nestedWorkOrderTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedWorkOrderTemplate"
            },
            "nullable": true
          },
          "nestedWorkOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedWorkOrder"
            },
            "nullable": true
          },
          "structureRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskStructureRule"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskTag"
            },
            "nullable": true
          },
          "transmittals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskTransmittal"
            },
            "nullable": true
          },
          "distributionOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskDistributionOrder"
            },
            "nullable": true
          },
          "automations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAutomation"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderWorkTask"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "actStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDelegate": {
            "type": "boolean"
          },
          "allocationStatus": {
            "type": "string",
            "nullable": true
          },
          "reworkCount": {
            "type": "integer",
            "format": "int32"
          },
          "isBeforePlanStartDate": {
            "type": "boolean"
          },
          "isLate": {
            "type": "boolean"
          },
          "hasNestedWoPending": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the WorkTask DataContract"
      },
      "WorkTaskModification": {
        "type": "object",
        "properties": {
          "workTask": {
            "$ref": "#/components/schemas/WorkTask"
          },
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "isSubjectData": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the WorkTaskModification DataContract"
      },
      "TaskModification": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskModification DataContract"
      },
      "Modification": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dateRegistered": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requestedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "priority": {
            "$ref": "#/components/schemas/ModificationPriority"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentModification"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventModification"
            },
            "nullable": true
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModificationDependency"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "impactedChangeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModificationImpactedChangeRequest"
            },
            "nullable": true
          },
          "impactedPhysicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModificationImpactedPhysicalItem"
            },
            "nullable": true
          },
          "impactedSerializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModificationImpactedSerializedItem"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskModification"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderModification"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskModification"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderModification"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "implementationStatus": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Modification DataContract"
      },
      "FolderModification": {
        "type": "object",
        "properties": {
          "modification": {
            "$ref": "#/components/schemas/Modification"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderModification DataContract"
      },
      "DeviationWaiverDocument": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "deviationWaiver": {
            "$ref": "#/components/schemas/DeviationWaiver"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DeviationWaiverDocument DataContract"
      },
      "DeviationWaiverEvent": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "deviationWaiver": {
            "$ref": "#/components/schemas/DeviationWaiver"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DeviationWaiverEvent DataContract"
      },
      "DeviationWaiverImpactedPhysicalItem": {
        "type": "object",
        "properties": {
          "deviationWaiver": {
            "$ref": "#/components/schemas/DeviationWaiver"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the DeviationWaiverImpactedPhysicalItem DataContract"
      },
      "DeviationWaiverImpactedSerializedItem": {
        "type": "object",
        "properties": {
          "deviationWaiver": {
            "$ref": "#/components/schemas/DeviationWaiver"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          }
        },
        "description": "Describes the members of the DeviationWaiverImpactedSerializedItem DataContract"
      },
      "DeviationWaiver": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "requestedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "deviatingPhysicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "nullable": true
          },
          "dateRegistered": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "deviatingDocument": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverDocument"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverEvent"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "impactedPhysicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverImpactedPhysicalItem"
            },
            "nullable": true
          },
          "impactedSerializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverImpactedSerializedItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDeviationWaiver"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the DeviationWaiver DataContract"
      },
      "FolderDeviationWaiver": {
        "type": "object",
        "properties": {
          "deviationWaiver": {
            "$ref": "#/components/schemas/DeviationWaiver"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderDeviationWaiver DataContract"
      },
      "FolderTask": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderTask DataContract"
      },
      "DocumentFileplan": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "fileplan": {
            "$ref": "#/components/schemas/Fileplan"
          }
        },
        "description": "Describes the members of the DocumentFileplan DataContract"
      },
      "Fileplan": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isOpen": {
            "type": "boolean"
          },
          "isHoldFolder": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fileplan"
            },
            "nullable": true
          },
          "moveInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileplanStorageRule"
            },
            "nullable": true
          },
          "destructionInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileplanStorageRule"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentFileplan"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "$ref": "#/components/schemas/Fileplan"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Fileplan DataContract"
      },
      "FileplanStorageRule": {
        "type": "object",
        "properties": {
          "fileplan": {
            "$ref": "#/components/schemas/Fileplan"
          },
          "storageRule": {
            "$ref": "#/components/schemas/StorageRule"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the FileplanStorageRule DataContract"
      },
      "StorageRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "ruleType": {
            "type": "integer",
            "format": "int32"
          },
          "dataSet": {
            "$ref": "#/components/schemas/ObjectDataset"
          },
          "repositoryGroup": {
            "$ref": "#/components/schemas/RepositoryGroup"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "deleteDocumentAfterDestruction": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "fileplans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileplanStorageRule"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "revisionSeq": {
            "type": "integer",
            "format": "int32"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "isLatestRevision": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the StorageRule DataContract"
      },
      "DispositionItem": {
        "type": "object",
        "properties": {
          "dispositionOrder": {
            "$ref": "#/components/schemas/DispositionOrder"
          },
          "documentCopy": {
            "$ref": "#/components/schemas/DocumentCopy"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "storageRule": {
            "$ref": "#/components/schemas/StorageRule"
          }
        },
        "description": "Describes the members of the DispositionItem DataContract"
      },
      "DispositionOrder": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/Person"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DispositionItem"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDispositionOrder"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DispositionOrder DataContract"
      },
      "FolderDispositionOrder": {
        "type": "object",
        "properties": {
          "dispositionOrder": {
            "$ref": "#/components/schemas/DispositionOrder"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderDispositionOrder DataContract"
      },
      "SyncScope": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "syncObject": {
            "$ref": "#/components/schemas/Object"
          },
          "associatedScope": {
            "$ref": "#/components/schemas/Scope"
          },
          "syncObjectTypes": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "keyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyValue"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "owner": {
            "$ref": "#/components/schemas/Person"
          },
          "syncKnowledge": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "cleanupKnowledge": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "syncTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "cleanupTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the SyncScope DataContract"
      },
      "PricelistItem": {
        "type": "object",
        "properties": {
          "pricelist": {
            "$ref": "#/components/schemas/Pricelist"
          },
          "item": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "minimumQuantity": {
            "type": "number",
            "format": "double"
          },
          "maximumQuantity": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the PricelistItem DataContract"
      },
      "Pricelist": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricelistItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPricelist"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Pricelist DataContract"
      },
      "FolderPricelist": {
        "type": "object",
        "properties": {
          "pricelist": {
            "$ref": "#/components/schemas/Pricelist"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderPricelist DataContract"
      },
      "BudgetDocument": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the BudgetDocument DataContract"
      },
      "TaskOrderPriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the TaskOrderPriority DataContract"
      },
      "DocumentTaskOrder": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "taskOrder": {
            "$ref": "#/components/schemas/TaskOrder"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentTaskOrder DataContract"
      },
      "ObjectState": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "description": "Describes the members of the ObjectState DataContract"
      },
      "TaskOrderItem": {
        "type": "object",
        "properties": {
          "taskOrder": {
            "$ref": "#/components/schemas/TaskOrder"
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isExcluded": {
            "type": "boolean"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "plannedCost": {
            "type": "number",
            "format": "double"
          },
          "actualCost": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "lineStatus": {
            "$ref": "#/components/schemas/ObjectState"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the TaskOrderItem DataContract"
      },
      "FolderTaskOrder": {
        "type": "object",
        "properties": {
          "taskOrder": {
            "$ref": "#/components/schemas/TaskOrder"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderTaskOrder DataContract"
      },
      "TaskOrderProject": {
        "type": "object",
        "properties": {
          "taskOrder": {
            "$ref": "#/components/schemas/TaskOrder"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          }
        },
        "description": "Describes the members of the TaskOrderProject DataContract"
      },
      "CostCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the CostCategory DataContract"
      },
      "LineItemCostBreakdown": {
        "type": "object",
        "properties": {
          "lineItem": {
            "$ref": "#/components/schemas/Object"
          },
          "costCategory": {
            "$ref": "#/components/schemas/CostCategory"
          },
          "plannedValue": {
            "type": "number",
            "format": "double"
          },
          "actualValue": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Describes the members of the LineItemCostBreakdown DataContract"
      },
      "TaskOrder": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "contract": {
            "$ref": "#/components/schemas/CommercialContract"
          },
          "defaultBudget": {
            "$ref": "#/components/schemas/Budget"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskOrderPriority"
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateRaised": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTaskOrder"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskOrderItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderTaskOrder"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskOrderProject"
            },
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "costBreakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemCostBreakdown"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "plannedCost": {
            "type": "number",
            "format": "double"
          },
          "actualCost": {
            "type": "number",
            "format": "double"
          },
          "actualStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workOrderStatus": {
            "$ref": "#/components/schemas/ObjectState"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "hasData": {
            "type": "string",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the TaskOrder DataContract"
      },
      "BudgetAction": {
        "type": "object",
        "properties": {
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "principal": {
            "$ref": "#/components/schemas/Object"
          },
          "action": {
            "type": "integer",
            "format": "int32"
          },
          "isSelfOrMember": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the BudgetAction DataContract"
      },
      "FolderBudget": {
        "type": "object",
        "properties": {
          "budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderBudget DataContract"
      },
      "Budget": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "financialYear": {
            "$ref": "#/components/schemas/FinancialYear"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "allocation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "committed": {
            "type": "number",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "format": "double"
          },
          "thresholdValue": {
            "type": "number",
            "format": "double"
          },
          "thresholdWarningType": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetDocument"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "taskOrderRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskOrder"
            },
            "nullable": true
          },
          "taskOrderItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskOrderItem"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetAction"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderBudget"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Budget DataContract"
      },
      "FinancialYear": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Budget"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the FinancialYear DataContract"
      },
      "Expenditure": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "financialYear": {
            "$ref": "#/components/schemas/FinancialYear"
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Describes the members of the Expenditure DataContract"
      },
      "ContractDocument": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "contract": {
            "$ref": "#/components/schemas/CommercialContract"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ContractDocument DataContract"
      },
      "ObjectCostCategory": {
        "type": "object",
        "properties": {
          "lineItem": {
            "$ref": "#/components/schemas/Object"
          },
          "costCategory": {
            "$ref": "#/components/schemas/CostCategory"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Describes the members of the ObjectCostCategory DataContract"
      },
      "Measurement": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "measurementFunction": {
            "$ref": "#/components/schemas/MeasurementFunction"
          },
          "value1": {
            "type": "number",
            "format": "double"
          },
          "value2": {
            "type": "number",
            "format": "double"
          },
          "value3": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Describes the members of the Measurement DataContract"
      },
      "ContractItem": {
        "type": "object",
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/CommercialContract"
          },
          "pricelistItem": {
            "$ref": "#/components/schemas/PricelistItem"
          },
          "item": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "minimumQuantity": {
            "type": "number",
            "format": "double"
          },
          "maximumQuantity": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "costCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectCostCategory"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "measurement": {
            "$ref": "#/components/schemas/Measurement"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ContractItem DataContract"
      },
      "CommercialContract": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "contractor": {
            "$ref": "#/components/schemas/Organization"
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "pricelistItemsOnly": {
            "type": "boolean"
          },
          "allowCostCategories": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "expenditures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Expenditure"
            },
            "nullable": true
          },
          "allowedCostCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCategory"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDocument"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "taskOrderRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskOrder"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderContract"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the CommercialContract DataContract"
      },
      "FolderContract": {
        "type": "object",
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/CommercialContract"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderContract DataContract"
      },
      "ConditionPriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the ConditionPriority DataContract"
      },
      "LinearReferenceMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lrmType": {
            "type": "integer",
            "format": "int32"
          },
          "distanceAlongUnits": {
            "$ref": "#/components/schemas/Unit"
          }
        },
        "description": "Describes the members of the LinearReferenceMethod DataContract"
      },
      "LinearElementType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "linearElementClass": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lengthUnits": {
            "type": "string",
            "nullable": true
          },
          "linearlyLocatableClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Class"
            },
            "nullable": true
          },
          "datumTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearElementType"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the LinearElementType DataContract"
      },
      "LinearElement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultLrm": {
            "$ref": "#/components/schemas/LinearReferenceMethod"
          },
          "linearElementType": {
            "$ref": "#/components/schemas/LinearElementType"
          },
          "startValue": {
            "type": "number",
            "format": "double"
          },
          "measure": {
            "type": "number",
            "format": "double"
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the LinearElement DataContract"
      },
      "LateralOffsetExpression": {
        "type": "object",
        "properties": {
          "distanceExpression": {
            "$ref": "#/components/schemas/DistanceExpression"
          },
          "referentType": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the LateralOffsetExpression DataContract"
      },
      "DistanceExpression": {
        "type": "object",
        "properties": {
          "linearRange": {
            "$ref": "#/components/schemas/LinearRange"
          },
          "distanceAlong": {
            "type": "number",
            "format": "double"
          },
          "distanceAlongUnits": {
            "$ref": "#/components/schemas/Unit"
          },
          "offsetExpression": {
            "$ref": "#/components/schemas/LateralOffsetExpression"
          }
        },
        "description": "Describes the members of the DistanceExpression DataContract"
      },
      "LinearRange": {
        "type": "object",
        "properties": {
          "linearLocation": {
            "$ref": "#/components/schemas/LinearLocation"
          },
          "linearElement": {
            "$ref": "#/components/schemas/LinearElement"
          },
          "from": {
            "$ref": "#/components/schemas/DistanceExpression"
          },
          "to": {
            "$ref": "#/components/schemas/DistanceExpression"
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the LinearRange DataContract"
      },
      "ClassExt": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          }
        },
        "description": "Describes the members of the ClassExt DataContract"
      },
      "ActivityTypeSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isAutoScheduled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTypeSetItem"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "hasData": {
            "type": "string",
            "nullable": true
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ActivityTypeSet DataContract"
      },
      "ActivityTypeSetItem": {
        "type": "object",
        "properties": {
          "activityTypeSet": {
            "$ref": "#/components/schemas/ActivityTypeSet"
          },
          "lineItem": {
            "$ref": "#/components/schemas/AttributeDomain"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the ActivityTypeSetItem DataContract"
      },
      "AttributeDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "inherited": {
            "type": "boolean"
          },
          "ruleType": {
            "type": "string",
            "nullable": true
          },
          "sourceObject": {
            "$ref": "#/components/schemas/Object"
          },
          "controlledBy": {
            "type": "string",
            "nullable": true
          },
          "include": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "lineItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTypeSetItem"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AttributeDomain DataContract"
      },
      "ClassActivityRule": {
        "type": "object",
        "properties": {
          "classActivity": {
            "$ref": "#/components/schemas/ClassActivity"
          },
          "ruleType": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          }
        },
        "description": "Describes the members of the ClassActivityRule DataContract"
      },
      "ClassActivity": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "activityType": {
            "$ref": "#/components/schemas/Object"
          },
          "modifiers": {
            "type": "integer",
            "format": "int32"
          },
          "baseActivityType": {
            "$ref": "#/components/schemas/Object"
          },
          "template": {
            "$ref": "#/components/schemas/Template"
          },
          "inherit": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "classActivityRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassActivityRule"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ClassActivity DataContract"
      },
      "VerticalMenu": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "menuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerticalMenuItem"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the VerticalMenu DataContract"
      },
      "VerticalMenuItem": {
        "type": "object",
        "properties": {
          "verticalMenu": {
            "$ref": "#/components/schemas/VerticalMenu"
          },
          "source": {
            "$ref": "#/components/schemas/Class"
          },
          "target": {
            "$ref": "#/components/schemas/Class"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the VerticalMenuItem DataContract"
      },
      "ClassRelationshipTypeClass": {
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/Class"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "right": {
            "$ref": "#/components/schemas/Class"
          }
        },
        "description": "Describes the members of the ClassRelationshipTypeClass DataContract"
      },
      "ClassRelationship": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "inherit": {
            "type": "boolean"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "isLinked": {
            "type": "boolean"
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the ClassRelationship DataContract"
      },
      "ClassRelationshipRule": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "leftClass": {
            "$ref": "#/components/schemas/Class"
          },
          "leftCardinalityMin": {
            "type": "integer",
            "format": "int32"
          },
          "leftCardinalityMax": {
            "type": "integer",
            "format": "int32"
          },
          "rightClass": {
            "$ref": "#/components/schemas/Class"
          },
          "rightCardinalityMin": {
            "type": "integer",
            "format": "int32"
          },
          "rightCardinalityMax": {
            "type": "integer",
            "format": "int32"
          },
          "ignoreRevisions": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the ClassRelationshipRule DataContract"
      },
      "ScheduleDefOwner": {
        "type": "object",
        "properties": {
          "scheduleDef": {
            "$ref": "#/components/schemas/ScheduleDef"
          },
          "owner": {
            "$ref": "#/components/schemas/Object"
          },
          "isAutoScheduled": {
            "type": "boolean"
          },
          "basedOnPrevious": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "attributeDomain": {
            "$ref": "#/components/schemas/AttributeDomain"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/Class"
          }
        },
        "description": "Describes the members of the ScheduleDefOwner DataContract"
      },
      "ScheduleDef": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "monthMask": {
            "type": "integer",
            "format": "int32"
          },
          "weekOfMonthMask": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeekMask": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "format": "int32"
          },
          "endDate": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "endTime": {
            "type": "integer",
            "format": "int32"
          },
          "excludedDates": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "yearInterval": {
            "type": "integer",
            "format": "int32"
          },
          "monthInterval": {
            "type": "integer",
            "format": "int32"
          },
          "weekInterval": {
            "type": "integer",
            "format": "int32"
          },
          "dayInterval": {
            "type": "integer",
            "format": "int32"
          },
          "occurrences": {
            "type": "integer",
            "format": "int32"
          },
          "timeIntervalType": {
            "type": "integer",
            "format": "int32"
          },
          "timeInterval": {
            "type": "integer",
            "format": "int32"
          },
          "frequencyType": {
            "type": "integer",
            "format": "int32"
          },
          "isSeasonal": {
            "type": "boolean"
          },
          "firstDayOfTheWeek": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "owners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDefOwner"
            },
            "nullable": true
          },
          "nextOccurrences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDef"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "isShared": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "nextOccurrence": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Describes the members of the ScheduleDef DataContract"
      },
      "RestrictionClass": {
        "type": "object",
        "properties": {
          "classGroup": {
            "$ref": "#/components/schemas/ClassGroup"
          },
          "parent": {
            "$ref": "#/components/schemas/Class"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supersededBy": {
            "$ref": "#/components/schemas/Class"
          },
          "accessModifier": {
            "type": "string",
            "nullable": true
          },
          "restrictionType": {
            "type": "integer",
            "format": "int32"
          },
          "limitType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "limitDatatype": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "promptFlags": {
            "type": "integer",
            "format": "int32"
          },
          "preventApprovalFlags": {
            "type": "integer",
            "format": "int32"
          },
          "ftr": {
            "type": "string",
            "nullable": true
          },
          "approvalProcess": {
            "$ref": "#/components/schemas/Template"
          },
          "isSyncTracked": {
            "type": "boolean"
          },
          "attributeGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeGroup"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassAttribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectLayout"
            },
            "nullable": true
          },
          "behaviors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBehavior"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Class"
            },
            "nullable": true
          },
          "ext": {
            "$ref": "#/components/schemas/ClassExt"
          },
          "attributeDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDomain"
            },
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassActivity"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMetadata"
            },
            "nullable": true
          },
          "menuItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerticalMenuItem"
            },
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Template"
            },
            "nullable": true
          },
          "automations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAutomation"
            },
            "nullable": true
          },
          "attributeDomainRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDomain"
            },
            "nullable": true
          },
          "relationshipTypeGraph": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassRelationshipTypeClass"
            },
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassRelationship"
            },
            "nullable": true
          },
          "relationshipRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassRelationshipRule"
            },
            "nullable": true
          },
          "groupedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassAttribute"
            },
            "nullable": true
          },
          "scheduleDefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDef"
            },
            "nullable": true
          },
          "activityTypeSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTypeSet"
            },
            "nullable": true
          },
          "attributeDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDependency"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the RestrictionClass DataContract"
      },
      "RestrictionTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "restriction": {
            "$ref": "#/components/schemas/Restriction"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the RestrictionTag DataContract"
      },
      "DocumentRestriction": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "restriction": {
            "$ref": "#/components/schemas/Restriction"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentRestriction DataContract"
      },
      "Geometry": {
        "type": "object",
        "properties": {
          "contentData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "contentFormat": {
            "type": "integer",
            "format": "int32"
          },
          "contentVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the Geometry DataContract"
      },
      "Restriction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "restrictionClass": {
            "$ref": "#/components/schemas/RestrictionClass"
          },
          "lowerLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "upperLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "limitUnit": {
            "$ref": "#/components/schemas/Unit"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "causeObject": {
            "$ref": "#/components/schemas/Object"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestrictionTag"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentRestriction"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "templateRef": {
            "$ref": "#/components/schemas/Template"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the Restriction DataContract"
      },
      "LinearLocationRestriction": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "linearLocation": {
            "$ref": "#/components/schemas/LinearLocation"
          },
          "restriction": {
            "$ref": "#/components/schemas/Restriction"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LinearLocationRestriction DataContract"
      },
      "LinearLocation": {
        "type": "object",
        "properties": {
          "locatedObject": {
            "$ref": "#/components/schemas/Object"
          },
          "jxp": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "linearRanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearRange"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocationRestriction"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the LinearLocation DataContract"
      },
      "ConditionCondition": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Condition"
          },
          "right": {
            "$ref": "#/components/schemas/Condition"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ConditionCondition DataContract"
      },
      "ConditionDocument": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "condition": {
            "$ref": "#/components/schemas/Condition"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ConditionDocument DataContract"
      },
      "ConditionTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "condition": {
            "$ref": "#/components/schemas/Condition"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ConditionTag DataContract"
      },
      "TaskCondition": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "condition": {
            "$ref": "#/components/schemas/Condition"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskCondition DataContract"
      },
      "Condition": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "revisionReason": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "appliesTo": {
            "$ref": "#/components/schemas/Object"
          },
          "priority": {
            "$ref": "#/components/schemas/ConditionPriority"
          },
          "dateDiscovered": {
            "type": "string",
            "format": "date-time"
          },
          "dateRequired": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionCondition"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionDocument"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionTag"
            },
            "nullable": true
          },
          "identifiedBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskCondition"
            },
            "nullable": true
          },
          "provisionalTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskCondition"
            },
            "nullable": true
          },
          "closingTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskCondition"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderCondition"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "prototypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prototype"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "revisionHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Condition"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "status": {
            "$ref": "#/components/schemas/ObjectState"
          },
          "isLatestRevision": {
            "type": "boolean"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultPricelist": {
            "$ref": "#/components/schemas/Pricelist"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isPrototype": {
            "type": "boolean"
          },
          "prototypeRef": {
            "$ref": "#/components/schemas/Prototype"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Condition DataContract"
      },
      "FolderCondition": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/Condition"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderCondition DataContract"
      },
      "VirtualItem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderVirtualItem"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualItemGroup"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isUsed": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the VirtualItem DataContract"
      },
      "FolderVirtualItem": {
        "type": "object",
        "properties": {
          "virtualItem": {
            "$ref": "#/components/schemas/VirtualItem"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderVirtualItem DataContract"
      },
      "DocumentProgram": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "program": {
            "$ref": "#/components/schemas/Program"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentProgram DataContract"
      },
      "ProgramPriority": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the ProgramPriority DataContract"
      },
      "ActivityReference": {
        "type": "object",
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/Object"
          },
          "reference": {
            "$ref": "#/components/schemas/Object"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the ActivityReference DataContract"
      },
      "ProgramItem": {
        "type": "object",
        "properties": {
          "program": {
            "$ref": "#/components/schemas/Program"
          },
          "priority": {
            "$ref": "#/components/schemas/ProgramPriority"
          },
          "activityType": {
            "$ref": "#/components/schemas/Object"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "isExcluded": {
            "type": "boolean"
          },
          "isRepeatable": {
            "type": "boolean"
          },
          "behavior": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityReference"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ProgramItem DataContract"
      },
      "Program": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultActivityType": {
            "$ref": "#/components/schemas/Object"
          },
          "plannedStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultItemBehavior": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentProgram"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderProgram"
            },
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityReference"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "hasData": {
            "type": "string",
            "nullable": true
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Program DataContract"
      },
      "FolderProgram": {
        "type": "object",
        "properties": {
          "program": {
            "$ref": "#/components/schemas/Program"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderProgram DataContract"
      },
      "Folder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDocument"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderFile"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderVirtualItemGroup"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderGroupedVirtualItem"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPerson"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderOrganization"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderLocation"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderSerializedItem"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPhysicalItem"
            },
            "nullable": true
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderReport"
            },
            "nullable": true
          },
          "autoFilingRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectDataset"
            },
            "nullable": true
          },
          "urlPages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrlPage"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Folder"
            },
            "nullable": true
          },
          "keyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyValue"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderEvent"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderTag"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderChangeRequest"
            },
            "nullable": true
          },
          "modifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderModification"
            },
            "nullable": true
          },
          "deviationWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDeviationWaiver"
            },
            "nullable": true
          },
          "distributionOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDistributionOrder"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderWorkOrder"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderWorkTask"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderTask"
            },
            "nullable": true
          },
          "transmittals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderTransmittal"
            },
            "nullable": true
          },
          "dispositionOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDispositionOrder"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "projectWiseItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItem"
            },
            "nullable": true
          },
          "syncScopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncScope"
            },
            "nullable": true
          },
          "pricelists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPricelist"
            },
            "nullable": true
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderContract"
            },
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderCondition"
            },
            "nullable": true
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderBudget"
            },
            "nullable": true
          },
          "taskOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderTaskOrder"
            },
            "nullable": true
          },
          "virtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderVirtualItem"
            },
            "nullable": true
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderProgram"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/Folder"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "hasData": {
            "type": "string",
            "nullable": true
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Folder DataContract"
      },
      "FolderReport": {
        "type": "object",
        "properties": {
          "report": {
            "$ref": "#/components/schemas/Report"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          }
        },
        "description": "Describes the members of the FolderReport DataContract"
      },
      "Report": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reportType": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "integer",
            "format": "int32"
          },
          "contentData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "contentVersion": {
            "type": "integer",
            "format": "int32"
          },
          "executeImmediate": {
            "type": "boolean"
          },
          "outObjectType": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "contexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "folderRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderReport"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderReport"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "extensionOf": {
            "$ref": "#/components/schemas/Report"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Report DataContract"
      },
      "ReportContext": {
        "type": "object",
        "properties": {
          "report": {
            "$ref": "#/components/schemas/Report"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "inheritedFrom": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "description": "Describes the members of the ReportContext DataContract"
      },
      "Interface": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "positionOffset": {
            "type": "integer",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "allowedLinks": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Interface DataContract"
      },
      "TagPosition": {
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "position": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "description": "Describes the members of the TagPosition DataContract"
      },
      "TagInstallableItemLubrication": {
        "type": "object",
        "properties": {
          "installableItem": {
            "$ref": "#/components/schemas/TagInstallableItem"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the TagInstallableItemLubrication DataContract"
      },
      "TagInstallableItem": {
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "manufItemNumber": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lubrications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagInstallableItemLubrication"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the TagInstallableItem DataContract"
      },
      "TagInstallableSerial": {
        "type": "object",
        "properties": {
          "installableItem": {
            "$ref": "#/components/schemas/TagInstallableItem"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          }
        },
        "description": "Describes the members of the TagInstallableSerial DataContract"
      },
      "TagInstalledSerialLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "parentSerializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "logDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCurrent": {
            "type": "string",
            "nullable": true
          },
          "qtyServiceable": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "qtyNotServiceable": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "qtyScrapped": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "qtyFitted": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Describes the members of the TagInstalledSerialLog DataContract"
      },
      "ObjectBaseline": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "description": "Describes the members of the ObjectBaseline DataContract"
      },
      "SetPoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "recordNumber": {
            "type": "integer",
            "format": "int32"
          },
          "setpoint": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tolerance": {
            "type": "string",
            "nullable": true
          },
          "resetDifferential": {
            "type": "string",
            "nullable": true
          },
          "onOffAction": {
            "type": "string",
            "nullable": true
          },
          "proportionalBand": {
            "type": "string",
            "nullable": true
          },
          "integral": {
            "type": "string",
            "nullable": true
          },
          "derivative": {
            "type": "string",
            "nullable": true
          },
          "proportionalAction": {
            "type": "string",
            "nullable": true
          },
          "lowInput": {
            "type": "number",
            "format": "double"
          },
          "lowInputUnits": {
            "type": "string",
            "nullable": true
          },
          "highInput": {
            "type": "number",
            "format": "double"
          },
          "highInputUnits": {
            "type": "string",
            "nullable": true
          },
          "lowOutput": {
            "type": "number",
            "format": "double"
          },
          "lowOutputUnits": {
            "type": "string",
            "nullable": true
          },
          "highOutput": {
            "type": "number",
            "format": "double"
          },
          "highOutputUnits": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the SetPoint DataContract"
      },
      "ChangeRequestTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestTag DataContract"
      },
      "DocumentTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentTag DataContract"
      },
      "EventTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventTag DataContract"
      },
      "GroupedVirtualItemTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemTag DataContract"
      },
      "LocationTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationTag DataContract"
      },
      "OrganizationTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationTag DataContract"
      },
      "PersonTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonTag DataContract"
      },
      "PhysicalItemTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PhysicalItemTag DataContract"
      },
      "ProjectTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectTag DataContract"
      },
      "SerializedItemTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the SerializedItemTag DataContract"
      },
      "SharePointItemTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the SharePointItemTag DataContract"
      },
      "ProjectWiseItemTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectWiseItemTag DataContract"
      },
      "TagVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the TagVirtualItemGroup DataContract"
      },
      "TagTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Tag"
          },
          "right": {
            "$ref": "#/components/schemas/Tag"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the TagTag DataContract"
      },
      "AffectedTag": {
        "type": "object",
        "properties": {
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "current": {
            "$ref": "#/components/schemas/Tag"
          },
          "isMovedForward": {
            "type": "boolean"
          },
          "isImplemented": {
            "type": "boolean"
          },
          "original": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "description": "Describes the members of the AffectedTag DataContract"
      },
      "TaskTag": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskTag DataContract"
      },
      "TagInstalledItemLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "installableItem": {
            "$ref": "#/components/schemas/TagInstallableItem"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "logDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCurrent": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the TagInstalledItemLog DataContract"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "primaryPhysicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean"
          },
          "operationalStatus": {
            "type": "string",
            "nullable": true
          },
          "function": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "alternativeNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeNumber"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "controlledObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ControlledObject"
            },
            "nullable": true
          },
          "crossReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            },
            "nullable": true
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interface"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagPosition"
            },
            "nullable": true
          },
          "prototypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prototype"
            },
            "nullable": true
          },
          "installableItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagInstallableItem"
            },
            "nullable": true
          },
          "installableSerials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagInstallableSerial"
            },
            "nullable": true
          },
          "installedSerials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagInstalledSerialLog"
            },
            "nullable": true
          },
          "baselines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBaseline"
            },
            "nullable": true
          },
          "setPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetPoint"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestrictionTag"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestTag"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTag"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventTag"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemTag"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationTag"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationTag"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonTag"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemTag"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTag"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItemTag"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharePointItemTag"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectTag"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagTag"
            },
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionTag"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "prototypeRef": {
            "$ref": "#/components/schemas/Prototype"
          },
          "affectedChangeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedTag"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderTag"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskTag"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTag"
            },
            "nullable": true
          },
          "installedItemHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagInstalledItemLog"
            },
            "nullable": true
          },
          "installedSerialHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagInstalledSerialLog"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderSerializedItem"
            },
            "nullable": true
          },
          "scheduleDefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDef"
            },
            "nullable": true
          },
          "activityTypeSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTypeSet"
            },
            "nullable": true
          },
          "revisionHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityReference"
            },
            "nullable": true
          },
          "conditionRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Condition"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "revisionSeq": {
            "type": "integer",
            "format": "int32"
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "stateHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLatestRevision": {
            "type": "boolean"
          },
          "isLatestApprovedRevision": {
            "type": "boolean"
          },
          "isUnderChange": {
            "type": "boolean"
          },
          "hasPendingChange": {
            "type": "boolean"
          },
          "isSuperseded": {
            "type": "boolean"
          },
          "installedItem": {
            "$ref": "#/components/schemas/TagInstalledItemLog"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isPrototype": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          },
          "parent": {
            "$ref": "#/components/schemas/Tag"
          },
          "root": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "description": "Describes the members of the Tag DataContract"
      },
      "ExternalObjectTag": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectTag DataContract"
      },
      "ExternalObjectVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectVirtualItemGroup DataContract"
      },
      "ExternalObjectExternalObject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "right": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ExternalObjectExternalObject DataContract"
      },
      "ExternalObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "syncOptions": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObject"
            },
            "nullable": true
          },
          "keyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyValue"
            },
            "nullable": true
          },
          "externalAttributeLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalAttributeLink"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "externalSystem": {
            "$ref": "#/components/schemas/ExternalSystem"
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestExternalObject"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentExternalObject"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventExternalObject"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectGroupedVirtualItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectLocation"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectOrganization"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectExternalObject"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dataSource": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "itemType": {
            "type": "integer",
            "format": "int32"
          },
          "system": {
            "type": "integer",
            "format": "int32"
          },
          "isExcluded": {
            "type": "boolean"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "isSynchronizing": {
            "type": "boolean"
          },
          "hints": {
            "type": "integer",
            "format": "int32"
          },
          "server": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ExternalObject DataContract"
      },
      "ExternalSystem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "onObjectAdding": {
            "type": "string",
            "nullable": true
          },
          "onObjectAdded": {
            "type": "string",
            "nullable": true
          },
          "onObjectDeleting": {
            "type": "string",
            "nullable": true
          },
          "onObjectDeleted": {
            "type": "string",
            "nullable": true
          },
          "onObjectChanging": {
            "type": "string",
            "nullable": true
          },
          "onObjectChanged": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObject"
            },
            "nullable": true
          },
          "attributeDefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalAttributeDef"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ExternalSystem DataContract"
      },
      "ExternalAttributeDef": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "systemScope": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "integer",
            "format": "int32"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "externalSystem": {
            "$ref": "#/components/schemas/ExternalSystem"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "description": "Describes the members of the ExternalAttributeDef DataContract"
      },
      "ExternalAttributeLink": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "externalAttributeDef": {
            "$ref": "#/components/schemas/ExternalAttributeDef"
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "direction": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the ExternalAttributeLink DataContract"
      },
      "ChangeRequestProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestProjectWiseItem DataContract"
      },
      "DocumentProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentProjectWiseItem DataContract"
      },
      "EventProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventProjectWiseItem DataContract"
      },
      "GroupedVirtualItemProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemProjectWiseItem DataContract"
      },
      "LocationProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationProjectWiseItem DataContract"
      },
      "OrganizationProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationProjectWiseItem DataContract"
      },
      "PersonProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonProjectWiseItem DataContract"
      },
      "PhysicalItemProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PhysicalItemProjectWiseItem DataContract"
      },
      "ProjectProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectProjectWiseItem DataContract"
      },
      "ProjectWiseItemSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectWiseItemSerializedItem DataContract"
      },
      "ProjectWiseItemVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectWiseItemVirtualItemGroup DataContract"
      },
      "ProjectWiseItemProjectWiseItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "right": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectWiseItemProjectWiseItem DataContract"
      },
      "ProjectWiseItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "syncOptions": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItem"
            },
            "nullable": true
          },
          "keyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyValue"
            },
            "nullable": true
          },
          "externalAttributeLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalAttributeLink"
            },
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "file": {
            "$ref": "#/components/schemas/File"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestProjectWiseItem"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentProjectWiseItem"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventProjectWiseItem"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemProjectWiseItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationProjectWiseItem"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationProjectWiseItem"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonProjectWiseItem"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemProjectWiseItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectProjectWiseItem"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemSharePointItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectProjectWiseItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemProjectWiseItem"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dataSource": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "itemType": {
            "type": "integer",
            "format": "int32"
          },
          "isExcluded": {
            "type": "boolean"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "isSynchronizing": {
            "type": "boolean"
          },
          "hints": {
            "type": "integer",
            "format": "int32"
          },
          "projectWiseId": {
            "type": "string",
            "nullable": true
          },
          "server": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ProjectWiseItem DataContract"
      },
      "ProjectWiseItemSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/ProjectWiseItem"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectWiseItemSharePointItem DataContract"
      },
      "SharePointItemVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the SharePointItemVirtualItemGroup DataContract"
      },
      "SharePointItemSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "right": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the SharePointItemSharePointItem DataContract"
      },
      "SharePointItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "keyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyValue"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestSharePointItem"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSharePointItem"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSharePointItem"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemSharePointItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationSharePointItem"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSharePointItem"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonSharePointItem"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemSharePointItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectSharePointItem"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItemSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemSharePointItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharePointItemTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharePointItemVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectSharePointItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharePointItemSharePointItem"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharePointItem"
            },
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "itemType": {
            "type": "integer",
            "format": "int32"
          },
          "isExcluded": {
            "type": "boolean"
          },
          "syncOptions": {
            "type": "integer",
            "format": "int32"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isSynchronizing": {
            "type": "boolean"
          },
          "hints": {
            "type": "integer",
            "format": "int32"
          },
          "sharePointId": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "file": {
            "$ref": "#/components/schemas/File"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "server": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "isTemplate": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the SharePointItem DataContract"
      },
      "SerializedItemSharePointItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/SharePointItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the SerializedItemSharePointItem DataContract"
      },
      "SerializedItemVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the SerializedItemVirtualItemGroup DataContract"
      },
      "SerializedItemSerializedItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "right": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the SerializedItemSerializedItem DataContract"
      },
      "TaskSerializedItem": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/SerializedItem"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskSerializedItem DataContract"
      },
      "SerializedItem": {
        "type": "object",
        "properties": {
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "batchQty": {
            "type": "number",
            "format": "double"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/Organization"
          },
          "manufItemNumber": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestSerializedItem"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSerializedItem"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSerializedItem"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemSerializedItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationSerializedItem"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSerializedItem"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonSerializedItem"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemSerializedItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItemSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemSerializedItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItemTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItemVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectSerializedItem"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItemSerializedItem"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "impactedDeviationWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverImpactedSerializedItem"
            },
            "nullable": true
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagInstalledSerialLog"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "impactedModifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModificationImpactedSerializedItem"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskSerializedItem"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderSerializedItem"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSerializedItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderSerializedItem"
            },
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityReference"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isUnderMod": {
            "type": "boolean"
          },
          "hasPendingMod": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the SerializedItem DataContract"
      },
      "Manufacturer": {
        "type": "object",
        "properties": {
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the Manufacturer DataContract"
      },
      "EquivalentPhysicalItem": {
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "equivalenceType": {
            "type": "string",
            "nullable": true
          },
          "right": {
            "$ref": "#/components/schemas/PhysicalItem"
          }
        },
        "description": "Describes the members of the EquivalentPhysicalItem DataContract"
      },
      "ChangeRequestPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestPhysicalItem DataContract"
      },
      "DocumentPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentPhysicalItem DataContract"
      },
      "EventPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventPhysicalItem DataContract"
      },
      "GroupedVirtualItemPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemPhysicalItem DataContract"
      },
      "LocationPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationPhysicalItem DataContract"
      },
      "OrganizationPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationPhysicalItem DataContract"
      },
      "PersonPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonPhysicalItem DataContract"
      },
      "PhysicalItemProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PhysicalItemProject DataContract"
      },
      "PhysicalItemPhysicalItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "right": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PhysicalItemPhysicalItem DataContract"
      },
      "AffectedPhysicalItem": {
        "type": "object",
        "properties": {
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "current": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "isMovedForward": {
            "type": "boolean"
          },
          "isImplemented": {
            "type": "boolean"
          },
          "original": {
            "$ref": "#/components/schemas/PhysicalItem"
          }
        },
        "description": "Describes the members of the AffectedPhysicalItem DataContract"
      },
      "TaskPhysicalItem": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskPhysicalItem DataContract"
      },
      "TaskItem": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "item": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "costPer": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "plannedCost": {
            "type": "number",
            "format": "double"
          },
          "actualCost": {
            "type": "number",
            "format": "double"
          },
          "plannedQuantity": {
            "type": "number",
            "format": "double"
          },
          "actualQuantity": {
            "type": "number",
            "format": "double"
          },
          "plannedMeasurement": {
            "$ref": "#/components/schemas/Measurement"
          },
          "actualMeasurement": {
            "$ref": "#/components/schemas/Measurement"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the TaskItem DataContract"
      },
      "PhysicalItem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "itemClass": {
            "type": "string",
            "nullable": true
          },
          "isSerialized": {
            "type": "boolean"
          },
          "isPhantom": {
            "type": "boolean"
          },
          "isMainEquipment": {
            "type": "boolean"
          },
          "isSoftware": {
            "type": "boolean"
          },
          "physicalItemType": {
            "$ref": "#/components/schemas/PhysicalItemType"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedDescription": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "dependantSerializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItem"
            },
            "nullable": true
          },
          "dependantTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          },
          "crossReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            },
            "nullable": true
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interface"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "manufacturers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Manufacturer"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "baselines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "equivalentPhysicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EquivalentPhysicalItem"
            },
            "nullable": true
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestPhysicalItem"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentPhysicalItem"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPhysicalItem"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemPhysicalItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPhysicalItem"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationPhysicalItem"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectPhysicalItem"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemPhysicalItem"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "affectedChangeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedPhysicalItem"
            },
            "nullable": true
          },
          "impactedDeviationWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverImpactedPhysicalItem"
            },
            "nullable": true
          },
          "impactedModifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModificationImpactedPhysicalItem"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskPhysicalItem"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderPhysicalItem"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskPhysicalItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPhysicalItem"
            },
            "nullable": true
          },
          "taskItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskItem"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "isUnderChange": {
            "type": "boolean"
          },
          "hasPendingChange": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the PhysicalItem DataContract"
      },
      "PhysicalItemVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PhysicalItemVirtualItemGroup DataContract"
      },
      "ProjectVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectVirtualItemGroup DataContract"
      },
      "VirtualItemGroupVirtualItemGroup": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "right": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the VirtualItemGroupVirtualItemGroup DataContract"
      },
      "TaskVirtualItemGroup": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskVirtualItemGroup DataContract"
      },
      "VirtualItemGroup": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "middle": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean"
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "synopsis": {
            "type": "string",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "affectedChangeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedVirtualItemGroup"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItem"
            },
            "nullable": true
          },
          "prototypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prototype"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestVirtualItemGroup"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentVirtualItemGroup"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventVirtualItemGroup"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemVirtualItemGroup"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationVirtualItemGroup"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationVirtualItemGroup"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonVirtualItemGroup"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemVirtualItemGroup"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectVirtualItemGroup"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerializedItemVirtualItemGroup"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharePointItemVirtualItemGroup"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItemVirtualItemGroup"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectVirtualItemGroup"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualItemGroupVirtualItemGroup"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskVirtualItemGroup"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderVirtualItemGroup"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskVirtualItemGroup"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderVirtualItemGroup"
            },
            "nullable": true
          },
          "revisionHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualItemGroup"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isUnderChange": {
            "type": "boolean"
          },
          "isCheckedOut": {
            "type": "boolean"
          },
          "isLatestRevision": {
            "type": "boolean"
          },
          "isLatestApprovedRevision": {
            "type": "boolean"
          },
          "isSuperseded": {
            "type": "boolean"
          },
          "hasPendingChange": {
            "type": "boolean"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isPrototype": {
            "type": "boolean"
          },
          "prototypeRef": {
            "$ref": "#/components/schemas/Prototype"
          },
          "ownerProject": {
            "$ref": "#/components/schemas/Project"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "crossReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the VirtualItemGroup DataContract"
      },
      "ChangeRequestGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestGroupedVirtualItem DataContract"
      },
      "DocumentGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentGroupedVirtualItem DataContract"
      },
      "EventGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventGroupedVirtualItem DataContract"
      },
      "GroupedVirtualItemLocation": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemLocation DataContract"
      },
      "GroupedVirtualItemOrganization": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemOrganization DataContract"
      },
      "GroupedVirtualItemPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemPerson DataContract"
      },
      "GroupedVirtualItemProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemProject DataContract"
      },
      "GroupedVirtualItemStructure": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "child": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemStructure DataContract"
      },
      "GroupedVirtualItemGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "right": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the GroupedVirtualItemGroupedVirtualItem DataContract"
      },
      "TaskGroupedVirtualItem": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskGroupedVirtualItem DataContract"
      },
      "GroupedVirtualItem": {
        "type": "object",
        "properties": {
          "virtualItemGroup": {
            "$ref": "#/components/schemas/VirtualItemGroup"
          },
          "virtualItem": {
            "$ref": "#/components/schemas/VirtualItem"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestGroupedVirtualItem"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentGroupedVirtualItem"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventGroupedVirtualItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemLocation"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemOrganization"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectGroupedVirtualItem"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemStructure"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemStructure"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemGroupedVirtualItem"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "crossReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderGroupedVirtualItem"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskGroupedVirtualItem"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskGroupedVirtualItem"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderGroupedVirtualItem"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the GroupedVirtualItem DataContract"
      },
      "ObjectTrend": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "trend": {
            "$ref": "#/components/schemas/GroupedVirtualItem"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "trendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the ObjectTrend DataContract"
      },
      "ChangeRequestEvent": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestEvent DataContract"
      },
      "DocumentEvent": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentEvent DataContract"
      },
      "EventOrganization": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventOrganization DataContract"
      },
      "EventPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventPerson DataContract"
      },
      "EventProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventProject DataContract"
      },
      "EventEvent": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Event"
          },
          "right": {
            "$ref": "#/components/schemas/Event"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventEvent DataContract"
      },
      "EventClosureObject": {
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "description": "Describes the members of the EventClosureObject DataContract"
      },
      "EventSuccessor": {
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/Event"
          },
          "right": {
            "$ref": "#/components/schemas/Event"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          }
        },
        "description": "Describes the members of the EventSuccessor DataContract"
      },
      "SupersedingEvent": {
        "type": "object",
        "description": "Describes the members of the SupersedingEvent DataContract"
      },
      "TaskEvent": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskEvent DataContract"
      },
      "RelationshipExternalObject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "relationship": {
            "$ref": "#/components/schemas/Relationship"
          },
          "externalObject": {
            "$ref": "#/components/schemas/ExternalObject"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the RelationshipExternalObject DataContract"
      },
      "Relationship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "left": {
            "$ref": "#/components/schemas/Object"
          },
          "right": {
            "$ref": "#/components/schemas/Object"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipExternalObject"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "templateRef": {
            "$ref": "#/components/schemas/Template"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Relationship DataContract"
      },
      "Event": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "trends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTrend"
            },
            "nullable": true
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestEvent"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentEvent"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventGroupedVirtualItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventLocation"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventOrganization"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventExternalObject"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventEvent"
            },
            "nullable": true
          },
          "deviationWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverEvent"
            },
            "nullable": true
          },
          "modifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventModification"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "closureObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventClosureObject"
            },
            "nullable": true
          },
          "crossReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "successors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSuccessor"
            },
            "nullable": true
          },
          "superseding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupersedingEvent"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderEvent"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskEvent"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderEvent"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "supersededBy": {
            "$ref": "#/components/schemas/Event"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskEvent"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Event DataContract"
      },
      "EventLocation": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the EventLocation DataContract"
      },
      "LocationOrganization": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationOrganization DataContract"
      },
      "LocationPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationPerson DataContract"
      },
      "LocationProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationProject DataContract"
      },
      "LocationLocation": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Location"
          },
          "right": {
            "$ref": "#/components/schemas/Location"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the LocationLocation DataContract"
      },
      "Location": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestLocation"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentLocation"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventLocation"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemLocation"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationOrganization"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectLocation"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationLocation"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true
          },
          "copies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCopy"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderLocation"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "parent": {
            "$ref": "#/components/schemas/Location"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "positionOnTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagPosition"
            },
            "nullable": true
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Location DataContract"
      },
      "MediaType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the MediaType DataContract"
      },
      "DocumentCopy": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "copyType": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "repositoryGroup": {
            "$ref": "#/components/schemas/RepositoryGroup"
          },
          "purpose": {
            "type": "integer",
            "format": "int32"
          },
          "mediaType": {
            "$ref": "#/components/schemas/MediaType"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "copyOf": {
            "$ref": "#/components/schemas/DocumentCopy"
          },
          "holders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItem"
            },
            "nullable": true
          },
          "dispositionItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DispositionItem"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCopyFile"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "isOnBackorder": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the DocumentCopy DataContract"
      },
      "ChangeRequestDocument": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestDocument DataContract"
      },
      "DocumentOrganization": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentOrganization DataContract"
      },
      "DocumentPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentPerson DataContract"
      },
      "DocumentProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentProject DataContract"
      },
      "DocumentDocument": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Document"
          },
          "right": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the DocumentDocument DataContract"
      },
      "DistributionListItem": {
        "type": "object",
        "properties": {
          "distributionList": {
            "$ref": "#/components/schemas/DistributionList"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "directoryEntry": {
            "$ref": "#/components/schemas/DirectoryEntry"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "preferredCopyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the DistributionListItem DataContract"
      },
      "DistributionList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionListItem"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestedDistribution"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the DistributionList DataContract"
      },
      "SuggestedDistribution": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "distributionList": {
            "$ref": "#/components/schemas/DistributionList"
          }
        },
        "description": "Describes the members of the SuggestedDistribution DataContract"
      },
      "SupersedingDocument": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/Document"
          },
          "to": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "description": "Describes the members of the SupersedingDocument DataContract"
      },
      "TaskDocument": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskDocument DataContract"
      },
      "NotificationDef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the NotificationDef DataContract"
      },
      "Subscriber": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "deliveryDef": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryAddress": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Subscriber DataContract"
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "notificationDef": {
            "$ref": "#/components/schemas/NotificationDef"
          },
          "subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Subscription DataContract"
      },
      "Answer": {
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/Question"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "requireComment": {
            "type": "boolean"
          },
          "displayAmount": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "trends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTrend"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Answer DataContract"
      },
      "Question": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isMasterQuestion": {
            "type": "boolean"
          },
          "isObsolete": {
            "type": "boolean"
          },
          "minAnswers": {
            "type": "integer",
            "format": "int32"
          },
          "maxAnswers": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "nullable": true
          },
          "trends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTrend"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "allowDuplicateAnswers": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Question DataContract"
      },
      "SurveyAnswer": {
        "type": "object",
        "properties": {
          "surveyQuestion": {
            "$ref": "#/components/schemas/SurveyQuestion"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "answer": {
            "$ref": "#/components/schemas/Answer"
          },
          "trends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTrend"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the SurveyAnswer DataContract"
      },
      "SurveyInstanceAnswer": {
        "type": "object",
        "properties": {
          "surveyInstance": {
            "$ref": "#/components/schemas/SurveyInstance"
          },
          "surveyAnswer": {
            "$ref": "#/components/schemas/SurveyAnswer"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the SurveyInstanceAnswer DataContract"
      },
      "SurveyQuestion": {
        "type": "object",
        "properties": {
          "surveySection": {
            "$ref": "#/components/schemas/SurveySection"
          },
          "question": {
            "$ref": "#/components/schemas/Question"
          },
          "sequenceName": {
            "type": "string",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyAnswer"
            },
            "nullable": true
          },
          "instanceAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyInstanceAnswer"
            },
            "nullable": true
          },
          "trends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTrend"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the SurveyQuestion DataContract"
      },
      "SurveySection": {
        "type": "object",
        "properties": {
          "survey": {
            "$ref": "#/components/schemas/Survey"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestion"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the SurveySection DataContract"
      },
      "Survey": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveySection"
            },
            "nullable": true
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyInstance"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Survey DataContract"
      },
      "TaskSurveyInstance": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "surveyInstance": {
            "$ref": "#/components/schemas/SurveyInstance"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskSurveyInstance DataContract"
      },
      "SurveyInstance": {
        "type": "object",
        "properties": {
          "survey": {
            "$ref": "#/components/schemas/Survey"
          },
          "control": {
            "$ref": "#/components/schemas/Object"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/Object"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyInstanceAnswer"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSurveyInstance"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the SurveyInstance DataContract"
      },
      "ProductStructureType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the ProductStructureType DataContract"
      },
      "AssemblyPositionPhysicalItem": {
        "type": "object",
        "properties": {
          "assemblyPosition": {
            "$ref": "#/components/schemas/AssemblyPosition"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "remark": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the AssemblyPositionPhysicalItem DataContract"
      },
      "AssemblyPosition": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "explode": {
            "type": "string",
            "nullable": true
          },
          "drgRef": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssemblyPositionPhysicalItem"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the AssemblyPosition DataContract"
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/PhysicalItem"
          },
          "productStructureType": {
            "$ref": "#/components/schemas/ProductStructureType"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssemblyPosition"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Assembly DataContract"
      },
      "Document": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "middle": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "changeControlled": {
            "type": "boolean"
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "synopsis": {
            "type": "string",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "affectedChangeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedDocument"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "prototypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prototype"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "changeHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentChangeHistory"
            },
            "nullable": true
          },
          "checkoutHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCheckoutHistory"
            },
            "nullable": true
          },
          "copies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCopy"
            },
            "nullable": true
          },
          "crossReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            },
            "nullable": true
          },
          "holders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItem"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "nullable": true
          },
          "pendingFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestDocument"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentEvent"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentGroupedVirtualItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentLocation"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentOrganization"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentExternalObject"
            },
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionDocument"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDocument"
            },
            "nullable": true
          },
          "deviationWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviationWaiverDocument"
            },
            "nullable": true
          },
          "modifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentModification"
            },
            "nullable": true
          },
          "budgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetDocument"
            },
            "nullable": true
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDocument"
            },
            "nullable": true
          },
          "taskOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTaskOrder"
            },
            "nullable": true
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentProgram"
            },
            "nullable": true
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentRestriction"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "prototypeRef": {
            "$ref": "#/components/schemas/Prototype"
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "revisionHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "suggestedDistributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestedDistribution"
            },
            "nullable": true
          },
          "superseding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupersedingDocument"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskDocument"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDocument"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderDocument"
            },
            "nullable": true
          },
          "fileplans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentFileplan"
            },
            "nullable": true
          },
          "projectWiseItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWiseItem"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDocument"
            },
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "nullable": true
          },
          "surveyInstanceRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyInstance"
            },
            "nullable": true
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "revisionSetId": {
            "type": "integer",
            "format": "int32"
          },
          "revisionSeqNo": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isUnderChange": {
            "type": "boolean"
          },
          "isCheckedOut": {
            "type": "boolean"
          },
          "isLatestRevision": {
            "type": "boolean"
          },
          "isLatestApprovedRevision": {
            "type": "boolean"
          },
          "isSuperseded": {
            "type": "boolean"
          },
          "hasPendingChange": {
            "type": "boolean"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isPrototype": {
            "type": "boolean"
          },
          "isSnapshot": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "currentCheckout": {
            "$ref": "#/components/schemas/DocumentCheckoutHistory"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "fileContainerOf": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          },
          "snapshotOf": {
            "$ref": "#/components/schemas/Object"
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          }
        },
        "description": "Describes the members of the Document DataContract"
      },
      "ObjectFileContainer": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "description": "Describes the members of the ObjectFileContainer DataContract"
      },
      "ChangeRequestPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestPerson DataContract"
      },
      "ChangeRequestProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestProject DataContract"
      },
      "ChangeRequestChangeRequest": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "right": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestChangeRequest DataContract"
      },
      "TaskChangeRequest": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "isSubjectData": {
            "type": "boolean"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskChangeRequest DataContract"
      },
      "ChangeProgress": {
        "type": "object",
        "properties": {
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "from": {
            "$ref": "#/components/schemas/Object"
          },
          "to": {
            "$ref": "#/components/schemas/Object"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prototype": {
            "$ref": "#/components/schemas/Prototype"
          }
        },
        "description": "Describes the members of the ChangeProgress DataContract"
      },
      "ChangeRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "requestedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "priority": {
            "$ref": "#/components/schemas/ChangeRequestPriority"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "dateRegistered": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateApprOrReject": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "apprOrRejectBy": {
            "$ref": "#/components/schemas/Person"
          },
          "apprOrRejectReason": {
            "type": "string",
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestDocument"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestEvent"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestGroupedVirtualItem"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestLocation"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestOrganization"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestExternalObject"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestChangeRequest"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "impactedModifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModificationImpactedChangeRequest"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOrderChangeRequest"
            },
            "nullable": true
          },
          "workTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTaskChangeRequest"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskChangeRequest"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "affectedDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedDocument"
            },
            "nullable": true
          },
          "affectedPhysicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedPhysicalItem"
            },
            "nullable": true
          },
          "affectedTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedTag"
            },
            "nullable": true
          },
          "affectedVirtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedVirtualItemGroup"
            },
            "nullable": true
          },
          "implementedDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedDocument"
            },
            "nullable": true
          },
          "implementedPhysicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedPhysicalItem"
            },
            "nullable": true
          },
          "implementedVirtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedVirtualItemGroup"
            },
            "nullable": true
          },
          "implementedTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedTag"
            },
            "nullable": true
          },
          "changeProgress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeProgress"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderChangeRequest"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "dateRequested": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ChangeRequest DataContract"
      },
      "ChangeRequestOrganization": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/ChangeRequest"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ChangeRequestOrganization DataContract"
      },
      "OrganizationPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationPerson DataContract"
      },
      "OrganizationProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationProject DataContract"
      },
      "OrganizationOrganization": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Organization"
          },
          "right": {
            "$ref": "#/components/schemas/Organization"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationOrganization DataContract"
      },
      "OrganizationMember": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "isContact": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "directoryEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryEntry"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the OrganizationMember DataContract"
      },
      "Organization": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "registrationNo": {
            "type": "string",
            "nullable": true
          },
          "taxNo": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestOrganization"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentOrganization"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventOrganization"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemOrganization"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationOrganization"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectOrganization"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationOrganization"
            },
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationMember"
            },
            "nullable": true
          },
          "expenditures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Expenditure"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "responsibleFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "directoryEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryEntry"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "manufacturerOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Manufacturer"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "projectRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderOrganization"
            },
            "nullable": true
          },
          "contractRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommercialContract"
            },
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "nullable": true
          },
          "subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriber"
            },
            "nullable": true
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Organization DataContract"
      },
      "PersonProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonProject DataContract"
      },
      "ProjectProject": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Project"
          },
          "right": {
            "$ref": "#/components/schemas/Project"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectProject DataContract"
      },
      "Project": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "responsibleOrg": {
            "$ref": "#/components/schemas/Organization"
          },
          "actualStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "taskOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskOrderProject"
            },
            "nullable": true
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestProject"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentProject"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventProject"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemProject"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationProject"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationProject"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonProject"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalItemProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectProject"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectProject"
            },
            "nullable": true
          },
          "workOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWorkOrder"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTask"
            },
            "nullable": true
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityReference"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "requestedDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItem"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderProject"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "hasData": {
            "type": "string",
            "nullable": true
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Project DataContract"
      },
      "ProjectTask": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the ProjectTask DataContract"
      },
      "TaskStructureRule": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/Task"
          },
          "child": {
            "$ref": "#/components/schemas/Task"
          },
          "ruleType": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "$ref": "#/components/schemas/Task"
          }
        },
        "description": "Describes the members of the TaskStructureRule DataContract"
      },
      "TaskPerson": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskPerson DataContract"
      },
      "NestedTaskTemplate": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "template": {
            "$ref": "#/components/schemas/Template"
          },
          "instantiateOption": {
            "type": "integer",
            "format": "int32"
          },
          "autoInstantiate": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the NestedTaskTemplate DataContract"
      },
      "Task": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/Object"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "skill": {
            "$ref": "#/components/schemas/Skill"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority"
          },
          "isOptional": {
            "type": "boolean"
          },
          "isDelegate": {
            "type": "boolean"
          },
          "isNestedTask": {
            "type": "boolean"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "planStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "behaviorFlags": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "delegatedTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            },
            "nullable": true
          },
          "delegatedFrom": {
            "$ref": "#/components/schemas/Task"
          },
          "mergeFrom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskStructure"
            },
            "nullable": true
          },
          "splitTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskStructure"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTask"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "taskOrderItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskOrderItem"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskChangeRequest"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDocument"
            },
            "nullable": true
          },
          "distributionOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDistributionOrder"
            },
            "nullable": true
          },
          "transmittals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTransmittal"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskEvent"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskGroupedVirtualItem"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskVirtualItemGroup"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            },
            "nullable": true
          },
          "modifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskModification"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskPhysicalItem"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSerializedItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTag"
            },
            "nullable": true
          },
          "automations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAutomation"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderTask"
            },
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskItem"
            },
            "nullable": true
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskCondition"
            },
            "nullable": true
          },
          "structureRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskStructureRule"
            },
            "nullable": true
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityReference"
            },
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "surveyInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSurveyInstance"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskPerson"
            },
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTemplate"
            },
            "nullable": true
          },
          "nestedTaskTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedTaskTemplate"
            },
            "nullable": true
          },
          "linearLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearLocation"
            },
            "nullable": true
          },
          "linearGeometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "nullable": true
          },
          "taskStatus": {
            "type": "string",
            "nullable": true
          },
          "allocationStatus": {
            "type": "string",
            "nullable": true
          },
          "reworkCount": {
            "type": "integer",
            "format": "int32"
          },
          "actStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "repairStatus": {
            "$ref": "#/components/schemas/ObjectState"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "hasData": {
            "type": "string",
            "nullable": true
          },
          "pendingRequest": {
            "type": "string",
            "nullable": true
          },
          "reworkTask": {
            "$ref": "#/components/schemas/Task"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "warningFlags": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "scheduledFrom": {
            "$ref": "#/components/schemas/ScheduleDef"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the Task DataContract"
      },
      "TaskTemplate": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "template": {
            "$ref": "#/components/schemas/Template"
          },
          "flag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Describes the members of the TaskTemplate DataContract"
      },
      "Template": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "codeMask": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "model": {
            "$ref": "#/components/schemas/Object"
          },
          "identGenFlag": {
            "type": "integer",
            "format": "int32"
          },
          "isPrototype": {
            "type": "boolean"
          },
          "codeMaskExpression": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "usageFlags": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "revisionRule": {
            "$ref": "#/components/schemas/RevisionRule"
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectLayout"
            },
            "nullable": true
          },
          "behaviors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBehavior"
            },
            "nullable": true
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateInstance"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "automations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAutomation"
            },
            "nullable": true
          },
          "snapshotDef": {
            "$ref": "#/components/schemas/SnapshotDef"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTemplate"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Template DataContract"
      },
      "ClassGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectLayout"
            },
            "nullable": true
          },
          "behaviors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBehavior"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "attributeDomainSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDomainSource"
            },
            "nullable": true
          },
          "attributeDefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDef"
            },
            "nullable": true
          },
          "classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Class"
            },
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Template"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the ClassGroup DataContract"
      },
      "Class": {
        "type": "object",
        "properties": {
          "classGroup": {
            "$ref": "#/components/schemas/ClassGroup"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accessModifier": {
            "type": "string",
            "nullable": true
          },
          "isSyncTracked": {
            "type": "boolean"
          },
          "promptFlags": {
            "type": "integer",
            "format": "int32"
          },
          "preventApprovalFlags": {
            "type": "integer",
            "format": "int32"
          },
          "approvalProcess": {
            "$ref": "#/components/schemas/Template"
          },
          "supersededBy": {
            "$ref": "#/components/schemas/Class"
          },
          "parent": {
            "$ref": "#/components/schemas/Class"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassAttribute"
            },
            "nullable": true
          },
          "attributeDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDependency"
            },
            "nullable": true
          },
          "groupedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassAttribute"
            },
            "nullable": true
          },
          "attributeGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeGroup"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Class"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectLayout"
            },
            "nullable": true
          },
          "behaviors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBehavior"
            },
            "nullable": true
          },
          "attributeDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDomain"
            },
            "nullable": true
          },
          "metaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMetadata"
            },
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassActivity"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Template"
            },
            "nullable": true
          },
          "automations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAutomation"
            },
            "nullable": true
          },
          "menuItemRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerticalMenuItem"
            },
            "nullable": true
          },
          "attributeDomainRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDomain"
            },
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassRelationship"
            },
            "nullable": true
          },
          "relationshipRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassRelationshipRule"
            },
            "nullable": true
          },
          "relationshipTypeGraph": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClassRelationshipTypeClass"
            },
            "nullable": true
          },
          "scheduleDefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDef"
            },
            "nullable": true
          },
          "activityTypeSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTypeSet"
            },
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "ftr": {
            "type": "string",
            "nullable": true
          },
          "ext": {
            "$ref": "#/components/schemas/ClassExt"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the Class DataContract"
      },
      "RolePerson": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the RolePerson DataContract"
      },
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sysType": {
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "parent": {
            "$ref": "#/components/schemas/Role"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePerson"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "securityRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Role DataContract"
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          }
        },
        "description": "Describes the members of the RolePermission DataContract"
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "section": {
            "type": "integer",
            "format": "int32"
          },
          "restrictToGlobalScope": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPermission"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Permission DataContract"
      },
      "PersonPermission": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          }
        },
        "description": "Describes the members of the PersonPermission DataContract"
      },
      "SettingCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the SettingCategory DataContract"
      },
      "Intent": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Intent DataContract"
      },
      "SettingDef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/SettingDef"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingDef"
            },
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/SettingCategory"
          },
          "objectType": {
            "type": "integer",
            "format": "int32"
          },
          "dataType": {
            "type": "integer",
            "format": "int32"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "isManaged": {
            "type": "boolean"
          },
          "isBrowsable": {
            "type": "boolean"
          },
          "intent": {
            "$ref": "#/components/schemas/Intent"
          }
        },
        "description": "Describes the members of the SettingDef DataContract"
      },
      "Setting": {
        "type": "object",
        "properties": {
          "settingDef": {
            "$ref": "#/components/schemas/SettingDef"
          },
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "isInherited": {
            "type": "string",
            "nullable": true
          },
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "integerValue": {
            "type": "integer",
            "format": "int32"
          },
          "dateValue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "longStringValue": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "blobValue": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "decimalValue": {
            "type": "number",
            "format": "double"
          },
          "value": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "description": "Describes the members of the Setting DataContract"
      },
      "PersonSkill": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "skill": {
            "$ref": "#/components/schemas/Skill"
          }
        },
        "description": "Describes the members of the PersonSkill DataContract"
      },
      "UserAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "dbfpc": {
            "type": "integer",
            "format": "int32"
          },
          "intrusionCount": {
            "type": "integer",
            "format": "int32"
          },
          "graceLogins": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "claimIssuer": {
            "type": "string",
            "nullable": true
          },
          "claimType": {
            "type": "string",
            "nullable": true
          },
          "claimValue": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the UserAccount DataContract"
      },
      "PersonPerson": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          },
          "left": {
            "$ref": "#/components/schemas/Person"
          },
          "right": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "instanceOf": {
            "$ref": "#/components/schemas/Template"
          }
        },
        "description": "Describes the members of the PersonPerson DataContract"
      },
      "ScopeInvite": {
        "type": "object",
        "properties": {
          "invitedToScope": {
            "$ref": "#/components/schemas/Scope"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ScopeInvite DataContract"
      },
      "Person": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "initial": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "nationalId": {
            "type": "string",
            "nullable": true
          },
          "additionalCode": {
            "type": "string",
            "nullable": true
          },
          "securityRefNo": {
            "type": "string",
            "nullable": true
          },
          "securityExpDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "directoryEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryEntry"
            },
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPermission"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePerson"
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Setting"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonSkill"
            },
            "nullable": true
          },
          "userAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAccount"
            },
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectSnapshot"
            },
            "nullable": true
          },
          "changeRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestPerson"
            },
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentPerson"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPerson"
            },
            "nullable": true
          },
          "groupedVirtualItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedVirtualItemPerson"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPerson"
            },
            "nullable": true
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationPerson"
            },
            "nullable": true
          },
          "physicalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPhysicalItem"
            },
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonProject"
            },
            "nullable": true
          },
          "serializedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonSerializedItem"
            },
            "nullable": true
          },
          "sharePointItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonSharePointItem"
            },
            "nullable": true
          },
          "projectWiseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonProjectWiseItem"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonTag"
            },
            "nullable": true
          },
          "virtualItemGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonVirtualItemGroup"
            },
            "nullable": true
          },
          "externalObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalObjectPerson"
            },
            "nullable": true
          },
          "persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonPerson"
            },
            "nullable": true
          },
          "memberOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationMember"
            },
            "nullable": true
          },
          "copyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CopyOption"
            },
            "nullable": true
          },
          "responsibleFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "documentsHeld": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionItem"
            },
            "nullable": true
          },
          "assignedWorkTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTask"
            },
            "nullable": true
          },
          "locksHeld": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectLock"
            },
            "nullable": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskPerson"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "scopeInvites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeInvite"
            },
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderPerson"
            },
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "nullable": true
          },
          "subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriber"
            },
            "nullable": true
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "hasFlags": {
            "type": "integer",
            "format": "int64"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "modelOf": {
            "$ref": "#/components/schemas/Template"
          },
          "securityRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "rootFolder": {
            "$ref": "#/components/schemas/Folder"
          },
          "basketFolder": {
            "$ref": "#/components/schemas/Folder"
          },
          "temporaryFileContainer": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "description": "Describes the members of the Person DataContract"
      },
      "Namespace": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Namespace DataContract"
      },
      "ScopeService": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "service": {
            "$ref": "#/components/schemas/ServiceDefinition"
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Setting"
            },
            "nullable": true
          },
          "calculatedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyValue"
            },
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "Describes the members of the ScopeService DataContract"
      },
      "Scope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/Object"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Scope"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "nullable": true
          },
          "invites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeInvite"
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Setting"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeService"
            },
            "nullable": true
          },
          "syncScopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncScope"
            },
            "nullable": true
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/Scope"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "usedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "usageCount": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "hasData": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Describes the members of the Scope DataContract"
      },
      "AttributeSecurity": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "principal": {
            "$ref": "#/components/schemas/Object"
          },
          "permission": {
            "type": "integer",
            "format": "int32"
          },
          "isSelfOrMember": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the AttributeSecurity DataContract"
      },
      "SettingSecurity": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "settingDef": {
            "$ref": "#/components/schemas/SettingDef"
          },
          "principal": {
            "$ref": "#/components/schemas/Object"
          },
          "permission": {
            "type": "integer",
            "format": "int32"
          },
          "isSelfOrMember": {
            "type": "boolean"
          }
        },
        "description": "Describes the members of the SettingSecurity DataContract"
      },
      "ObjectBlob": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "blobValue": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "description": "Describes the members of the ObjectBlob DataContract"
      },
      "Object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "versionOrMiddle": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          },
          "intent": {
            "$ref": "#/components/schemas/Intent"
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "flags": {
            "type": "integer",
            "format": "int64"
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean"
          },
          "permissionHint": {
            "type": "integer",
            "format": "int32"
          },
          "stateHint": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedBy": {
            "$ref": "#/components/schemas/Person"
          },
          "lock": {
            "$ref": "#/components/schemas/ObjectLock"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectKeyword"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "nullable": true
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            },
            "nullable": true
          },
          "crossReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            },
            "nullable": true
          },
          "auditDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditDetail"
            },
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Setting"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          },
          "securities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Security"
            },
            "nullable": true
          },
          "attributeSecurities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeSecurity"
            },
            "nullable": true
          },
          "settingSecurities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingSecurity"
            },
            "nullable": true
          },
          "fileContainer": {
            "$ref": "#/components/schemas/ObjectFileContainer"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "nullable": true
          },
          "subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriber"
            },
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isPrototype": {
            "type": "boolean"
          },
          "trends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectTrend"
            },
            "nullable": true
          },
          "attributeDomainSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDomainSource"
            },
            "nullable": true
          },
          "automations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectAutomation"
            },
            "nullable": true
          },
          "layouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectLayout"
            },
            "nullable": true
          },
          "blobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBlob"
            },
            "nullable": true
          },
          "behaviors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectBehavior"
            },
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "contextualReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportContext"
            },
            "nullable": true
          },
          "inheritanceHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdinalObject"
            },
            "nullable": true
          },
          "relationshipGraph": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parent": {
            "$ref": "#/components/schemas/Object"
          },
          "root": {
            "$ref": "#/components/schemas/Object"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Object"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Object DataContract"
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/Object"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/AttributeDef"
          },
          "rowId": {
            "type": "integer",
            "format": "int32"
          },
          "columnId": {
            "type": "integer",
            "format": "int32"
          },
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "dateTimeValue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "decimalValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longStringValue": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "objectValue": {
            "$ref": "#/components/schemas/Object"
          },
          "geometryValue": {
            "$ref": "#/components/schemas/Geometry"
          },
          "isLinked": {
            "type": "boolean"
          },
          "mayModify": {
            "type": "boolean"
          },
          "valueDescription": {
            "type": "string",
            "nullable": true
          },
          "attributeUnit": {
            "$ref": "#/components/schemas/AttributeUnit"
          },
          "dateEffective": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "attributeUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeUnit"
            },
            "nullable": true
          }
        },
        "description": "Describes the members of the Attribute DataContract"
      },
      "ExternalObjectPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "syncOptions": {
            "type": "integer",
            "description": "Gets or Sets the value of the SyncOptions property",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "Gets or Sets the value of the ExternalId property",
            "format": "uuid"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "uri": {
            "type": "string",
            "description": "Gets or Sets the value of the Uri property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "description": "Gets or Sets the value of the Attributes property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgExternalObject(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectExternalObjectPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectExternalObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ExternalObjectGroupedVirtualItemPost": {
        "required": [
          "externalObject",
          "groupedVirtualItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ExternalObjectGroupedVirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ClassPatch": {
        "required": [
          "accessModifier",
          "code",
          "description",
          "isSyncTracked",
          "name",
          "sysType"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property"
          },
          "promptFlags": {
            "type": "integer",
            "description": "Gets or Sets the value of the PromptFlags property",
            "format": "int32"
          },
          "preventApprovalFlags": {
            "type": "integer",
            "description": "Gets or Sets the value of the PreventApprovalFlags property",
            "format": "int32"
          },
          "approvalProcess": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "accessModifier": {
            "type": "string",
            "description": "Gets or Sets the value of the AccessModifier property"
          },
          "isSyncTracked": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSyncTracked property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Class required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgClass(System.String,System.Int32,System.String,System.String,System.String,System.DateTime,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "ClassActivityPost": {
        "required": [
          "activityType",
          "baseActivityType",
          "class",
          "inherit",
          "modifiers"
        ],
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "activityType": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "modifiers": {
            "type": "integer",
            "description": "Gets or Sets the value of the Modifiers property",
            "format": "int32"
          },
          "baseActivityType": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "template": {
            "$ref": "#/components/schemas/IdPost"
          },
          "inherit": {
            "type": "boolean",
            "description": "Gets or Sets the value of the Inherit property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassActivity required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddClassActivity(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "ClassActivityPatch": {
        "required": [
          "inherit"
        ],
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "inherit": {
            "type": "boolean",
            "description": "Gets or Sets the value of the Inherit property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassActivity required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgClassActivity(System.String,System.Int32,System.Int32,System.String)"
      },
      "ClassActivityRulePost": {
        "required": [
          "classActivity",
          "ruleType"
        ],
        "type": "object",
        "properties": {
          "classActivity": {
            "$ref": "#/components/schemas/IdPost"
          },
          "ruleType": {
            "type": "string",
            "description": "Gets or Sets the value of the RuleType property"
          },
          "state": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassActivityRule required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddClassActivityRule(System.String,System.Int32,System.String,System.Int32)"
      },
      "ClassAttributePost": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "inherit": {
            "type": "boolean",
            "description": "Gets or Sets the value of the Inherit property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassAttribute required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddClassAttribute(System.String,System.Int32,System.Int32,System.Boolean,System.Int32)"
      },
      "ClassAttributePatch": {
        "type": "object",
        "properties": {
          "inherit": {
            "type": "boolean",
            "description": "Gets or Sets the value of the Inherit property"
          },
          "dataTypeConstraints": {
            "type": "integer",
            "description": "Gets or Sets the value of the DataTypeConstraints property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassAttribute required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgClassAttribute(System.String,System.Int32,System.Boolean,System.Int32,System.Int32)"
      },
      "ClassRelationshipPost": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "inherit": {
            "type": "boolean",
            "description": "Gets or Sets the value of the Inherit property"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMandatory property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassRelationship required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddClassRelationship(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "ClassRelationshipPatch": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "inherit": {
            "type": "boolean",
            "description": "Gets or Sets the value of the Inherit property"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMandatory property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassRelationship required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgClassRelationship(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "ClassRelationshipRulePost": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "leftClass": {
            "$ref": "#/components/schemas/IdPost"
          },
          "leftCardinalityMin": {
            "type": "integer",
            "description": "Gets or Sets the value of the LeftCardinalityMin property",
            "format": "int32"
          },
          "leftCardinalityMax": {
            "type": "integer",
            "description": "Gets or Sets the value of the LeftCardinalityMax property",
            "format": "int32"
          },
          "rightClass": {
            "$ref": "#/components/schemas/IdPost"
          },
          "rightCardinalityMin": {
            "type": "integer",
            "description": "Gets or Sets the value of the RightCardinalityMin property",
            "format": "int32"
          },
          "rightCardinalityMax": {
            "type": "integer",
            "description": "Gets or Sets the value of the RightCardinalityMax property",
            "format": "int32"
          },
          "ignoreRevisions": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IgnoreRevisions property"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassRelationshipRule required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddClassRelationshipRule(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)"
      },
      "ClassRelationshipRulePatch": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "leftClass": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "leftCardinalityMin": {
            "type": "integer",
            "description": "Gets or Sets the value of the LeftCardinalityMin property",
            "format": "int32"
          },
          "leftCardinalityMax": {
            "type": "integer",
            "description": "Gets or Sets the value of the LeftCardinalityMax property",
            "format": "int32"
          },
          "rightClass": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "rightCardinalityMin": {
            "type": "integer",
            "description": "Gets or Sets the value of the RightCardinalityMin property",
            "format": "int32"
          },
          "rightCardinalityMax": {
            "type": "integer",
            "description": "Gets or Sets the value of the RightCardinalityMax property",
            "format": "int32"
          },
          "ignoreRevisions": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IgnoreRevisions property"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ClassRelationshipRule required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgClassRelationshipRule(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)"
      },
      "CodeAssemblyPost": {
        "required": [
          "assemblyType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "assemblyType": {
            "type": "integer",
            "description": "Gets or Sets the value of the AssemblyType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CodeAssembly required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAssemblyInfo(System.String,System.String,System.String,System.Int32)"
      },
      "CodeAssemblyPatch": {
        "required": [
          "assemblyType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "assemblyType": {
            "type": "integer",
            "description": "Gets or Sets the value of the AssemblyType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CodeAssembly required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAssemblyInfo(System.String,System.Int32,System.String,System.String,System.Int32)"
      },
      "CommercialContractPost": {
        "required": [
          "allowCostCategories",
          "approvalStatus",
          "class",
          "code",
          "contractor",
          "description",
          "endDate",
          "name",
          "pricelistItemsOnly",
          "remark",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property"
          },
          "contractor": {
            "$ref": "#/components/schemas/IdPost"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "startDate": {
            "type": "string",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "date-time"
          },
          "pricelistItemsOnly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the PricelistItemsOnly property"
          },
          "allowCostCategories": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowCostCategories property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CommercialContract required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddContract(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime,System.String,System.String)"
      },
      "CommercialContractPatch": {
        "required": [
          "allowCostCategories",
          "approvalStatus",
          "class",
          "code",
          "contractor",
          "description",
          "endDate",
          "name",
          "pricelistItemsOnly",
          "remark",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property"
          },
          "contractor": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "startDate": {
            "type": "string",
            "description": "Gets or Sets the value of the StartDate property",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Gets or Sets the value of the EndDate property",
            "format": "date-time"
          },
          "pricelistItemsOnly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the PricelistItemsOnly property"
          },
          "allowCostCategories": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AllowCostCategories property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CommercialContract required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgContract(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime,System.String,System.String)"
      },
      "ConditionPost": {
        "required": [
          "class",
          "code",
          "dateDiscovered",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "revisionReason": {
            "type": "string",
            "description": "Gets or Sets the value of the RevisionReason property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "dateDiscovered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateDiscovered property",
            "format": "date-time"
          },
          "dateRequired": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRequired property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Condition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddCondition(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)"
      },
      "ConditionPatch": {
        "required": [
          "class",
          "code",
          "dateDiscovered",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "revisionReason": {
            "type": "string",
            "description": "Gets or Sets the value of the RevisionReason property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "appliesTo": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "dateDiscovered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateDiscovered property",
            "format": "date-time"
          },
          "dateRequired": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRequired property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Condition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgCondition(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)"
      },
      "ConditionConditionPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ConditionCondition required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ConditionDocumentPost": {
        "required": [
          "condition",
          "document",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "condition": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ConditionDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ConditionTagPost": {
        "required": [
          "condition",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "condition": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ConditionTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ContractDocumentPost": {
        "required": [
          "contract",
          "document",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "contract": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ContractDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ContractItemPost": {
        "type": "object",
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/IdPost"
          },
          "pricelistItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "item": {
            "$ref": "#/components/schemas/IdPost"
          },
          "price": {
            "type": "number",
            "description": "Gets or Sets the value of the Price property",
            "format": "double"
          },
          "minimumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MinimumQuantity property",
            "format": "double"
          },
          "maximumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MaximumQuantity property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ContractItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddContractItem(System.String,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal)"
      },
      "ContractItemPatch": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "price": {
            "type": "number",
            "description": "Gets or Sets the value of the Price property",
            "format": "double"
          },
          "minimumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MinimumQuantity property",
            "format": "double"
          },
          "maximumQuantity": {
            "type": "number",
            "description": "Gets or Sets the value of the MaximumQuantity property",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ContractItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgContractItem(System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Decimal)"
      },
      "ControlledObjectPost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "refObject": {
            "$ref": "#/components/schemas/IdTypePost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ControlledObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddControlledObject(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "ControlledObjectPatch": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "refObject": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "seqNo": {
            "type": "integer",
            "description": "Gets or Sets the value of the SeqNo property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ControlledObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgControlledObject(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "CopyPackagePost": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CopyPackage required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddCopyPackage(System.String,System.String,System.String,System.String)"
      },
      "CopyPackagePatch": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CopyPackage required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgCopyPackage(System.String,System.Int32,System.String,System.String,System.String)"
      },
      "CopyPackageItemPost": {
        "type": "object",
        "properties": {
          "copyPackage": {
            "$ref": "#/components/schemas/IdPost"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "options": {
            "type": "string",
            "description": "Gets or Sets the value of the Options property",
            "nullable": true
          },
          "mask": {
            "type": "string",
            "description": "Gets or Sets the value of the Mask property",
            "nullable": true
          },
          "destinationObject": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CopyPackageItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddCopyPackageItem(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "CopyPackageItemPatch": {
        "type": "object",
        "properties": {
          "copyPackage": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "options": {
            "type": "string",
            "description": "Gets or Sets the value of the Options property",
            "nullable": true
          },
          "mask": {
            "type": "string",
            "description": "Gets or Sets the value of the Mask property",
            "nullable": true
          },
          "destinationObject": {
            "$ref": "#/components/schemas/IdPatch"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CopyPackageItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgCopyPackageItem(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)"
      },
      "CostCategoryPost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CostCategory required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddCostCategory(System.String,System.String,System.String)"
      },
      "CostCategoryPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CostCategory required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgCostCategory(System.String,System.Int32,System.String,System.String)"
      },
      "CrossReferencePost": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "crossReferenceType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "number": {
            "type": "string",
            "description": "Gets or Sets the value of the Number property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CrossReference required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddObjectXref(System.String,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "CrossReferencePatch": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "crossReferenceType": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "number": {
            "type": "string",
            "description": "Gets or Sets the value of the Number property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CrossReference required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgObjectXref(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)"
      },
      "CrossReferenceTypePost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CrossReferenceType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddXrefId(System.String,System.String)"
      },
      "CrossReferenceTypePatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.CrossReferenceType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgXrefId(System.String,System.Int32,System.String)"
      },
      "DeviationWaiverPost": {
        "required": [
          "code",
          "description",
          "reason"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "requestedBy": {
            "$ref": "#/components/schemas/IdPost"
          },
          "deviatingPhysicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "type": "string",
            "description": "Gets or Sets the value of the Priority property",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property",
            "nullable": true
          },
          "dateRegistered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRegistered property",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "reason": {
            "type": "string",
            "description": "Gets or Sets the value of the Reason property"
          },
          "deviatingDocument": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiver required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDeviation(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.String,System.String,System.Int32)"
      },
      "DeviationWaiverPatch": {
        "required": [
          "code",
          "description",
          "reason"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "requestedBy": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "deviatingPhysicalItem": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "type": "string",
            "description": "Gets or Sets the value of the Priority property",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property",
            "nullable": true
          },
          "dateRegistered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRegistered property",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "reason": {
            "type": "string",
            "description": "Gets or Sets the value of the Reason property"
          },
          "deviatingDocument": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiver required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDeviation(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.Int32)"
      },
      "DeviationWaiverDocumentPost": {
        "required": [
          "deviationWaiver",
          "document",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "deviationWaiver": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiverDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DeviationWaiverEventPost": {
        "required": [
          "deviationWaiver",
          "event",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "deviationWaiver": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiverEvent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DeviationWaiverImpactedPhysicalItemPost": {
        "type": "object",
        "properties": {
          "deviationWaiver": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "quantity": {
            "type": "integer",
            "description": "Gets or Sets the value of the Quantity property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiverImpactedPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDeviationItem(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "DeviationWaiverImpactedSerializedItemPost": {
        "type": "object",
        "properties": {
          "deviationWaiver": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiverImpactedSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDeviationSerial(System.String,System.Int32,System.Int32)"
      },
      "DeviationWaiverPhysicalItemPost": {
        "required": [
          "deviationWaiver",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "deviationWaiver": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiverPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DeviationWaiverSerializedItemPost": {
        "required": [
          "deviationWaiver",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "deviationWaiver": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DeviationWaiverSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "DimensionPost": {
        "required": [
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "derivation": {
            "type": "string",
            "description": "Gets or Sets the value of the Derivation property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Dimension required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDimension(System.String,System.String,System.String,System.String,System.String)"
      },
      "DimensionPatch": {
        "required": [
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "derivation": {
            "type": "string",
            "description": "Gets or Sets the value of the Derivation property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Dimension required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDimension(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "DirectoryEntryPost": {
        "required": [
          "body",
          "directoryEntryType",
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "directoryEntryType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "body": {
            "type": "string",
            "description": "Gets or Sets the value of the Body property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DirectoryEntry required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDirEntry(System.String,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "DirectoryEntryPatch": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "Gets or Sets the value of the Body property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DirectoryEntry required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDirEntry(System.String,System.Int32,System.String)"
      },
      "DirectoryEntryTypePost": {
        "required": [
          "name",
          "sysType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DirectoryEntryType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDirType(System.String,System.String,System.String)"
      },
      "DirectoryEntryTypePatch": {
        "required": [
          "name",
          "sysType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DirectoryEntryType required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDirType(System.String,System.Int32,System.String,System.String)"
      },
      "DispositionItemPost": {
        "type": "object",
        "properties": {
          "dispositionOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "documentCopy": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DispositionItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDispositionItem(System.String,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "DispositionOrderPost": {
        "required": [
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/IdPost"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DispositionOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDispositionOrder(System.String,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "DispositionOrderPatch": {
        "required": [
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DispositionOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDispositionOrder(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "DistributionListPost": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionList required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDistribList(System.String,System.String)"
      },
      "DistributionListPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionList required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDistribList(System.String,System.Int32,System.String)"
      },
      "DistributionOrderPost": {
        "required": [
          "code",
          "returnAddress"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "dateReceived": {
            "type": "string",
            "description": "Gets or Sets the value of the DateReceived property",
            "format": "date-time",
            "nullable": true
          },
          "returnAddress": {
            "$ref": "#/components/schemas/IdPost"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "defaultReason": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDocIssueOrder(System.String,System.String,System.DateTime,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32)"
      },
      "DistributionOrderPatch": {
        "required": [
          "code",
          "returnAddress"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "dateReceived": {
            "type": "string",
            "description": "Gets or Sets the value of the DateReceived property",
            "format": "date-time",
            "nullable": true
          },
          "returnAddress": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "defaultReason": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "issueDueDate": {
            "type": "string",
            "description": "Gets or Sets the value of the IssueDueDate property",
            "format": "date-time",
            "nullable": true
          },
          "issueDueDays": {
            "type": "integer",
            "description": "Gets or Sets the value of the IssueDueDays property",
            "format": "int32"
          },
          "acknowledgeDueDate": {
            "type": "string",
            "description": "Gets or Sets the value of the AcknowledgeDueDate property",
            "format": "date-time",
            "nullable": true
          },
          "acknowledgeDueDays": {
            "type": "integer",
            "description": "Gets or Sets the value of the AcknowledgeDueDays property",
            "format": "int32"
          },
          "responseDueDate": {
            "type": "string",
            "description": "Gets or Sets the value of the ResponseDueDate property",
            "format": "date-time",
            "nullable": true
          },
          "responseDueDays": {
            "type": "integer",
            "description": "Gets or Sets the value of the ResponseDueDays property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionOrder required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDocIssueOrder(System.String,System.Int32,System.String,System.String,System.DateTime,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32,System.DateTime,System.Int32)"
      },
      "DistributionOrderDocumentPost": {
        "type": "object",
        "properties": {
          "distributionOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionOrderDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDistributionOrderDocument(System.String,System.Int32,System.Int32)"
      },
      "DistributionOrderRecipientPost": {
        "type": "object",
        "properties": {
          "distributionOrder": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "comment": {
            "type": "string",
            "description": "Gets or Sets the value of the Comment property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionOrderRecipient required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDistributionOrderRecipient(System.String,System.Int32,System.Int32,System.String)"
      },
      "DistributionOrderRecipientPatch": {
        "type": "object",
        "properties": {
          "distributionOrder": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "person": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "comment": {
            "type": "string",
            "description": "Gets or Sets the value of the Comment property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionOrderRecipient required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDistributionOrderRecipient(System.String,System.Int32,System.Int32,System.String)"
      },
      "DistributionReasonPost": {
        "required": [
          "defaultNotify",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "defaultNotify": {
            "type": "boolean",
            "description": "Gets or Sets the value of the DefaultNotify property"
          },
          "isAckRequired": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsAckRequired property"
          },
          "isResponseRequired": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsResponseRequired property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionReason required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDistReason(System.String,System.String,System.String,System.String,System.String)"
      },
      "DistributionReasonPatch": {
        "required": [
          "defaultNotify",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "defaultNotify": {
            "type": "boolean",
            "description": "Gets or Sets the value of the DefaultNotify property"
          },
          "isAckRequired": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsAckRequired property"
          },
          "isResponseRequired": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsResponseRequired property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DistributionReason required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDistReason(System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "DocumentPost": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "middle": {
            "type": "string",
            "description": "Gets or Sets the value of the Middle property",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "synopsis": {
            "type": "string",
            "description": "Gets or Sets the value of the Synopsis property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Document required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDocument(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "DocumentPatch": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "middle": {
            "type": "string",
            "description": "Gets or Sets the value of the Middle property",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "changeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the ChangeControlled property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "synopsis": {
            "type": "string",
            "description": "Gets or Sets the value of the Synopsis property",
            "nullable": true
          },
          "dateEffective": {
            "type": "string",
            "description": "Gets or Sets the value of the DateEffective property",
            "format": "date-time",
            "nullable": true
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Document required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgDocument(System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)"
      },
      "DocumentCopyPost": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "copyType": {
            "type": "string",
            "description": "Gets or Sets the value of the CopyType property",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "repositoryGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "purpose": {
            "type": "integer",
            "description": "Gets or Sets the value of the Purpose property",
            "format": "int32"
          },
          "mediaType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "remark": {
            "type": "string",
            "description": "Gets or Sets the value of the Remark property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.DocumentCopy required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddDocCopy(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)"
      },
      "ActivityReferencePost": {
        "type": "object",
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "reference": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "flag": {
            "type": "integer",
            "description": "Gets or Sets the value of the Flag property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ActivityReference required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddActivityReference(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "ActivityTypeSetPost": {
        "required": [
          "description",
          "isAutoScheduled",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "isAutoScheduled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsAutoScheduled property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ActivityTypeSet required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddActivityTypeSet(System.String,System.String,System.String,System.String)"
      },
      "ActivityTypeSetPatch": {
        "required": [
          "description",
          "isAutoScheduled",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "isAutoScheduled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsAutoScheduled property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ActivityTypeSet required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgActivityTypeSet(System.String,System.Int32,System.String,System.String,System.String)"
      },
      "ActivityTypeSetItemPost": {
        "type": "object",
        "properties": {
          "activityTypeSet": {
            "$ref": "#/components/schemas/IdPost"
          },
          "lineItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "type": "integer",
            "description": "Gets or Sets the value of the Priority property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ActivityTypeSetItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddActivityTypeSetItem(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "ActivityTypeSetItemPatch": {
        "type": "object",
        "properties": {
          "activityTypeSet": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "lineItem": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "type": "integer",
            "description": "Gets or Sets the value of the Priority property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ActivityTypeSetItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgActivityTypeSetItem(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "AffectedDocumentPost": {
        "type": "object",
        "properties": {
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "current": {
            "$ref": "#/components/schemas/IdPost"
          },
          "isMovedForward": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMovedForward property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AffectedDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAffectedObject(System.String,System.Int32,System.Int32,System.Int32,System.Int32)"
      },
      "AlternativeNumberPost": {
        "type": "object",
        "properties": {
          "alternativeNumberDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AlternativeNumber required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAlternativeNumber(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "AlternativeNumberPatch": {
        "type": "object",
        "properties": {
          "alternativeNumberDef": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "description": "Gets or Sets the value of the Revision property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AlternativeNumber required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAlternativeNumber(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)"
      },
      "AlternativeNumberDefPost": {
        "required": [
          "code",
          "isInteral",
          "leftName",
          "objectType",
          "owner",
          "rightName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "leftName": {
            "type": "string",
            "description": "Gets or Sets the value of the LeftName property"
          },
          "rightName": {
            "type": "string",
            "description": "Gets or Sets the value of the RightName property"
          },
          "objectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ObjectType property",
            "format": "int32"
          },
          "owner": {
            "type": "string",
            "description": "Gets or Sets the value of the Owner property"
          },
          "isInteral": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsInteral property"
          },
          "numLeft": {
            "type": "integer",
            "description": "Gets or Sets the value of the NumLeft property",
            "format": "int32"
          },
          "numRight": {
            "type": "integer",
            "description": "Gets or Sets the value of the NumRight property",
            "format": "int32"
          },
          "transferOnUprev": {
            "type": "boolean",
            "description": "Gets or Sets the value of the TransferOnUprev property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AlternativeNumberDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAlternativeNumberDef(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String)"
      },
      "AlternativeNumberDefPatch": {
        "required": [
          "code",
          "isInteral",
          "leftName",
          "objectType",
          "owner",
          "rightName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property",
            "nullable": true
          },
          "leftName": {
            "type": "string",
            "description": "Gets or Sets the value of the LeftName property"
          },
          "rightName": {
            "type": "string",
            "description": "Gets or Sets the value of the RightName property"
          },
          "objectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ObjectType property",
            "format": "int32"
          },
          "owner": {
            "type": "string",
            "description": "Gets or Sets the value of the Owner property"
          },
          "isInteral": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsInteral property"
          },
          "numLeft": {
            "type": "integer",
            "description": "Gets or Sets the value of the NumLeft property",
            "format": "int32"
          },
          "numRight": {
            "type": "integer",
            "description": "Gets or Sets the value of the NumRight property",
            "format": "int32"
          },
          "transferOnUprev": {
            "type": "boolean",
            "description": "Gets or Sets the value of the TransferOnUprev property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AlternativeNumberDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAlternativeNumberDef(System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String)"
      },
      "AnswerPost": {
        "required": [
          "name",
          "question",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "weight": {
            "type": "integer",
            "description": "Gets or Sets the value of the Weight property",
            "format": "int32"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "requireComment": {
            "type": "boolean",
            "description": "Gets or Sets the value of the RequireComment property"
          },
          "displayAmount": {
            "type": "boolean",
            "description": "Gets or Sets the value of the DisplayAmount property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Answer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAnswer(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)"
      },
      "AnswerPatch": {
        "required": [
          "name",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "weight": {
            "type": "integer",
            "description": "Gets or Sets the value of the Weight property",
            "format": "int32"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "requireComment": {
            "type": "boolean",
            "description": "Gets or Sets the value of the RequireComment property"
          },
          "displayAmount": {
            "type": "boolean",
            "description": "Gets or Sets the value of the DisplayAmount property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Answer required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAnswer(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String)"
      },
      "AttributePatch": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "value": {
            "type": "object",
            "description": "Gets or Sets the value of the Value property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Attribute required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgCharData(System.String,System.Int32,System.Int32,System.Object)"
      },
      "AttributeDefPost": {
        "required": [
          "dataType",
          "hasLookup",
          "isChangeControlled",
          "isMandatory",
          "isMultiValued",
          "name",
          "objectType"
        ],
        "type": "object",
        "properties": {
          "objectType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ObjectType property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "dataType": {
            "type": "string",
            "description": "Gets or Sets the value of the DataType property"
          },
          "length": {
            "type": "integer",
            "description": "Gets or Sets the value of the Length property",
            "format": "int32"
          },
          "scale": {
            "type": "integer",
            "description": "Gets or Sets the value of the Scale property",
            "format": "int32"
          },
          "baseUnit": {
            "type": "string",
            "description": "Gets or Sets the value of the BaseUnit property",
            "nullable": true
          },
          "isChangeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsChangeControlled property"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMandatory property"
          },
          "isMultiValued": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMultiValued property"
          },
          "mask": {
            "type": "string",
            "description": "Gets or Sets the value of the Mask property",
            "nullable": true
          },
          "hasLookup": {
            "type": "boolean",
            "description": "Gets or Sets the value of the HasLookup property"
          },
          "dataSource": {
            "type": "string",
            "description": "Gets or Sets the value of the DataSource property",
            "nullable": true
          },
          "editQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the EditQuery property",
            "nullable": true
          },
          "searchQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the SearchQuery property",
            "nullable": true
          },
          "hasValueDescription": {
            "type": "boolean",
            "description": "Gets or Sets the value of the HasValueDescription property"
          },
          "stateMachine": {
            "$ref": "#/components/schemas/IdPost"
          },
          "dataTypeConstraints": {
            "type": "integer",
            "description": "Gets or Sets the value of the DataTypeConstraints property",
            "format": "int32"
          },
          "permMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the PermMask property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddCharacteristic(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "AttributeDefPatch": {
        "required": [
          "dataType",
          "hasLookup",
          "isChangeControlled",
          "isMandatory",
          "isMultiValued",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "dataType": {
            "type": "string",
            "description": "Gets or Sets the value of the DataType property"
          },
          "length": {
            "type": "integer",
            "description": "Gets or Sets the value of the Length property",
            "format": "int32"
          },
          "scale": {
            "type": "integer",
            "description": "Gets or Sets the value of the Scale property",
            "format": "int32"
          },
          "baseUnit": {
            "type": "string",
            "description": "Gets or Sets the value of the BaseUnit property",
            "nullable": true
          },
          "isChangeControlled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsChangeControlled property"
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMandatory property"
          },
          "isMultiValued": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsMultiValued property"
          },
          "mask": {
            "type": "string",
            "description": "Gets or Sets the value of the Mask property",
            "nullable": true
          },
          "hasLookup": {
            "type": "boolean",
            "description": "Gets or Sets the value of the HasLookup property"
          },
          "dataSource": {
            "type": "string",
            "description": "Gets or Sets the value of the DataSource property",
            "nullable": true
          },
          "editQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the EditQuery property",
            "nullable": true
          },
          "searchQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the SearchQuery property",
            "nullable": true
          },
          "hasValueDescription": {
            "type": "boolean",
            "description": "Gets or Sets the value of the HasValueDescription property"
          },
          "stateMachine": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "dataTypeConstraints": {
            "type": "integer",
            "description": "Gets or Sets the value of the DataTypeConstraints property",
            "format": "int32"
          },
          "permMask": {
            "type": "integer",
            "description": "Gets or Sets the value of the PermMask property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgCharacteristic(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"
      },
      "AttributeDependencyPost": {
        "required": [
          "child",
          "context",
          "parent"
        ],
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/IdPost"
          },
          "child": {
            "$ref": "#/components/schemas/IdPost"
          },
          "context": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "behavior": {
            "type": "integer",
            "description": "Gets or Sets the value of the Behavior property",
            "format": "int32"
          },
          "paramName": {
            "type": "string",
            "description": "Gets or Sets the value of the ParamName property",
            "nullable": true
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeDependency required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAttributeDependency(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)"
      },
      "AttributeGroupPost": {
        "required": [
          "class",
          "name"
        ],
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAttributeGroup(System.String,System.Int32,System.String,System.Int32)"
      },
      "AttributeGroupPatch": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAttributeGroup(System.String,System.Int32,System.String,System.Int32)"
      },
      "AttributeGroupMemberPost": {
        "type": "object",
        "properties": {
          "attributeGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeGroupMember required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAttributeGroupMember(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "AttributeGroupMemberPatch": {
        "type": "object",
        "properties": {
          "attributeGroup": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "attributeDef": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeGroupMember required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAttributeGroupMember(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "AttributeTableColumnDefPost": {
        "required": [
          "name",
          "sequenceNo"
        ],
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sequenceNo": {
            "type": "integer",
            "description": "Gets or Sets the value of the SequenceNo property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "dataType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeTableColumnDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAttributeTableColumn(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "AttributeTableColumnDefPatch": {
        "required": [
          "name",
          "sequenceNo"
        ],
        "type": "object",
        "properties": {
          "sequenceNo": {
            "type": "integer",
            "description": "Gets or Sets the value of the SequenceNo property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "dataType": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeTableColumnDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAttributeTableColumn(System.String,System.Int32,System.Int32,System.String,System.Int32)"
      },
      "AttributeTypeDefPost": {
        "required": [
          "code",
          "dataType",
          "description",
          "hasLookup",
          "isNullable"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "dataType": {
            "type": "string",
            "description": "Gets or Sets the value of the DataType property"
          },
          "isNullable": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsNullable property"
          },
          "hasLookup": {
            "type": "boolean",
            "description": "Gets or Sets the value of the HasLookup property"
          },
          "dataSource": {
            "type": "string",
            "description": "Gets or Sets the value of the DataSource property",
            "nullable": true
          },
          "editQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the EditQuery property",
            "nullable": true
          },
          "lookupQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the LookupQuery property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeTypeDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAttributeDataType(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "AttributeTypeDefPatch": {
        "required": [
          "code",
          "dataType",
          "description",
          "hasLookup",
          "isNullable"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "dataType": {
            "type": "string",
            "description": "Gets or Sets the value of the DataType property"
          },
          "isNullable": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsNullable property"
          },
          "hasLookup": {
            "type": "boolean",
            "description": "Gets or Sets the value of the HasLookup property"
          },
          "dataSource": {
            "type": "string",
            "description": "Gets or Sets the value of the DataSource property",
            "nullable": true
          },
          "editQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the EditQuery property",
            "nullable": true
          },
          "lookupQuery": {
            "type": "string",
            "description": "Gets or Sets the value of the LookupQuery property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeTypeDef required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAttributeDataType(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)"
      },
      "AttributeUnitPost": {
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "kindOfQuantity": {
            "$ref": "#/components/schemas/IdPost"
          },
          "unit": {
            "$ref": "#/components/schemas/IdPost"
          },
          "lowValue": {
            "type": "number",
            "description": "Gets or Sets the value of the LowValue property",
            "format": "double",
            "nullable": true
          },
          "highValue": {
            "type": "number",
            "description": "Gets or Sets the value of the HighValue property",
            "format": "double",
            "nullable": true
          },
          "varianceValue": {
            "type": "number",
            "description": "Gets or Sets the value of the VarianceValue property",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeUnit required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAttributeUnit(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})"
      },
      "AttributeUnitPatch": {
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "object": {
            "$ref": "#/components/schemas/IdTypePatch"
          },
          "kindOfQuantity": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "unit": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "lowValue": {
            "type": "number",
            "description": "Gets or Sets the value of the LowValue property",
            "format": "double",
            "nullable": true
          },
          "highValue": {
            "type": "number",
            "description": "Gets or Sets the value of the HighValue property",
            "format": "double",
            "nullable": true
          },
          "varianceValue": {
            "type": "number",
            "description": "Gets or Sets the value of the VarianceValue property",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeUnit required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAttributeUnit(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})"
      },
      "AttributeValueListPost": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "attributeDef": {
            "$ref": "#/components/schemas/IdPost"
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property"
          },
          "isObsolete": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsObsolete property"
          },
          "valueDescription": {
            "type": "string",
            "description": "Gets or Sets the value of the ValueDescription property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeValueList required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddCharUserDefined2(System.String,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "AttributeValueListPatch": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Gets or Sets the value of the Value property"
          },
          "isObsolete": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsObsolete property"
          },
          "valueDescription": {
            "type": "string",
            "description": "Gets or Sets the value of the ValueDescription property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AttributeValueList required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgCharUserDefined2(System.String,System.Int32,System.String,System.String,System.String,System.Int32)"
      },
      "AutomationPost": {
        "required": [
          "autoOnly",
          "isAsync",
          "isEnabled",
          "isExtention",
          "isInternal",
          "name"
        ],
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IdTypePost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "isExtention": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsExtention property"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "autoOnly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AutoOnly property"
          },
          "isAsync": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsAsync property"
          },
          "isInternal": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsInternal property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "runAs": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Automation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAutomation(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "AutomationPatch": {
        "required": [
          "autoOnly",
          "isAsync",
          "isEnabled",
          "isExtention",
          "isInternal",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "isExtention": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsExtention property"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsEnabled property"
          },
          "autoOnly": {
            "type": "boolean",
            "description": "Gets or Sets the value of the AutoOnly property"
          },
          "isAsync": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsAsync property"
          },
          "isInternal": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsInternal property"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          },
          "runAs": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Automation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAutomation(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)"
      },
      "AutomationActionPost": {
        "type": "object",
        "properties": {
          "automation": {
            "$ref": "#/components/schemas/IdPost"
          },
          "action": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AutomationAction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAutomationAction(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "AutomationActionPatch": {
        "type": "object",
        "properties": {
          "automation": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "action": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "sequence": {
            "type": "integer",
            "description": "Gets or Sets the value of the Sequence property",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AutomationAction required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgAutomationAction(System.String,System.Int32,System.Int32,System.Int32)"
      },
      "AutomationDbEventPost": {
        "required": [
          "automation",
          "dbEvent"
        ],
        "type": "object",
        "properties": {
          "automation": {
            "$ref": "#/components/schemas/IdPost"
          },
          "dbEvent": {
            "$ref": "#/components/schemas/IdPost"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.AutomationDbEvent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddAutomationEvent(System.String,System.Int32,System.Int32)"
      },
      "BudgetPost": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "currency",
          "description",
          "financialYear",
          "name",
          "thresholdValue",
          "thresholdWarningType"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "financialYear": {
            "$ref": "#/components/schemas/IdPost"
          },
          "currency": {
            "type": "string",
            "description": "Gets or Sets the value of the Currency property"
          },
          "allocation": {
            "type": "number",
            "description": "Gets or Sets the value of the Allocation property",
            "format": "double",
            "nullable": true
          },
          "committed": {
            "type": "number",
            "description": "Gets or Sets the value of the Committed property",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "description": "Gets or Sets the value of the Actual property",
            "format": "double"
          },
          "thresholdValue": {
            "type": "number",
            "description": "Gets or Sets the value of the ThresholdValue property",
            "format": "double"
          },
          "thresholdWarningType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ThresholdWarningType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Budget required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddBudget(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Nullable{System.Decimal},System.Decimal,System.Decimal,System.Decimal,System.Int32)"
      },
      "BudgetPatch": {
        "required": [
          "approvalStatus",
          "class",
          "code",
          "currency",
          "description",
          "financialYear",
          "name",
          "thresholdValue",
          "thresholdWarningType"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprovalStatus property"
          },
          "financialYear": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "currency": {
            "type": "string",
            "description": "Gets or Sets the value of the Currency property"
          },
          "allocation": {
            "type": "number",
            "description": "Gets or Sets the value of the Allocation property",
            "format": "double",
            "nullable": true
          },
          "committed": {
            "type": "number",
            "description": "Gets or Sets the value of the Committed property",
            "format": "double"
          },
          "actual": {
            "type": "number",
            "description": "Gets or Sets the value of the Actual property",
            "format": "double"
          },
          "thresholdValue": {
            "type": "number",
            "description": "Gets or Sets the value of the ThresholdValue property",
            "format": "double"
          },
          "thresholdWarningType": {
            "type": "integer",
            "description": "Gets or Sets the value of the ThresholdWarningType property",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Budget required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgBudget(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Nullable{System.Decimal},System.Decimal,System.Decimal,System.Decimal,System.Int32)"
      },
      "BudgetDocumentPost": {
        "required": [
          "budget",
          "document",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "budget": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.BudgetDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestPost": {
        "required": [
          "category",
          "code",
          "description",
          "organization",
          "priority",
          "reason",
          "requestedBy"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "requestedBy": {
            "$ref": "#/components/schemas/IdPost"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPost"
          },
          "category": {
            "type": "string",
            "description": "Gets or Sets the value of the Category property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "reason": {
            "type": "string",
            "description": "Gets or Sets the value of the Reason property"
          },
          "dateRegistered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRegistered property",
            "format": "date-time",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequest required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddChangeRequest(System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime,System.Int32)"
      },
      "ChangeRequestPatch": {
        "required": [
          "category",
          "code",
          "description",
          "organization",
          "priority",
          "reason",
          "requestedBy"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "requestedBy": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityRefPatch"
          },
          "category": {
            "type": "string",
            "description": "Gets or Sets the value of the Category property"
          },
          "status": {
            "type": "string",
            "description": "Gets or Sets the value of the Status property",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "reason": {
            "type": "string",
            "description": "Gets or Sets the value of the Reason property"
          },
          "dateRegistered": {
            "type": "string",
            "description": "Gets or Sets the value of the DateRegistered property",
            "format": "date-time",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "dateApprOrReject": {
            "type": "string",
            "description": "Gets or Sets the value of the DateApprOrReject property",
            "format": "date-time",
            "nullable": true
          },
          "apprOrRejectBy": {
            "$ref": "#/components/schemas/IdPatch"
          },
          "apprOrRejectReason": {
            "type": "string",
            "description": "Gets or Sets the value of the ApprOrRejectReason property",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequest required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgChangeRequest(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.DateTime,System.Int32,System.String)"
      },
      "ChangeRequestChangeRequestPost": {
        "required": [
          "left",
          "relationshipType",
          "right"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "left": {
            "$ref": "#/components/schemas/IdPost"
          },
          "right": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestChangeRequest required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestDocumentPost": {
        "required": [
          "changeRequest",
          "document",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "document": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestDocument required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestEventPost": {
        "required": [
          "changeRequest",
          "event",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "event": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestEvent required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestExternalObjectPost": {
        "required": [
          "changeRequest",
          "externalObject",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "externalObject": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestExternalObject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestGroupedVirtualItemPost": {
        "required": [
          "changeRequest",
          "groupedVirtualItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "groupedVirtualItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestGroupedVirtualItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestLocationPost": {
        "required": [
          "changeRequest",
          "location",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "location": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestLocation required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestModificationPost": {
        "required": [
          "changeRequest",
          "modification",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "modification": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestModification required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestOrganizationPost": {
        "required": [
          "changeRequest",
          "organization",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "organization": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestOrganization required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestPersonPost": {
        "required": [
          "changeRequest",
          "person",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "person": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestPerson required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestPhysicalItemPost": {
        "required": [
          "changeRequest",
          "physicalItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "physicalItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestPhysicalItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestPriorityPost": {
        "required": [
          "name",
          "priority"
        ],
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "description": "Gets or Sets the value of the Priority property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestPriority required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddPriority(System.String,System.Int32,System.Int32,System.String)"
      },
      "ChangeRequestPriorityPatch": {
        "required": [
          "name",
          "priority"
        ],
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "description": "Gets or Sets the value of the Priority property",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestPriority required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.ChgPriority(System.String,System.Int32,System.Int32,System.String)"
      },
      "ChangeRequestProjectPost": {
        "required": [
          "changeRequest",
          "project",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "project": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestProject required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestProjectWiseItemPost": {
        "required": [
          "changeRequest",
          "projectWiseItem",
          "relationshipType"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "projectWiseItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestProjectWiseItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestSerializedItemPost": {
        "required": [
          "changeRequest",
          "relationshipType",
          "serializedItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "serializedItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestSerializedItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestSharePointItemPost": {
        "required": [
          "changeRequest",
          "relationshipType",
          "sharePointItem"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "sharePointItem": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestSharePointItem required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestTagPost": {
        "required": [
          "changeRequest",
          "relationshipType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "tag": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestTag required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ChangeRequestVirtualItemGroupPost": {
        "required": [
          "changeRequest",
          "relationshipType",
          "virtualItemGroup"
        ],
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/IdPost"
          },
          "changeRequest": {
            "$ref": "#/components/schemas/IdPost"
          },
          "virtualItemGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.ChangeRequestVirtualItemGroup required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddRelationship(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})"
      },
      "ClassPost": {
        "required": [
          "accessModifier",
          "classGroup",
          "code",
          "description",
          "isSyncTracked",
          "name",
          "sysType"
        ],
        "type": "object",
        "properties": {
          "classGroup": {
            "$ref": "#/components/schemas/IdPost"
          },
          "code": {
            "type": "string",
            "description": "Gets or Sets the value of the Code property"
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets the value of the Name property"
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets the value of the Description property"
          },
          "sysType": {
            "type": "string",
            "description": "Gets or Sets the value of the SysType property"
          },
          "dateObsolete": {
            "type": "string",
            "description": "Gets or Sets the value of the DateObsolete property",
            "format": "date-time",
            "nullable": true
          },
          "accessModifier": {
            "type": "string",
            "description": "Gets or Sets the value of the AccessModifier property"
          },
          "isSyncTracked": {
            "type": "boolean",
            "description": "Gets or Sets the value of the IsSyncTracked property"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Defines the subset properties of eB.Data.Contract.Class required to successfully call M:Bentley.eB.ServiceModel.IDataWriter.AddClass(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.String,System.String)"
      }
    }
  }
}